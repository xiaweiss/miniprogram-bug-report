{"version":3,"sources":["../src/encoding-he.ts","../src/encoding.ts","../src/h.ts","../src/html.ts","../src/vcss.ts","../src/vdom.ts","../src/utils.ts","../src/htmlparser.ts","../src/vdomparser.ts","../src/tidy.ts","../src/xml.ts"],"sourcesContent":["// @ts-nocheck\n\n/*! https://mths.be/he v1.2.0 by @mathias | MIT license */\n// Modifications by Dirk Holtwick, 2022\n\n// All astral symbols.\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\n// All ASCII symbols (not just printable ASCII) except those listed in the\n// first column of the overrides table.\n// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides\nvar regexAsciiWhitelist = /[\\x01-\\x7F]/g\n// All BMP symbols that are not ASCII newlines, printable ASCII symbols, or\n// code points listed in the first column of the overrides table on\n// https://html.spec.whatwg.org/multipage/syntax.html#table-charref-overrides.\nvar regexBmpWhitelist =\n  /[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\n\nvar regexEncodeNonAscii =\n  /<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g\nvar encodeMap = {\n  \"\\xAD\": \"shy\",\n  \"\\u200C\": \"zwnj\",\n  \"\\u200D\": \"zwj\",\n  \"\\u200E\": \"lrm\",\n  \"\\u2063\": \"ic\",\n  \"\\u2062\": \"it\",\n  \"\\u2061\": \"af\",\n  \"\\u200F\": \"rlm\",\n  \"\\u200B\": \"ZeroWidthSpace\",\n  \"\\u2060\": \"NoBreak\",\n  \"\\u0311\": \"DownBreve\",\n  \"\\u20DB\": \"tdot\",\n  \"\\u20DC\": \"DotDot\",\n  \"\\t\": \"Tab\",\n  \"\\n\": \"NewLine\",\n  \"\\u2008\": \"puncsp\",\n  \"\\u205F\": \"MediumSpace\",\n  \"\\u2009\": \"thinsp\",\n  \"\\u200A\": \"hairsp\",\n  \"\\u2004\": \"emsp13\",\n  \"\\u2002\": \"ensp\",\n  \"\\u2005\": \"emsp14\",\n  \"\\u2003\": \"emsp\",\n  \"\\u2007\": \"numsp\",\n  \"\\xA0\": \"nbsp\",\n  \"\\u205F\\u200A\": \"ThickSpace\",\n  \"\\u203E\": \"oline\",\n  _: \"lowbar\",\n  \"\\u2010\": \"dash\",\n  \"\\u2013\": \"ndash\",\n  \"\\u2014\": \"mdash\",\n  \"\\u2015\": \"horbar\",\n  \",\": \"comma\",\n  \";\": \"semi\",\n  \"\\u204F\": \"bsemi\",\n  \":\": \"colon\",\n  \"\\u2A74\": \"Colone\",\n  \"!\": \"excl\",\n  \"\\xA1\": \"iexcl\",\n  \"?\": \"quest\",\n  \"\\xBF\": \"iquest\",\n  \".\": \"period\",\n  \"\\u2025\": \"nldr\",\n  \"\\u2026\": \"mldr\",\n  \"\\xB7\": \"middot\",\n  \"'\": \"apos\",\n  \"\\u2018\": \"lsquo\",\n  \"\\u2019\": \"rsquo\",\n  \"\\u201A\": \"sbquo\",\n  \"\\u2039\": \"lsaquo\",\n  \"\\u203A\": \"rsaquo\",\n  '\"': \"quot\",\n  \"\\u201C\": \"ldquo\",\n  \"\\u201D\": \"rdquo\",\n  \"\\u201E\": \"bdquo\",\n  \"\\xAB\": \"laquo\",\n  \"\\xBB\": \"raquo\",\n  \"(\": \"lpar\",\n  \")\": \"rpar\",\n  \"[\": \"lsqb\",\n  \"]\": \"rsqb\",\n  \"{\": \"lcub\",\n  \"}\": \"rcub\",\n  \"\\u2308\": \"lceil\",\n  \"\\u2309\": \"rceil\",\n  \"\\u230A\": \"lfloor\",\n  \"\\u230B\": \"rfloor\",\n  \"\\u2985\": \"lopar\",\n  \"\\u2986\": \"ropar\",\n  \"\\u298B\": \"lbrke\",\n  \"\\u298C\": \"rbrke\",\n  \"\\u298D\": \"lbrkslu\",\n  \"\\u298E\": \"rbrksld\",\n  \"\\u298F\": \"lbrksld\",\n  \"\\u2990\": \"rbrkslu\",\n  \"\\u2991\": \"langd\",\n  \"\\u2992\": \"rangd\",\n  \"\\u2993\": \"lparlt\",\n  \"\\u2994\": \"rpargt\",\n  \"\\u2995\": \"gtlPar\",\n  \"\\u2996\": \"ltrPar\",\n  \"\\u27E6\": \"lobrk\",\n  \"\\u27E7\": \"robrk\",\n  \"\\u27E8\": \"lang\",\n  \"\\u27E9\": \"rang\",\n  \"\\u27EA\": \"Lang\",\n  \"\\u27EB\": \"Rang\",\n  \"\\u27EC\": \"loang\",\n  \"\\u27ED\": \"roang\",\n  \"\\u2772\": \"lbbrk\",\n  \"\\u2773\": \"rbbrk\",\n  \"\\u2016\": \"Vert\",\n  \"\\xA7\": \"sect\",\n  \"\\xB6\": \"para\",\n  \"@\": \"commat\",\n  \"*\": \"ast\",\n  \"/\": \"sol\",\n  undefined: null,\n  \"&\": \"amp\",\n  \"#\": \"num\",\n  \"%\": \"percnt\",\n  \"\\u2030\": \"permil\",\n  \"\\u2031\": \"pertenk\",\n  \"\\u2020\": \"dagger\",\n  \"\\u2021\": \"Dagger\",\n  \"\\u2022\": \"bull\",\n  \"\\u2043\": \"hybull\",\n  \"\\u2032\": \"prime\",\n  \"\\u2033\": \"Prime\",\n  \"\\u2034\": \"tprime\",\n  \"\\u2057\": \"qprime\",\n  \"\\u2035\": \"bprime\",\n  \"\\u2041\": \"caret\",\n  \"`\": \"grave\",\n  \"\\xB4\": \"acute\",\n  \"\\u02DC\": \"tilde\",\n  \"^\": \"Hat\",\n  \"\\xAF\": \"macr\",\n  \"\\u02D8\": \"breve\",\n  \"\\u02D9\": \"dot\",\n  \"\\xA8\": \"die\",\n  \"\\u02DA\": \"ring\",\n  \"\\u02DD\": \"dblac\",\n  \"\\xB8\": \"cedil\",\n  \"\\u02DB\": \"ogon\",\n  \"\\u02C6\": \"circ\",\n  \"\\u02C7\": \"caron\",\n  \"\\xB0\": \"deg\",\n  \"\\xA9\": \"copy\",\n  \"\\xAE\": \"reg\",\n  \"\\u2117\": \"copysr\",\n  \"\\u2118\": \"wp\",\n  \"\\u211E\": \"rx\",\n  \"\\u2127\": \"mho\",\n  \"\\u2129\": \"iiota\",\n  \"\\u2190\": \"larr\",\n  \"\\u219A\": \"nlarr\",\n  \"\\u2192\": \"rarr\",\n  \"\\u219B\": \"nrarr\",\n  \"\\u2191\": \"uarr\",\n  \"\\u2193\": \"darr\",\n  \"\\u2194\": \"harr\",\n  \"\\u21AE\": \"nharr\",\n  \"\\u2195\": \"varr\",\n  \"\\u2196\": \"nwarr\",\n  \"\\u2197\": \"nearr\",\n  \"\\u2198\": \"searr\",\n  \"\\u2199\": \"swarr\",\n  \"\\u219D\": \"rarrw\",\n  \"\\u219D\\u0338\": \"nrarrw\",\n  \"\\u219E\": \"Larr\",\n  \"\\u219F\": \"Uarr\",\n  \"\\u21A0\": \"Rarr\",\n  \"\\u21A1\": \"Darr\",\n  \"\\u21A2\": \"larrtl\",\n  \"\\u21A3\": \"rarrtl\",\n  \"\\u21A4\": \"mapstoleft\",\n  \"\\u21A5\": \"mapstoup\",\n  \"\\u21A6\": \"map\",\n  \"\\u21A7\": \"mapstodown\",\n  \"\\u21A9\": \"larrhk\",\n  \"\\u21AA\": \"rarrhk\",\n  \"\\u21AB\": \"larrlp\",\n  \"\\u21AC\": \"rarrlp\",\n  \"\\u21AD\": \"harrw\",\n  \"\\u21B0\": \"lsh\",\n  \"\\u21B1\": \"rsh\",\n  \"\\u21B2\": \"ldsh\",\n  \"\\u21B3\": \"rdsh\",\n  \"\\u21B5\": \"crarr\",\n  \"\\u21B6\": \"cularr\",\n  \"\\u21B7\": \"curarr\",\n  \"\\u21BA\": \"olarr\",\n  \"\\u21BB\": \"orarr\",\n  \"\\u21BC\": \"lharu\",\n  \"\\u21BD\": \"lhard\",\n  \"\\u21BE\": \"uharr\",\n  \"\\u21BF\": \"uharl\",\n  \"\\u21C0\": \"rharu\",\n  \"\\u21C1\": \"rhard\",\n  \"\\u21C2\": \"dharr\",\n  \"\\u21C3\": \"dharl\",\n  \"\\u21C4\": \"rlarr\",\n  \"\\u21C5\": \"udarr\",\n  \"\\u21C6\": \"lrarr\",\n  \"\\u21C7\": \"llarr\",\n  \"\\u21C8\": \"uuarr\",\n  \"\\u21C9\": \"rrarr\",\n  \"\\u21CA\": \"ddarr\",\n  \"\\u21CB\": \"lrhar\",\n  \"\\u21CC\": \"rlhar\",\n  \"\\u21D0\": \"lArr\",\n  \"\\u21CD\": \"nlArr\",\n  \"\\u21D1\": \"uArr\",\n  \"\\u21D2\": \"rArr\",\n  \"\\u21CF\": \"nrArr\",\n  \"\\u21D3\": \"dArr\",\n  \"\\u21D4\": \"iff\",\n  \"\\u21CE\": \"nhArr\",\n  \"\\u21D5\": \"vArr\",\n  \"\\u21D6\": \"nwArr\",\n  \"\\u21D7\": \"neArr\",\n  \"\\u21D8\": \"seArr\",\n  \"\\u21D9\": \"swArr\",\n  \"\\u21DA\": \"lAarr\",\n  \"\\u21DB\": \"rAarr\",\n  \"\\u21DD\": \"zigrarr\",\n  \"\\u21E4\": \"larrb\",\n  \"\\u21E5\": \"rarrb\",\n  \"\\u21F5\": \"duarr\",\n  \"\\u21FD\": \"loarr\",\n  \"\\u21FE\": \"roarr\",\n  \"\\u21FF\": \"hoarr\",\n  \"\\u2200\": \"forall\",\n  \"\\u2201\": \"comp\",\n  \"\\u2202\": \"part\",\n  \"\\u2202\\u0338\": \"npart\",\n  \"\\u2203\": \"exist\",\n  \"\\u2204\": \"nexist\",\n  \"\\u2205\": \"empty\",\n  \"\\u2207\": \"Del\",\n  \"\\u2208\": \"in\",\n  \"\\u2209\": \"notin\",\n  \"\\u220B\": \"ni\",\n  \"\\u220C\": \"notni\",\n  \"\\u03F6\": \"bepsi\",\n  \"\\u220F\": \"prod\",\n  \"\\u2210\": \"coprod\",\n  \"\\u2211\": \"sum\",\n  \"+\": \"plus\",\n  \"\\xB1\": \"pm\",\n  \"\\xF7\": \"div\",\n  \"\\xD7\": \"times\",\n  \"<\": \"lt\",\n  \"\\u226E\": \"nlt\",\n  \"<\\u20D2\": \"nvlt\",\n  \"=\": \"equals\",\n  \"\\u2260\": \"ne\",\n  \"=\\u20E5\": \"bne\",\n  \"\\u2A75\": \"Equal\",\n  \">\": \"gt\",\n  \"\\u226F\": \"ngt\",\n  \">\\u20D2\": \"nvgt\",\n  \"\\xAC\": \"not\",\n  \"|\": \"vert\",\n  \"\\xA6\": \"brvbar\",\n  \"\\u2212\": \"minus\",\n  \"\\u2213\": \"mp\",\n  \"\\u2214\": \"plusdo\",\n  \"\\u2044\": \"frasl\",\n  \"\\u2216\": \"setmn\",\n  \"\\u2217\": \"lowast\",\n  \"\\u2218\": \"compfn\",\n  \"\\u221A\": \"Sqrt\",\n  \"\\u221D\": \"prop\",\n  \"\\u221E\": \"infin\",\n  \"\\u221F\": \"angrt\",\n  \"\\u2220\": \"ang\",\n  \"\\u2220\\u20D2\": \"nang\",\n  \"\\u2221\": \"angmsd\",\n  \"\\u2222\": \"angsph\",\n  \"\\u2223\": \"mid\",\n  \"\\u2224\": \"nmid\",\n  \"\\u2225\": \"par\",\n  \"\\u2226\": \"npar\",\n  \"\\u2227\": \"and\",\n  \"\\u2228\": \"or\",\n  \"\\u2229\": \"cap\",\n  \"\\u2229\\uFE00\": \"caps\",\n  \"\\u222A\": \"cup\",\n  \"\\u222A\\uFE00\": \"cups\",\n  \"\\u222B\": \"int\",\n  \"\\u222C\": \"Int\",\n  \"\\u222D\": \"tint\",\n  \"\\u2A0C\": \"qint\",\n  \"\\u222E\": \"oint\",\n  \"\\u222F\": \"Conint\",\n  \"\\u2230\": \"Cconint\",\n  \"\\u2231\": \"cwint\",\n  \"\\u2232\": \"cwconint\",\n  \"\\u2233\": \"awconint\",\n  \"\\u2234\": \"there4\",\n  \"\\u2235\": \"becaus\",\n  \"\\u2236\": \"ratio\",\n  \"\\u2237\": \"Colon\",\n  \"\\u2238\": \"minusd\",\n  \"\\u223A\": \"mDDot\",\n  \"\\u223B\": \"homtht\",\n  \"\\u223C\": \"sim\",\n  \"\\u2241\": \"nsim\",\n  \"\\u223C\\u20D2\": \"nvsim\",\n  \"\\u223D\": \"bsim\",\n  \"\\u223D\\u0331\": \"race\",\n  \"\\u223E\": \"ac\",\n  \"\\u223E\\u0333\": \"acE\",\n  \"\\u223F\": \"acd\",\n  \"\\u2240\": \"wr\",\n  \"\\u2242\": \"esim\",\n  \"\\u2242\\u0338\": \"nesim\",\n  \"\\u2243\": \"sime\",\n  \"\\u2244\": \"nsime\",\n  \"\\u2245\": \"cong\",\n  \"\\u2247\": \"ncong\",\n  \"\\u2246\": \"simne\",\n  \"\\u2248\": \"ap\",\n  \"\\u2249\": \"nap\",\n  \"\\u224A\": \"ape\",\n  \"\\u224B\": \"apid\",\n  \"\\u224B\\u0338\": \"napid\",\n  \"\\u224C\": \"bcong\",\n  \"\\u224D\": \"CupCap\",\n  \"\\u226D\": \"NotCupCap\",\n  \"\\u224D\\u20D2\": \"nvap\",\n  \"\\u224E\": \"bump\",\n  \"\\u224E\\u0338\": \"nbump\",\n  \"\\u224F\": \"bumpe\",\n  \"\\u224F\\u0338\": \"nbumpe\",\n  \"\\u2250\": \"doteq\",\n  \"\\u2250\\u0338\": \"nedot\",\n  \"\\u2251\": \"eDot\",\n  \"\\u2252\": \"efDot\",\n  \"\\u2253\": \"erDot\",\n  \"\\u2254\": \"colone\",\n  \"\\u2255\": \"ecolon\",\n  \"\\u2256\": \"ecir\",\n  \"\\u2257\": \"cire\",\n  \"\\u2259\": \"wedgeq\",\n  \"\\u225A\": \"veeeq\",\n  \"\\u225C\": \"trie\",\n  \"\\u225F\": \"equest\",\n  \"\\u2261\": \"equiv\",\n  \"\\u2262\": \"nequiv\",\n  \"\\u2261\\u20E5\": \"bnequiv\",\n  \"\\u2264\": \"le\",\n  \"\\u2270\": \"nle\",\n  \"\\u2264\\u20D2\": \"nvle\",\n  \"\\u2265\": \"ge\",\n  \"\\u2271\": \"nge\",\n  \"\\u2265\\u20D2\": \"nvge\",\n  \"\\u2266\": \"lE\",\n  \"\\u2266\\u0338\": \"nlE\",\n  \"\\u2267\": \"gE\",\n  \"\\u2267\\u0338\": \"ngE\",\n  \"\\u2268\\uFE00\": \"lvnE\",\n  \"\\u2268\": \"lnE\",\n  \"\\u2269\": \"gnE\",\n  \"\\u2269\\uFE00\": \"gvnE\",\n  \"\\u226A\": \"ll\",\n  \"\\u226A\\u0338\": \"nLtv\",\n  \"\\u226A\\u20D2\": \"nLt\",\n  \"\\u226B\": \"gg\",\n  \"\\u226B\\u0338\": \"nGtv\",\n  \"\\u226B\\u20D2\": \"nGt\",\n  \"\\u226C\": \"twixt\",\n  \"\\u2272\": \"lsim\",\n  \"\\u2274\": \"nlsim\",\n  \"\\u2273\": \"gsim\",\n  \"\\u2275\": \"ngsim\",\n  \"\\u2276\": \"lg\",\n  \"\\u2278\": \"ntlg\",\n  \"\\u2277\": \"gl\",\n  \"\\u2279\": \"ntgl\",\n  \"\\u227A\": \"pr\",\n  \"\\u2280\": \"npr\",\n  \"\\u227B\": \"sc\",\n  \"\\u2281\": \"nsc\",\n  \"\\u227C\": \"prcue\",\n  \"\\u22E0\": \"nprcue\",\n  \"\\u227D\": \"sccue\",\n  \"\\u22E1\": \"nsccue\",\n  \"\\u227E\": \"prsim\",\n  \"\\u227F\": \"scsim\",\n  \"\\u227F\\u0338\": \"NotSucceedsTilde\",\n  \"\\u2282\": \"sub\",\n  \"\\u2284\": \"nsub\",\n  \"\\u2282\\u20D2\": \"vnsub\",\n  \"\\u2283\": \"sup\",\n  \"\\u2285\": \"nsup\",\n  \"\\u2283\\u20D2\": \"vnsup\",\n  \"\\u2286\": \"sube\",\n  \"\\u2288\": \"nsube\",\n  \"\\u2287\": \"supe\",\n  \"\\u2289\": \"nsupe\",\n  \"\\u228A\\uFE00\": \"vsubne\",\n  \"\\u228A\": \"subne\",\n  \"\\u228B\\uFE00\": \"vsupne\",\n  \"\\u228B\": \"supne\",\n  \"\\u228D\": \"cupdot\",\n  \"\\u228E\": \"uplus\",\n  \"\\u228F\": \"sqsub\",\n  \"\\u228F\\u0338\": \"NotSquareSubset\",\n  \"\\u2290\": \"sqsup\",\n  \"\\u2290\\u0338\": \"NotSquareSuperset\",\n  \"\\u2291\": \"sqsube\",\n  \"\\u22E2\": \"nsqsube\",\n  \"\\u2292\": \"sqsupe\",\n  \"\\u22E3\": \"nsqsupe\",\n  \"\\u2293\": \"sqcap\",\n  \"\\u2293\\uFE00\": \"sqcaps\",\n  \"\\u2294\": \"sqcup\",\n  \"\\u2294\\uFE00\": \"sqcups\",\n  \"\\u2295\": \"oplus\",\n  \"\\u2296\": \"ominus\",\n  \"\\u2297\": \"otimes\",\n  \"\\u2298\": \"osol\",\n  \"\\u2299\": \"odot\",\n  \"\\u229A\": \"ocir\",\n  \"\\u229B\": \"oast\",\n  \"\\u229D\": \"odash\",\n  \"\\u229E\": \"plusb\",\n  \"\\u229F\": \"minusb\",\n  \"\\u22A0\": \"timesb\",\n  \"\\u22A1\": \"sdotb\",\n  \"\\u22A2\": \"vdash\",\n  \"\\u22AC\": \"nvdash\",\n  \"\\u22A3\": \"dashv\",\n  \"\\u22A4\": \"top\",\n  \"\\u22A5\": \"bot\",\n  \"\\u22A7\": \"models\",\n  \"\\u22A8\": \"vDash\",\n  \"\\u22AD\": \"nvDash\",\n  \"\\u22A9\": \"Vdash\",\n  \"\\u22AE\": \"nVdash\",\n  \"\\u22AA\": \"Vvdash\",\n  \"\\u22AB\": \"VDash\",\n  \"\\u22AF\": \"nVDash\",\n  \"\\u22B0\": \"prurel\",\n  \"\\u22B2\": \"vltri\",\n  \"\\u22EA\": \"nltri\",\n  \"\\u22B3\": \"vrtri\",\n  \"\\u22EB\": \"nrtri\",\n  \"\\u22B4\": \"ltrie\",\n  \"\\u22EC\": \"nltrie\",\n  \"\\u22B4\\u20D2\": \"nvltrie\",\n  \"\\u22B5\": \"rtrie\",\n  \"\\u22ED\": \"nrtrie\",\n  \"\\u22B5\\u20D2\": \"nvrtrie\",\n  \"\\u22B6\": \"origof\",\n  \"\\u22B7\": \"imof\",\n  \"\\u22B8\": \"mumap\",\n  \"\\u22B9\": \"hercon\",\n  \"\\u22BA\": \"intcal\",\n  \"\\u22BB\": \"veebar\",\n  \"\\u22BD\": \"barvee\",\n  \"\\u22BE\": \"angrtvb\",\n  \"\\u22BF\": \"lrtri\",\n  \"\\u22C0\": \"Wedge\",\n  \"\\u22C1\": \"Vee\",\n  \"\\u22C2\": \"xcap\",\n  \"\\u22C3\": \"xcup\",\n  \"\\u22C4\": \"diam\",\n  \"\\u22C5\": \"sdot\",\n  \"\\u22C6\": \"Star\",\n  \"\\u22C7\": \"divonx\",\n  \"\\u22C8\": \"bowtie\",\n  \"\\u22C9\": \"ltimes\",\n  \"\\u22CA\": \"rtimes\",\n  \"\\u22CB\": \"lthree\",\n  \"\\u22CC\": \"rthree\",\n  \"\\u22CD\": \"bsime\",\n  \"\\u22CE\": \"cuvee\",\n  \"\\u22CF\": \"cuwed\",\n  \"\\u22D0\": \"Sub\",\n  \"\\u22D1\": \"Sup\",\n  \"\\u22D2\": \"Cap\",\n  \"\\u22D3\": \"Cup\",\n  \"\\u22D4\": \"fork\",\n  \"\\u22D5\": \"epar\",\n  \"\\u22D6\": \"ltdot\",\n  \"\\u22D7\": \"gtdot\",\n  \"\\u22D8\": \"Ll\",\n  \"\\u22D8\\u0338\": \"nLl\",\n  \"\\u22D9\": \"Gg\",\n  \"\\u22D9\\u0338\": \"nGg\",\n  \"\\u22DA\\uFE00\": \"lesg\",\n  \"\\u22DA\": \"leg\",\n  \"\\u22DB\": \"gel\",\n  \"\\u22DB\\uFE00\": \"gesl\",\n  \"\\u22DE\": \"cuepr\",\n  \"\\u22DF\": \"cuesc\",\n  \"\\u22E6\": \"lnsim\",\n  \"\\u22E7\": \"gnsim\",\n  \"\\u22E8\": \"prnsim\",\n  \"\\u22E9\": \"scnsim\",\n  \"\\u22EE\": \"vellip\",\n  \"\\u22EF\": \"ctdot\",\n  \"\\u22F0\": \"utdot\",\n  \"\\u22F1\": \"dtdot\",\n  \"\\u22F2\": \"disin\",\n  \"\\u22F3\": \"isinsv\",\n  \"\\u22F4\": \"isins\",\n  \"\\u22F5\": \"isindot\",\n  \"\\u22F5\\u0338\": \"notindot\",\n  \"\\u22F6\": \"notinvc\",\n  \"\\u22F7\": \"notinvb\",\n  \"\\u22F9\": \"isinE\",\n  \"\\u22F9\\u0338\": \"notinE\",\n  \"\\u22FA\": \"nisd\",\n  \"\\u22FB\": \"xnis\",\n  \"\\u22FC\": \"nis\",\n  \"\\u22FD\": \"notnivc\",\n  \"\\u22FE\": \"notnivb\",\n  \"\\u2305\": \"barwed\",\n  \"\\u2306\": \"Barwed\",\n  \"\\u230C\": \"drcrop\",\n  \"\\u230D\": \"dlcrop\",\n  \"\\u230E\": \"urcrop\",\n  \"\\u230F\": \"ulcrop\",\n  \"\\u2310\": \"bnot\",\n  \"\\u2312\": \"profline\",\n  \"\\u2313\": \"profsurf\",\n  \"\\u2315\": \"telrec\",\n  \"\\u2316\": \"target\",\n  \"\\u231C\": \"ulcorn\",\n  \"\\u231D\": \"urcorn\",\n  \"\\u231E\": \"dlcorn\",\n  \"\\u231F\": \"drcorn\",\n  \"\\u2322\": \"frown\",\n  \"\\u2323\": \"smile\",\n  \"\\u232D\": \"cylcty\",\n  \"\\u232E\": \"profalar\",\n  \"\\u2336\": \"topbot\",\n  \"\\u233D\": \"ovbar\",\n  \"\\u233F\": \"solbar\",\n  \"\\u237C\": \"angzarr\",\n  \"\\u23B0\": \"lmoust\",\n  \"\\u23B1\": \"rmoust\",\n  \"\\u23B4\": \"tbrk\",\n  \"\\u23B5\": \"bbrk\",\n  \"\\u23B6\": \"bbrktbrk\",\n  \"\\u23DC\": \"OverParenthesis\",\n  \"\\u23DD\": \"UnderParenthesis\",\n  \"\\u23DE\": \"OverBrace\",\n  \"\\u23DF\": \"UnderBrace\",\n  \"\\u23E2\": \"trpezium\",\n  \"\\u23E7\": \"elinters\",\n  \"\\u2423\": \"blank\",\n  \"\\u2500\": \"boxh\",\n  \"\\u2502\": \"boxv\",\n  \"\\u250C\": \"boxdr\",\n  \"\\u2510\": \"boxdl\",\n  \"\\u2514\": \"boxur\",\n  \"\\u2518\": \"boxul\",\n  \"\\u251C\": \"boxvr\",\n  \"\\u2524\": \"boxvl\",\n  \"\\u252C\": \"boxhd\",\n  \"\\u2534\": \"boxhu\",\n  \"\\u253C\": \"boxvh\",\n  \"\\u2550\": \"boxH\",\n  \"\\u2551\": \"boxV\",\n  \"\\u2552\": \"boxdR\",\n  \"\\u2553\": \"boxDr\",\n  \"\\u2554\": \"boxDR\",\n  \"\\u2555\": \"boxdL\",\n  \"\\u2556\": \"boxDl\",\n  \"\\u2557\": \"boxDL\",\n  \"\\u2558\": \"boxuR\",\n  \"\\u2559\": \"boxUr\",\n  \"\\u255A\": \"boxUR\",\n  \"\\u255B\": \"boxuL\",\n  \"\\u255C\": \"boxUl\",\n  \"\\u255D\": \"boxUL\",\n  \"\\u255E\": \"boxvR\",\n  \"\\u255F\": \"boxVr\",\n  \"\\u2560\": \"boxVR\",\n  \"\\u2561\": \"boxvL\",\n  \"\\u2562\": \"boxVl\",\n  \"\\u2563\": \"boxVL\",\n  \"\\u2564\": \"boxHd\",\n  \"\\u2565\": \"boxhD\",\n  \"\\u2566\": \"boxHD\",\n  \"\\u2567\": \"boxHu\",\n  \"\\u2568\": \"boxhU\",\n  \"\\u2569\": \"boxHU\",\n  \"\\u256A\": \"boxvH\",\n  \"\\u256B\": \"boxVh\",\n  \"\\u256C\": \"boxVH\",\n  \"\\u2580\": \"uhblk\",\n  \"\\u2584\": \"lhblk\",\n  \"\\u2588\": \"block\",\n  \"\\u2591\": \"blk14\",\n  \"\\u2592\": \"blk12\",\n  \"\\u2593\": \"blk34\",\n  \"\\u25A1\": \"squ\",\n  \"\\u25AA\": \"squf\",\n  \"\\u25AB\": \"EmptyVerySmallSquare\",\n  \"\\u25AD\": \"rect\",\n  \"\\u25AE\": \"marker\",\n  \"\\u25B1\": \"fltns\",\n  \"\\u25B3\": \"xutri\",\n  \"\\u25B4\": \"utrif\",\n  \"\\u25B5\": \"utri\",\n  \"\\u25B8\": \"rtrif\",\n  \"\\u25B9\": \"rtri\",\n  \"\\u25BD\": \"xdtri\",\n  \"\\u25BE\": \"dtrif\",\n  \"\\u25BF\": \"dtri\",\n  \"\\u25C2\": \"ltrif\",\n  \"\\u25C3\": \"ltri\",\n  \"\\u25CA\": \"loz\",\n  \"\\u25CB\": \"cir\",\n  \"\\u25EC\": \"tridot\",\n  \"\\u25EF\": \"xcirc\",\n  \"\\u25F8\": \"ultri\",\n  \"\\u25F9\": \"urtri\",\n  \"\\u25FA\": \"lltri\",\n  \"\\u25FB\": \"EmptySmallSquare\",\n  \"\\u25FC\": \"FilledSmallSquare\",\n  \"\\u2605\": \"starf\",\n  \"\\u2606\": \"star\",\n  \"\\u260E\": \"phone\",\n  \"\\u2640\": \"female\",\n  \"\\u2642\": \"male\",\n  \"\\u2660\": \"spades\",\n  \"\\u2663\": \"clubs\",\n  \"\\u2665\": \"hearts\",\n  \"\\u2666\": \"diams\",\n  \"\\u266A\": \"sung\",\n  \"\\u2713\": \"check\",\n  \"\\u2717\": \"cross\",\n  \"\\u2720\": \"malt\",\n  \"\\u2736\": \"sext\",\n  \"\\u2758\": \"VerticalSeparator\",\n  \"\\u27C8\": \"bsolhsub\",\n  \"\\u27C9\": \"suphsol\",\n  \"\\u27F5\": \"xlarr\",\n  \"\\u27F6\": \"xrarr\",\n  \"\\u27F7\": \"xharr\",\n  \"\\u27F8\": \"xlArr\",\n  \"\\u27F9\": \"xrArr\",\n  \"\\u27FA\": \"xhArr\",\n  \"\\u27FC\": \"xmap\",\n  \"\\u27FF\": \"dzigrarr\",\n  \"\\u2902\": \"nvlArr\",\n  \"\\u2903\": \"nvrArr\",\n  \"\\u2904\": \"nvHarr\",\n  \"\\u2905\": \"Map\",\n  \"\\u290C\": \"lbarr\",\n  \"\\u290D\": \"rbarr\",\n  \"\\u290E\": \"lBarr\",\n  \"\\u290F\": \"rBarr\",\n  \"\\u2910\": \"RBarr\",\n  \"\\u2911\": \"DDotrahd\",\n  \"\\u2912\": \"UpArrowBar\",\n  \"\\u2913\": \"DownArrowBar\",\n  \"\\u2916\": \"Rarrtl\",\n  \"\\u2919\": \"latail\",\n  \"\\u291A\": \"ratail\",\n  \"\\u291B\": \"lAtail\",\n  \"\\u291C\": \"rAtail\",\n  \"\\u291D\": \"larrfs\",\n  \"\\u291E\": \"rarrfs\",\n  \"\\u291F\": \"larrbfs\",\n  \"\\u2920\": \"rarrbfs\",\n  \"\\u2923\": \"nwarhk\",\n  \"\\u2924\": \"nearhk\",\n  \"\\u2925\": \"searhk\",\n  \"\\u2926\": \"swarhk\",\n  \"\\u2927\": \"nwnear\",\n  \"\\u2928\": \"toea\",\n  \"\\u2929\": \"tosa\",\n  \"\\u292A\": \"swnwar\",\n  \"\\u2933\": \"rarrc\",\n  \"\\u2933\\u0338\": \"nrarrc\",\n  \"\\u2935\": \"cudarrr\",\n  \"\\u2936\": \"ldca\",\n  \"\\u2937\": \"rdca\",\n  \"\\u2938\": \"cudarrl\",\n  \"\\u2939\": \"larrpl\",\n  \"\\u293C\": \"curarrm\",\n  \"\\u293D\": \"cularrp\",\n  \"\\u2945\": \"rarrpl\",\n  \"\\u2948\": \"harrcir\",\n  \"\\u2949\": \"Uarrocir\",\n  \"\\u294A\": \"lurdshar\",\n  \"\\u294B\": \"ldrushar\",\n  \"\\u294E\": \"LeftRightVector\",\n  \"\\u294F\": \"RightUpDownVector\",\n  \"\\u2950\": \"DownLeftRightVector\",\n  \"\\u2951\": \"LeftUpDownVector\",\n  \"\\u2952\": \"LeftVectorBar\",\n  \"\\u2953\": \"RightVectorBar\",\n  \"\\u2954\": \"RightUpVectorBar\",\n  \"\\u2955\": \"RightDownVectorBar\",\n  \"\\u2956\": \"DownLeftVectorBar\",\n  \"\\u2957\": \"DownRightVectorBar\",\n  \"\\u2958\": \"LeftUpVectorBar\",\n  \"\\u2959\": \"LeftDownVectorBar\",\n  \"\\u295A\": \"LeftTeeVector\",\n  \"\\u295B\": \"RightTeeVector\",\n  \"\\u295C\": \"RightUpTeeVector\",\n  \"\\u295D\": \"RightDownTeeVector\",\n  \"\\u295E\": \"DownLeftTeeVector\",\n  \"\\u295F\": \"DownRightTeeVector\",\n  \"\\u2960\": \"LeftUpTeeVector\",\n  \"\\u2961\": \"LeftDownTeeVector\",\n  \"\\u2962\": \"lHar\",\n  \"\\u2963\": \"uHar\",\n  \"\\u2964\": \"rHar\",\n  \"\\u2965\": \"dHar\",\n  \"\\u2966\": \"luruhar\",\n  \"\\u2967\": \"ldrdhar\",\n  \"\\u2968\": \"ruluhar\",\n  \"\\u2969\": \"rdldhar\",\n  \"\\u296A\": \"lharul\",\n  \"\\u296B\": \"llhard\",\n  \"\\u296C\": \"rharul\",\n  \"\\u296D\": \"lrhard\",\n  \"\\u296E\": \"udhar\",\n  \"\\u296F\": \"duhar\",\n  \"\\u2970\": \"RoundImplies\",\n  \"\\u2971\": \"erarr\",\n  \"\\u2972\": \"simrarr\",\n  \"\\u2973\": \"larrsim\",\n  \"\\u2974\": \"rarrsim\",\n  \"\\u2975\": \"rarrap\",\n  \"\\u2976\": \"ltlarr\",\n  \"\\u2978\": \"gtrarr\",\n  \"\\u2979\": \"subrarr\",\n  \"\\u297B\": \"suplarr\",\n  \"\\u297C\": \"lfisht\",\n  \"\\u297D\": \"rfisht\",\n  \"\\u297E\": \"ufisht\",\n  \"\\u297F\": \"dfisht\",\n  \"\\u299A\": \"vzigzag\",\n  \"\\u299C\": \"vangrt\",\n  \"\\u299D\": \"angrtvbd\",\n  \"\\u29A4\": \"ange\",\n  \"\\u29A5\": \"range\",\n  \"\\u29A6\": \"dwangle\",\n  \"\\u29A7\": \"uwangle\",\n  \"\\u29A8\": \"angmsdaa\",\n  \"\\u29A9\": \"angmsdab\",\n  \"\\u29AA\": \"angmsdac\",\n  \"\\u29AB\": \"angmsdad\",\n  \"\\u29AC\": \"angmsdae\",\n  \"\\u29AD\": \"angmsdaf\",\n  \"\\u29AE\": \"angmsdag\",\n  \"\\u29AF\": \"angmsdah\",\n  \"\\u29B0\": \"bemptyv\",\n  \"\\u29B1\": \"demptyv\",\n  \"\\u29B2\": \"cemptyv\",\n  \"\\u29B3\": \"raemptyv\",\n  \"\\u29B4\": \"laemptyv\",\n  \"\\u29B5\": \"ohbar\",\n  \"\\u29B6\": \"omid\",\n  \"\\u29B7\": \"opar\",\n  \"\\u29B9\": \"operp\",\n  \"\\u29BB\": \"olcross\",\n  \"\\u29BC\": \"odsold\",\n  \"\\u29BE\": \"olcir\",\n  \"\\u29BF\": \"ofcir\",\n  \"\\u29C0\": \"olt\",\n  \"\\u29C1\": \"ogt\",\n  \"\\u29C2\": \"cirscir\",\n  \"\\u29C3\": \"cirE\",\n  \"\\u29C4\": \"solb\",\n  \"\\u29C5\": \"bsolb\",\n  \"\\u29C9\": \"boxbox\",\n  \"\\u29CD\": \"trisb\",\n  \"\\u29CE\": \"rtriltri\",\n  \"\\u29CF\": \"LeftTriangleBar\",\n  \"\\u29CF\\u0338\": \"NotLeftTriangleBar\",\n  \"\\u29D0\": \"RightTriangleBar\",\n  \"\\u29D0\\u0338\": \"NotRightTriangleBar\",\n  \"\\u29DC\": \"iinfin\",\n  \"\\u29DD\": \"infintie\",\n  \"\\u29DE\": \"nvinfin\",\n  \"\\u29E3\": \"eparsl\",\n  \"\\u29E4\": \"smeparsl\",\n  \"\\u29E5\": \"eqvparsl\",\n  \"\\u29EB\": \"lozf\",\n  \"\\u29F4\": \"RuleDelayed\",\n  \"\\u29F6\": \"dsol\",\n  \"\\u2A00\": \"xodot\",\n  \"\\u2A01\": \"xoplus\",\n  \"\\u2A02\": \"xotime\",\n  \"\\u2A04\": \"xuplus\",\n  \"\\u2A06\": \"xsqcup\",\n  \"\\u2A0D\": \"fpartint\",\n  \"\\u2A10\": \"cirfnint\",\n  \"\\u2A11\": \"awint\",\n  \"\\u2A12\": \"rppolint\",\n  \"\\u2A13\": \"scpolint\",\n  \"\\u2A14\": \"npolint\",\n  \"\\u2A15\": \"pointint\",\n  \"\\u2A16\": \"quatint\",\n  \"\\u2A17\": \"intlarhk\",\n  \"\\u2A22\": \"pluscir\",\n  \"\\u2A23\": \"plusacir\",\n  \"\\u2A24\": \"simplus\",\n  \"\\u2A25\": \"plusdu\",\n  \"\\u2A26\": \"plussim\",\n  \"\\u2A27\": \"plustwo\",\n  \"\\u2A29\": \"mcomma\",\n  \"\\u2A2A\": \"minusdu\",\n  \"\\u2A2D\": \"loplus\",\n  \"\\u2A2E\": \"roplus\",\n  \"\\u2A2F\": \"Cross\",\n  \"\\u2A30\": \"timesd\",\n  \"\\u2A31\": \"timesbar\",\n  \"\\u2A33\": \"smashp\",\n  \"\\u2A34\": \"lotimes\",\n  \"\\u2A35\": \"rotimes\",\n  \"\\u2A36\": \"otimesas\",\n  \"\\u2A37\": \"Otimes\",\n  \"\\u2A38\": \"odiv\",\n  \"\\u2A39\": \"triplus\",\n  \"\\u2A3A\": \"triminus\",\n  \"\\u2A3B\": \"tritime\",\n  \"\\u2A3C\": \"iprod\",\n  \"\\u2A3F\": \"amalg\",\n  \"\\u2A40\": \"capdot\",\n  \"\\u2A42\": \"ncup\",\n  \"\\u2A43\": \"ncap\",\n  \"\\u2A44\": \"capand\",\n  \"\\u2A45\": \"cupor\",\n  \"\\u2A46\": \"cupcap\",\n  \"\\u2A47\": \"capcup\",\n  \"\\u2A48\": \"cupbrcap\",\n  \"\\u2A49\": \"capbrcup\",\n  \"\\u2A4A\": \"cupcup\",\n  \"\\u2A4B\": \"capcap\",\n  \"\\u2A4C\": \"ccups\",\n  \"\\u2A4D\": \"ccaps\",\n  \"\\u2A50\": \"ccupssm\",\n  \"\\u2A53\": \"And\",\n  \"\\u2A54\": \"Or\",\n  \"\\u2A55\": \"andand\",\n  \"\\u2A56\": \"oror\",\n  \"\\u2A57\": \"orslope\",\n  \"\\u2A58\": \"andslope\",\n  \"\\u2A5A\": \"andv\",\n  \"\\u2A5B\": \"orv\",\n  \"\\u2A5C\": \"andd\",\n  \"\\u2A5D\": \"ord\",\n  \"\\u2A5F\": \"wedbar\",\n  \"\\u2A66\": \"sdote\",\n  \"\\u2A6A\": \"simdot\",\n  \"\\u2A6D\": \"congdot\",\n  \"\\u2A6D\\u0338\": \"ncongdot\",\n  \"\\u2A6E\": \"easter\",\n  \"\\u2A6F\": \"apacir\",\n  \"\\u2A70\": \"apE\",\n  \"\\u2A70\\u0338\": \"napE\",\n  \"\\u2A71\": \"eplus\",\n  \"\\u2A72\": \"pluse\",\n  \"\\u2A73\": \"Esim\",\n  \"\\u2A77\": \"eDDot\",\n  \"\\u2A78\": \"equivDD\",\n  \"\\u2A79\": \"ltcir\",\n  \"\\u2A7A\": \"gtcir\",\n  \"\\u2A7B\": \"ltquest\",\n  \"\\u2A7C\": \"gtquest\",\n  \"\\u2A7D\": \"les\",\n  \"\\u2A7D\\u0338\": \"nles\",\n  \"\\u2A7E\": \"ges\",\n  \"\\u2A7E\\u0338\": \"nges\",\n  \"\\u2A7F\": \"lesdot\",\n  \"\\u2A80\": \"gesdot\",\n  \"\\u2A81\": \"lesdoto\",\n  \"\\u2A82\": \"gesdoto\",\n  \"\\u2A83\": \"lesdotor\",\n  \"\\u2A84\": \"gesdotol\",\n  \"\\u2A85\": \"lap\",\n  \"\\u2A86\": \"gap\",\n  \"\\u2A87\": \"lne\",\n  \"\\u2A88\": \"gne\",\n  \"\\u2A89\": \"lnap\",\n  \"\\u2A8A\": \"gnap\",\n  \"\\u2A8B\": \"lEg\",\n  \"\\u2A8C\": \"gEl\",\n  \"\\u2A8D\": \"lsime\",\n  \"\\u2A8E\": \"gsime\",\n  \"\\u2A8F\": \"lsimg\",\n  \"\\u2A90\": \"gsiml\",\n  \"\\u2A91\": \"lgE\",\n  \"\\u2A92\": \"glE\",\n  \"\\u2A93\": \"lesges\",\n  \"\\u2A94\": \"gesles\",\n  \"\\u2A95\": \"els\",\n  \"\\u2A96\": \"egs\",\n  \"\\u2A97\": \"elsdot\",\n  \"\\u2A98\": \"egsdot\",\n  \"\\u2A99\": \"el\",\n  \"\\u2A9A\": \"eg\",\n  \"\\u2A9D\": \"siml\",\n  \"\\u2A9E\": \"simg\",\n  \"\\u2A9F\": \"simlE\",\n  \"\\u2AA0\": \"simgE\",\n  \"\\u2AA1\": \"LessLess\",\n  \"\\u2AA1\\u0338\": \"NotNestedLessLess\",\n  \"\\u2AA2\": \"GreaterGreater\",\n  \"\\u2AA2\\u0338\": \"NotNestedGreaterGreater\",\n  \"\\u2AA4\": \"glj\",\n  \"\\u2AA5\": \"gla\",\n  \"\\u2AA6\": \"ltcc\",\n  \"\\u2AA7\": \"gtcc\",\n  \"\\u2AA8\": \"lescc\",\n  \"\\u2AA9\": \"gescc\",\n  \"\\u2AAA\": \"smt\",\n  \"\\u2AAB\": \"lat\",\n  \"\\u2AAC\": \"smte\",\n  \"\\u2AAC\\uFE00\": \"smtes\",\n  \"\\u2AAD\": \"late\",\n  \"\\u2AAD\\uFE00\": \"lates\",\n  \"\\u2AAE\": \"bumpE\",\n  \"\\u2AAF\": \"pre\",\n  \"\\u2AAF\\u0338\": \"npre\",\n  \"\\u2AB0\": \"sce\",\n  \"\\u2AB0\\u0338\": \"nsce\",\n  \"\\u2AB3\": \"prE\",\n  \"\\u2AB4\": \"scE\",\n  \"\\u2AB5\": \"prnE\",\n  \"\\u2AB6\": \"scnE\",\n  \"\\u2AB7\": \"prap\",\n  \"\\u2AB8\": \"scap\",\n  \"\\u2AB9\": \"prnap\",\n  \"\\u2ABA\": \"scnap\",\n  \"\\u2ABB\": \"Pr\",\n  \"\\u2ABC\": \"Sc\",\n  \"\\u2ABD\": \"subdot\",\n  \"\\u2ABE\": \"supdot\",\n  \"\\u2ABF\": \"subplus\",\n  \"\\u2AC0\": \"supplus\",\n  \"\\u2AC1\": \"submult\",\n  \"\\u2AC2\": \"supmult\",\n  \"\\u2AC3\": \"subedot\",\n  \"\\u2AC4\": \"supedot\",\n  \"\\u2AC5\": \"subE\",\n  \"\\u2AC5\\u0338\": \"nsubE\",\n  \"\\u2AC6\": \"supE\",\n  \"\\u2AC6\\u0338\": \"nsupE\",\n  \"\\u2AC7\": \"subsim\",\n  \"\\u2AC8\": \"supsim\",\n  \"\\u2ACB\\uFE00\": \"vsubnE\",\n  \"\\u2ACB\": \"subnE\",\n  \"\\u2ACC\\uFE00\": \"vsupnE\",\n  \"\\u2ACC\": \"supnE\",\n  \"\\u2ACF\": \"csub\",\n  \"\\u2AD0\": \"csup\",\n  \"\\u2AD1\": \"csube\",\n  \"\\u2AD2\": \"csupe\",\n  \"\\u2AD3\": \"subsup\",\n  \"\\u2AD4\": \"supsub\",\n  \"\\u2AD5\": \"subsub\",\n  \"\\u2AD6\": \"supsup\",\n  \"\\u2AD7\": \"suphsub\",\n  \"\\u2AD8\": \"supdsub\",\n  \"\\u2AD9\": \"forkv\",\n  \"\\u2ADA\": \"topfork\",\n  \"\\u2ADB\": \"mlcp\",\n  \"\\u2AE4\": \"Dashv\",\n  \"\\u2AE6\": \"Vdashl\",\n  \"\\u2AE7\": \"Barv\",\n  \"\\u2AE8\": \"vBar\",\n  \"\\u2AE9\": \"vBarv\",\n  \"\\u2AEB\": \"Vbar\",\n  \"\\u2AEC\": \"Not\",\n  \"\\u2AED\": \"bNot\",\n  \"\\u2AEE\": \"rnmid\",\n  \"\\u2AEF\": \"cirmid\",\n  \"\\u2AF0\": \"midcir\",\n  \"\\u2AF1\": \"topcir\",\n  \"\\u2AF2\": \"nhpar\",\n  \"\\u2AF3\": \"parsim\",\n  \"\\u2AFD\": \"parsl\",\n  \"\\u2AFD\\u20E5\": \"nparsl\",\n  \"\\u266D\": \"flat\",\n  \"\\u266E\": \"natur\",\n  \"\\u266F\": \"sharp\",\n  \"\\xA4\": \"curren\",\n  \"\\xA2\": \"cent\",\n  $: \"dollar\",\n  \"\\xA3\": \"pound\",\n  \"\\xA5\": \"yen\",\n  \"\\u20AC\": \"euro\",\n  \"\\xB9\": \"sup1\",\n  \"\\xBD\": \"half\",\n  \"\\u2153\": \"frac13\",\n  \"\\xBC\": \"frac14\",\n  \"\\u2155\": \"frac15\",\n  \"\\u2159\": \"frac16\",\n  \"\\u215B\": \"frac18\",\n  \"\\xB2\": \"sup2\",\n  \"\\u2154\": \"frac23\",\n  \"\\u2156\": \"frac25\",\n  \"\\xB3\": \"sup3\",\n  \"\\xBE\": \"frac34\",\n  \"\\u2157\": \"frac35\",\n  \"\\u215C\": \"frac38\",\n  \"\\u2158\": \"frac45\",\n  \"\\u215A\": \"frac56\",\n  \"\\u215D\": \"frac58\",\n  \"\\u215E\": \"frac78\",\n  \"\\uD835\\uDCB6\": \"ascr\",\n  \"\\uD835\\uDD52\": \"aopf\",\n  \"\\uD835\\uDD1E\": \"afr\",\n  \"\\uD835\\uDD38\": \"Aopf\",\n  \"\\uD835\\uDD04\": \"Afr\",\n  \"\\uD835\\uDC9C\": \"Ascr\",\n  \"\\xAA\": \"ordf\",\n  \"\\xE1\": \"aacute\",\n  \"\\xC1\": \"Aacute\",\n  \"\\xE0\": \"agrave\",\n  \"\\xC0\": \"Agrave\",\n  \"\\u0103\": \"abreve\",\n  \"\\u0102\": \"Abreve\",\n  \"\\xE2\": \"acirc\",\n  \"\\xC2\": \"Acirc\",\n  \"\\xE5\": \"aring\",\n  \"\\xC5\": \"angst\",\n  \"\\xE4\": \"auml\",\n  \"\\xC4\": \"Auml\",\n  \"\\xE3\": \"atilde\",\n  \"\\xC3\": \"Atilde\",\n  \"\\u0105\": \"aogon\",\n  \"\\u0104\": \"Aogon\",\n  \"\\u0101\": \"amacr\",\n  \"\\u0100\": \"Amacr\",\n  \"\\xE6\": \"aelig\",\n  \"\\xC6\": \"AElig\",\n  \"\\uD835\\uDCB7\": \"bscr\",\n  \"\\uD835\\uDD53\": \"bopf\",\n  \"\\uD835\\uDD1F\": \"bfr\",\n  \"\\uD835\\uDD39\": \"Bopf\",\n  \"\\u212C\": \"Bscr\",\n  \"\\uD835\\uDD05\": \"Bfr\",\n  \"\\uD835\\uDD20\": \"cfr\",\n  \"\\uD835\\uDCB8\": \"cscr\",\n  \"\\uD835\\uDD54\": \"copf\",\n  \"\\u212D\": \"Cfr\",\n  \"\\uD835\\uDC9E\": \"Cscr\",\n  \"\\u2102\": \"Copf\",\n  \"\\u0107\": \"cacute\",\n  \"\\u0106\": \"Cacute\",\n  \"\\u0109\": \"ccirc\",\n  \"\\u0108\": \"Ccirc\",\n  \"\\u010D\": \"ccaron\",\n  \"\\u010C\": \"Ccaron\",\n  \"\\u010B\": \"cdot\",\n  \"\\u010A\": \"Cdot\",\n  \"\\xE7\": \"ccedil\",\n  \"\\xC7\": \"Ccedil\",\n  \"\\u2105\": \"incare\",\n  \"\\uD835\\uDD21\": \"dfr\",\n  \"\\u2146\": \"dd\",\n  \"\\uD835\\uDD55\": \"dopf\",\n  \"\\uD835\\uDCB9\": \"dscr\",\n  \"\\uD835\\uDC9F\": \"Dscr\",\n  \"\\uD835\\uDD07\": \"Dfr\",\n  \"\\u2145\": \"DD\",\n  \"\\uD835\\uDD3B\": \"Dopf\",\n  \"\\u010F\": \"dcaron\",\n  \"\\u010E\": \"Dcaron\",\n  \"\\u0111\": \"dstrok\",\n  \"\\u0110\": \"Dstrok\",\n  \"\\xF0\": \"eth\",\n  \"\\xD0\": \"ETH\",\n  \"\\u2147\": \"ee\",\n  \"\\u212F\": \"escr\",\n  \"\\uD835\\uDD22\": \"efr\",\n  \"\\uD835\\uDD56\": \"eopf\",\n  \"\\u2130\": \"Escr\",\n  \"\\uD835\\uDD08\": \"Efr\",\n  \"\\uD835\\uDD3C\": \"Eopf\",\n  \"\\xE9\": \"eacute\",\n  \"\\xC9\": \"Eacute\",\n  \"\\xE8\": \"egrave\",\n  \"\\xC8\": \"Egrave\",\n  \"\\xEA\": \"ecirc\",\n  \"\\xCA\": \"Ecirc\",\n  \"\\u011B\": \"ecaron\",\n  \"\\u011A\": \"Ecaron\",\n  \"\\xEB\": \"euml\",\n  \"\\xCB\": \"Euml\",\n  \"\\u0117\": \"edot\",\n  \"\\u0116\": \"Edot\",\n  \"\\u0119\": \"eogon\",\n  \"\\u0118\": \"Eogon\",\n  \"\\u0113\": \"emacr\",\n  \"\\u0112\": \"Emacr\",\n  \"\\uD835\\uDD23\": \"ffr\",\n  \"\\uD835\\uDD57\": \"fopf\",\n  \"\\uD835\\uDCBB\": \"fscr\",\n  \"\\uD835\\uDD09\": \"Ffr\",\n  \"\\uD835\\uDD3D\": \"Fopf\",\n  \"\\u2131\": \"Fscr\",\n  \"\\uFB00\": \"fflig\",\n  \"\\uFB03\": \"ffilig\",\n  \"\\uFB04\": \"ffllig\",\n  \"\\uFB01\": \"filig\",\n  fj: \"fjlig\",\n  \"\\uFB02\": \"fllig\",\n  \"\\u0192\": \"fnof\",\n  \"\\u210A\": \"gscr\",\n  \"\\uD835\\uDD58\": \"gopf\",\n  \"\\uD835\\uDD24\": \"gfr\",\n  \"\\uD835\\uDCA2\": \"Gscr\",\n  \"\\uD835\\uDD3E\": \"Gopf\",\n  \"\\uD835\\uDD0A\": \"Gfr\",\n  \"\\u01F5\": \"gacute\",\n  \"\\u011F\": \"gbreve\",\n  \"\\u011E\": \"Gbreve\",\n  \"\\u011D\": \"gcirc\",\n  \"\\u011C\": \"Gcirc\",\n  \"\\u0121\": \"gdot\",\n  \"\\u0120\": \"Gdot\",\n  \"\\u0122\": \"Gcedil\",\n  \"\\uD835\\uDD25\": \"hfr\",\n  \"\\u210E\": \"planckh\",\n  \"\\uD835\\uDCBD\": \"hscr\",\n  \"\\uD835\\uDD59\": \"hopf\",\n  \"\\u210B\": \"Hscr\",\n  \"\\u210C\": \"Hfr\",\n  \"\\u210D\": \"Hopf\",\n  \"\\u0125\": \"hcirc\",\n  \"\\u0124\": \"Hcirc\",\n  \"\\u210F\": \"hbar\",\n  \"\\u0127\": \"hstrok\",\n  \"\\u0126\": \"Hstrok\",\n  \"\\uD835\\uDD5A\": \"iopf\",\n  \"\\uD835\\uDD26\": \"ifr\",\n  \"\\uD835\\uDCBE\": \"iscr\",\n  \"\\u2148\": \"ii\",\n  \"\\uD835\\uDD40\": \"Iopf\",\n  \"\\u2110\": \"Iscr\",\n  \"\\u2111\": \"Im\",\n  \"\\xED\": \"iacute\",\n  \"\\xCD\": \"Iacute\",\n  \"\\xEC\": \"igrave\",\n  \"\\xCC\": \"Igrave\",\n  \"\\xEE\": \"icirc\",\n  \"\\xCE\": \"Icirc\",\n  \"\\xEF\": \"iuml\",\n  \"\\xCF\": \"Iuml\",\n  \"\\u0129\": \"itilde\",\n  \"\\u0128\": \"Itilde\",\n  \"\\u0130\": \"Idot\",\n  \"\\u012F\": \"iogon\",\n  \"\\u012E\": \"Iogon\",\n  \"\\u012B\": \"imacr\",\n  \"\\u012A\": \"Imacr\",\n  \"\\u0133\": \"ijlig\",\n  \"\\u0132\": \"IJlig\",\n  \"\\u0131\": \"imath\",\n  \"\\uD835\\uDCBF\": \"jscr\",\n  \"\\uD835\\uDD5B\": \"jopf\",\n  \"\\uD835\\uDD27\": \"jfr\",\n  \"\\uD835\\uDCA5\": \"Jscr\",\n  \"\\uD835\\uDD0D\": \"Jfr\",\n  \"\\uD835\\uDD41\": \"Jopf\",\n  \"\\u0135\": \"jcirc\",\n  \"\\u0134\": \"Jcirc\",\n  \"\\u0237\": \"jmath\",\n  \"\\uD835\\uDD5C\": \"kopf\",\n  \"\\uD835\\uDCC0\": \"kscr\",\n  \"\\uD835\\uDD28\": \"kfr\",\n  \"\\uD835\\uDCA6\": \"Kscr\",\n  \"\\uD835\\uDD42\": \"Kopf\",\n  \"\\uD835\\uDD0E\": \"Kfr\",\n  \"\\u0137\": \"kcedil\",\n  \"\\u0136\": \"Kcedil\",\n  \"\\uD835\\uDD29\": \"lfr\",\n  \"\\uD835\\uDCC1\": \"lscr\",\n  \"\\u2113\": \"ell\",\n  \"\\uD835\\uDD5D\": \"lopf\",\n  \"\\u2112\": \"Lscr\",\n  \"\\uD835\\uDD0F\": \"Lfr\",\n  \"\\uD835\\uDD43\": \"Lopf\",\n  \"\\u013A\": \"lacute\",\n  \"\\u0139\": \"Lacute\",\n  \"\\u013E\": \"lcaron\",\n  \"\\u013D\": \"Lcaron\",\n  \"\\u013C\": \"lcedil\",\n  \"\\u013B\": \"Lcedil\",\n  \"\\u0142\": \"lstrok\",\n  \"\\u0141\": \"Lstrok\",\n  \"\\u0140\": \"lmidot\",\n  \"\\u013F\": \"Lmidot\",\n  \"\\uD835\\uDD2A\": \"mfr\",\n  \"\\uD835\\uDD5E\": \"mopf\",\n  \"\\uD835\\uDCC2\": \"mscr\",\n  \"\\uD835\\uDD10\": \"Mfr\",\n  \"\\uD835\\uDD44\": \"Mopf\",\n  \"\\u2133\": \"Mscr\",\n  \"\\uD835\\uDD2B\": \"nfr\",\n  \"\\uD835\\uDD5F\": \"nopf\",\n  \"\\uD835\\uDCC3\": \"nscr\",\n  \"\\u2115\": \"Nopf\",\n  \"\\uD835\\uDCA9\": \"Nscr\",\n  \"\\uD835\\uDD11\": \"Nfr\",\n  \"\\u0144\": \"nacute\",\n  \"\\u0143\": \"Nacute\",\n  \"\\u0148\": \"ncaron\",\n  \"\\u0147\": \"Ncaron\",\n  \"\\xF1\": \"ntilde\",\n  \"\\xD1\": \"Ntilde\",\n  \"\\u0146\": \"ncedil\",\n  \"\\u0145\": \"Ncedil\",\n  \"\\u2116\": \"numero\",\n  \"\\u014B\": \"eng\",\n  \"\\u014A\": \"ENG\",\n  \"\\uD835\\uDD60\": \"oopf\",\n  \"\\uD835\\uDD2C\": \"ofr\",\n  \"\\u2134\": \"oscr\",\n  \"\\uD835\\uDCAA\": \"Oscr\",\n  \"\\uD835\\uDD12\": \"Ofr\",\n  \"\\uD835\\uDD46\": \"Oopf\",\n  \"\\xBA\": \"ordm\",\n  \"\\xF3\": \"oacute\",\n  \"\\xD3\": \"Oacute\",\n  \"\\xF2\": \"ograve\",\n  \"\\xD2\": \"Ograve\",\n  \"\\xF4\": \"ocirc\",\n  \"\\xD4\": \"Ocirc\",\n  \"\\xF6\": \"ouml\",\n  \"\\xD6\": \"Ouml\",\n  \"\\u0151\": \"odblac\",\n  \"\\u0150\": \"Odblac\",\n  \"\\xF5\": \"otilde\",\n  \"\\xD5\": \"Otilde\",\n  \"\\xF8\": \"oslash\",\n  \"\\xD8\": \"Oslash\",\n  \"\\u014D\": \"omacr\",\n  \"\\u014C\": \"Omacr\",\n  \"\\u0153\": \"oelig\",\n  \"\\u0152\": \"OElig\",\n  \"\\uD835\\uDD2D\": \"pfr\",\n  \"\\uD835\\uDCC5\": \"pscr\",\n  \"\\uD835\\uDD61\": \"popf\",\n  \"\\u2119\": \"Popf\",\n  \"\\uD835\\uDD13\": \"Pfr\",\n  \"\\uD835\\uDCAB\": \"Pscr\",\n  \"\\uD835\\uDD62\": \"qopf\",\n  \"\\uD835\\uDD2E\": \"qfr\",\n  \"\\uD835\\uDCC6\": \"qscr\",\n  \"\\uD835\\uDCAC\": \"Qscr\",\n  \"\\uD835\\uDD14\": \"Qfr\",\n  \"\\u211A\": \"Qopf\",\n  \"\\u0138\": \"kgreen\",\n  \"\\uD835\\uDD2F\": \"rfr\",\n  \"\\uD835\\uDD63\": \"ropf\",\n  \"\\uD835\\uDCC7\": \"rscr\",\n  \"\\u211B\": \"Rscr\",\n  \"\\u211C\": \"Re\",\n  \"\\u211D\": \"Ropf\",\n  \"\\u0155\": \"racute\",\n  \"\\u0154\": \"Racute\",\n  \"\\u0159\": \"rcaron\",\n  \"\\u0158\": \"Rcaron\",\n  \"\\u0157\": \"rcedil\",\n  \"\\u0156\": \"Rcedil\",\n  \"\\uD835\\uDD64\": \"sopf\",\n  \"\\uD835\\uDCC8\": \"sscr\",\n  \"\\uD835\\uDD30\": \"sfr\",\n  \"\\uD835\\uDD4A\": \"Sopf\",\n  \"\\uD835\\uDD16\": \"Sfr\",\n  \"\\uD835\\uDCAE\": \"Sscr\",\n  \"\\u24C8\": \"oS\",\n  \"\\u015B\": \"sacute\",\n  \"\\u015A\": \"Sacute\",\n  \"\\u015D\": \"scirc\",\n  \"\\u015C\": \"Scirc\",\n  \"\\u0161\": \"scaron\",\n  \"\\u0160\": \"Scaron\",\n  \"\\u015F\": \"scedil\",\n  \"\\u015E\": \"Scedil\",\n  \"\\xDF\": \"szlig\",\n  \"\\uD835\\uDD31\": \"tfr\",\n  \"\\uD835\\uDCC9\": \"tscr\",\n  \"\\uD835\\uDD65\": \"topf\",\n  \"\\uD835\\uDCAF\": \"Tscr\",\n  \"\\uD835\\uDD17\": \"Tfr\",\n  \"\\uD835\\uDD4B\": \"Topf\",\n  \"\\u0165\": \"tcaron\",\n  \"\\u0164\": \"Tcaron\",\n  \"\\u0163\": \"tcedil\",\n  \"\\u0162\": \"Tcedil\",\n  \"\\u2122\": \"trade\",\n  \"\\u0167\": \"tstrok\",\n  \"\\u0166\": \"Tstrok\",\n  \"\\uD835\\uDCCA\": \"uscr\",\n  \"\\uD835\\uDD66\": \"uopf\",\n  \"\\uD835\\uDD32\": \"ufr\",\n  \"\\uD835\\uDD4C\": \"Uopf\",\n  \"\\uD835\\uDD18\": \"Ufr\",\n  \"\\uD835\\uDCB0\": \"Uscr\",\n  \"\\xFA\": \"uacute\",\n  \"\\xDA\": \"Uacute\",\n  \"\\xF9\": \"ugrave\",\n  \"\\xD9\": \"Ugrave\",\n  \"\\u016D\": \"ubreve\",\n  \"\\u016C\": \"Ubreve\",\n  \"\\xFB\": \"ucirc\",\n  \"\\xDB\": \"Ucirc\",\n  \"\\u016F\": \"uring\",\n  \"\\u016E\": \"Uring\",\n  \"\\xFC\": \"uuml\",\n  \"\\xDC\": \"Uuml\",\n  \"\\u0171\": \"udblac\",\n  \"\\u0170\": \"Udblac\",\n  \"\\u0169\": \"utilde\",\n  \"\\u0168\": \"Utilde\",\n  \"\\u0173\": \"uogon\",\n  \"\\u0172\": \"Uogon\",\n  \"\\u016B\": \"umacr\",\n  \"\\u016A\": \"Umacr\",\n  \"\\uD835\\uDD33\": \"vfr\",\n  \"\\uD835\\uDD67\": \"vopf\",\n  \"\\uD835\\uDCCB\": \"vscr\",\n  \"\\uD835\\uDD19\": \"Vfr\",\n  \"\\uD835\\uDD4D\": \"Vopf\",\n  \"\\uD835\\uDCB1\": \"Vscr\",\n  \"\\uD835\\uDD68\": \"wopf\",\n  \"\\uD835\\uDCCC\": \"wscr\",\n  \"\\uD835\\uDD34\": \"wfr\",\n  \"\\uD835\\uDCB2\": \"Wscr\",\n  \"\\uD835\\uDD4E\": \"Wopf\",\n  \"\\uD835\\uDD1A\": \"Wfr\",\n  \"\\u0175\": \"wcirc\",\n  \"\\u0174\": \"Wcirc\",\n  \"\\uD835\\uDD35\": \"xfr\",\n  \"\\uD835\\uDCCD\": \"xscr\",\n  \"\\uD835\\uDD69\": \"xopf\",\n  \"\\uD835\\uDD4F\": \"Xopf\",\n  \"\\uD835\\uDD1B\": \"Xfr\",\n  \"\\uD835\\uDCB3\": \"Xscr\",\n  \"\\uD835\\uDD36\": \"yfr\",\n  \"\\uD835\\uDCCE\": \"yscr\",\n  \"\\uD835\\uDD6A\": \"yopf\",\n  \"\\uD835\\uDCB4\": \"Yscr\",\n  \"\\uD835\\uDD1C\": \"Yfr\",\n  \"\\uD835\\uDD50\": \"Yopf\",\n  \"\\xFD\": \"yacute\",\n  \"\\xDD\": \"Yacute\",\n  \"\\u0177\": \"ycirc\",\n  \"\\u0176\": \"Ycirc\",\n  \"\\xFF\": \"yuml\",\n  \"\\u0178\": \"Yuml\",\n  \"\\uD835\\uDCCF\": \"zscr\",\n  \"\\uD835\\uDD37\": \"zfr\",\n  \"\\uD835\\uDD6B\": \"zopf\",\n  \"\\u2128\": \"Zfr\",\n  \"\\u2124\": \"Zopf\",\n  \"\\uD835\\uDCB5\": \"Zscr\",\n  \"\\u017A\": \"zacute\",\n  \"\\u0179\": \"Zacute\",\n  \"\\u017E\": \"zcaron\",\n  \"\\u017D\": \"Zcaron\",\n  \"\\u017C\": \"zdot\",\n  \"\\u017B\": \"Zdot\",\n  \"\\u01B5\": \"imped\",\n  \"\\xFE\": \"thorn\",\n  \"\\xDE\": \"THORN\",\n  \"\\u0149\": \"napos\",\n  \"\\u03B1\": \"alpha\",\n  \"\\u0391\": \"Alpha\",\n  \"\\u03B2\": \"beta\",\n  \"\\u0392\": \"Beta\",\n  \"\\u03B3\": \"gamma\",\n  \"\\u0393\": \"Gamma\",\n  \"\\u03B4\": \"delta\",\n  \"\\u0394\": \"Delta\",\n  \"\\u03B5\": \"epsi\",\n  \"\\u03F5\": \"epsiv\",\n  \"\\u0395\": \"Epsilon\",\n  \"\\u03DD\": \"gammad\",\n  \"\\u03DC\": \"Gammad\",\n  \"\\u03B6\": \"zeta\",\n  \"\\u0396\": \"Zeta\",\n  \"\\u03B7\": \"eta\",\n  \"\\u0397\": \"Eta\",\n  \"\\u03B8\": \"theta\",\n  \"\\u03D1\": \"thetav\",\n  \"\\u0398\": \"Theta\",\n  \"\\u03B9\": \"iota\",\n  \"\\u0399\": \"Iota\",\n  \"\\u03BA\": \"kappa\",\n  \"\\u03F0\": \"kappav\",\n  \"\\u039A\": \"Kappa\",\n  \"\\u03BB\": \"lambda\",\n  \"\\u039B\": \"Lambda\",\n  \"\\u03BC\": \"mu\",\n  \"\\xB5\": \"micro\",\n  \"\\u039C\": \"Mu\",\n  \"\\u03BD\": \"nu\",\n  \"\\u039D\": \"Nu\",\n  \"\\u03BE\": \"xi\",\n  \"\\u039E\": \"Xi\",\n  \"\\u03BF\": \"omicron\",\n  \"\\u039F\": \"Omicron\",\n  \"\\u03C0\": \"pi\",\n  \"\\u03D6\": \"piv\",\n  \"\\u03A0\": \"Pi\",\n  \"\\u03C1\": \"rho\",\n  \"\\u03F1\": \"rhov\",\n  \"\\u03A1\": \"Rho\",\n  \"\\u03C3\": \"sigma\",\n  \"\\u03A3\": \"Sigma\",\n  \"\\u03C2\": \"sigmaf\",\n  \"\\u03C4\": \"tau\",\n  \"\\u03A4\": \"Tau\",\n  \"\\u03C5\": \"upsi\",\n  \"\\u03A5\": \"Upsilon\",\n  \"\\u03D2\": \"Upsi\",\n  \"\\u03C6\": \"phi\",\n  \"\\u03D5\": \"phiv\",\n  \"\\u03A6\": \"Phi\",\n  \"\\u03C7\": \"chi\",\n  \"\\u03A7\": \"Chi\",\n  \"\\u03C8\": \"psi\",\n  \"\\u03A8\": \"Psi\",\n  \"\\u03C9\": \"omega\",\n  \"\\u03A9\": \"ohm\",\n  \"\\u0430\": \"acy\",\n  \"\\u0410\": \"Acy\",\n  \"\\u0431\": \"bcy\",\n  \"\\u0411\": \"Bcy\",\n  \"\\u0432\": \"vcy\",\n  \"\\u0412\": \"Vcy\",\n  \"\\u0433\": \"gcy\",\n  \"\\u0413\": \"Gcy\",\n  \"\\u0453\": \"gjcy\",\n  \"\\u0403\": \"GJcy\",\n  \"\\u0434\": \"dcy\",\n  \"\\u0414\": \"Dcy\",\n  \"\\u0452\": \"djcy\",\n  \"\\u0402\": \"DJcy\",\n  \"\\u0435\": \"iecy\",\n  \"\\u0415\": \"IEcy\",\n  \"\\u0451\": \"iocy\",\n  \"\\u0401\": \"IOcy\",\n  \"\\u0454\": \"jukcy\",\n  \"\\u0404\": \"Jukcy\",\n  \"\\u0436\": \"zhcy\",\n  \"\\u0416\": \"ZHcy\",\n  \"\\u0437\": \"zcy\",\n  \"\\u0417\": \"Zcy\",\n  \"\\u0455\": \"dscy\",\n  \"\\u0405\": \"DScy\",\n  \"\\u0438\": \"icy\",\n  \"\\u0418\": \"Icy\",\n  \"\\u0456\": \"iukcy\",\n  \"\\u0406\": \"Iukcy\",\n  \"\\u0457\": \"yicy\",\n  \"\\u0407\": \"YIcy\",\n  \"\\u0439\": \"jcy\",\n  \"\\u0419\": \"Jcy\",\n  \"\\u0458\": \"jsercy\",\n  \"\\u0408\": \"Jsercy\",\n  \"\\u043A\": \"kcy\",\n  \"\\u041A\": \"Kcy\",\n  \"\\u045C\": \"kjcy\",\n  \"\\u040C\": \"KJcy\",\n  \"\\u043B\": \"lcy\",\n  \"\\u041B\": \"Lcy\",\n  \"\\u0459\": \"ljcy\",\n  \"\\u0409\": \"LJcy\",\n  \"\\u043C\": \"mcy\",\n  \"\\u041C\": \"Mcy\",\n  \"\\u043D\": \"ncy\",\n  \"\\u041D\": \"Ncy\",\n  \"\\u045A\": \"njcy\",\n  \"\\u040A\": \"NJcy\",\n  \"\\u043E\": \"ocy\",\n  \"\\u041E\": \"Ocy\",\n  \"\\u043F\": \"pcy\",\n  \"\\u041F\": \"Pcy\",\n  \"\\u0440\": \"rcy\",\n  \"\\u0420\": \"Rcy\",\n  \"\\u0441\": \"scy\",\n  \"\\u0421\": \"Scy\",\n  \"\\u0442\": \"tcy\",\n  \"\\u0422\": \"Tcy\",\n  \"\\u045B\": \"tshcy\",\n  \"\\u040B\": \"TSHcy\",\n  \"\\u0443\": \"ucy\",\n  \"\\u0423\": \"Ucy\",\n  \"\\u045E\": \"ubrcy\",\n  \"\\u040E\": \"Ubrcy\",\n  \"\\u0444\": \"fcy\",\n  \"\\u0424\": \"Fcy\",\n  \"\\u0445\": \"khcy\",\n  \"\\u0425\": \"KHcy\",\n  \"\\u0446\": \"tscy\",\n  \"\\u0426\": \"TScy\",\n  \"\\u0447\": \"chcy\",\n  \"\\u0427\": \"CHcy\",\n  \"\\u045F\": \"dzcy\",\n  \"\\u040F\": \"DZcy\",\n  \"\\u0448\": \"shcy\",\n  \"\\u0428\": \"SHcy\",\n  \"\\u0449\": \"shchcy\",\n  \"\\u0429\": \"SHCHcy\",\n  \"\\u044A\": \"hardcy\",\n  \"\\u042A\": \"HARDcy\",\n  \"\\u044B\": \"ycy\",\n  \"\\u042B\": \"Ycy\",\n  \"\\u044C\": \"softcy\",\n  \"\\u042C\": \"SOFTcy\",\n  \"\\u044D\": \"ecy\",\n  \"\\u042D\": \"Ecy\",\n  \"\\u044E\": \"yucy\",\n  \"\\u042E\": \"YUcy\",\n  \"\\u044F\": \"yacy\",\n  \"\\u042F\": \"YAcy\",\n  \"\\u2135\": \"aleph\",\n  \"\\u2136\": \"beth\",\n  \"\\u2137\": \"gimel\",\n  \"\\u2138\": \"daleth\",\n}\n\nvar regexEscape = /[\"&'<>`]/g\nvar escapeMap = {\n  '\"': \"&quot;\",\n  \"&\": \"&amp;\",\n  \"'\": \"&#x27;\",\n  \"<\": \"&lt;\",\n  // See https://mathiasbynens.be/notes/ambiguous-ampersands: in HTML, the\n  // following is not strictly necessary unless it’s part of a tag or an\n  // unquoted attribute value. We’re only escaping it to support those\n  // situations, and for XML support.\n  \">\": \"&gt;\",\n  // In Internet Explorer ≤ 8, the backtick character can be used\n  // to break out of (un)quoted attribute values or HTML comments.\n  // See http://html5sec.org/#102, http://html5sec.org/#108, and\n  // http://html5sec.org/#133.\n  \"`\": \"&#x60;\",\n}\n\nvar regexInvalidEntity = /&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/\nvar regexInvalidRawCodePoint =\n  /[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/\nvar regexDecode =\n  /&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g\nvar decodeMap = {\n  aacute: \"\\xE1\",\n  Aacute: \"\\xC1\",\n  abreve: \"\\u0103\",\n  Abreve: \"\\u0102\",\n  ac: \"\\u223E\",\n  acd: \"\\u223F\",\n  acE: \"\\u223E\\u0333\",\n  acirc: \"\\xE2\",\n  Acirc: \"\\xC2\",\n  acute: \"\\xB4\",\n  acy: \"\\u0430\",\n  Acy: \"\\u0410\",\n  aelig: \"\\xE6\",\n  AElig: \"\\xC6\",\n  af: \"\\u2061\",\n  afr: \"\\uD835\\uDD1E\",\n  Afr: \"\\uD835\\uDD04\",\n  agrave: \"\\xE0\",\n  Agrave: \"\\xC0\",\n  alefsym: \"\\u2135\",\n  aleph: \"\\u2135\",\n  alpha: \"\\u03B1\",\n  Alpha: \"\\u0391\",\n  amacr: \"\\u0101\",\n  Amacr: \"\\u0100\",\n  amalg: \"\\u2A3F\",\n  amp: \"&\",\n  AMP: \"&\",\n  and: \"\\u2227\",\n  And: \"\\u2A53\",\n  andand: \"\\u2A55\",\n  andd: \"\\u2A5C\",\n  andslope: \"\\u2A58\",\n  andv: \"\\u2A5A\",\n  ang: \"\\u2220\",\n  ange: \"\\u29A4\",\n  angle: \"\\u2220\",\n  angmsd: \"\\u2221\",\n  angmsdaa: \"\\u29A8\",\n  angmsdab: \"\\u29A9\",\n  angmsdac: \"\\u29AA\",\n  angmsdad: \"\\u29AB\",\n  angmsdae: \"\\u29AC\",\n  angmsdaf: \"\\u29AD\",\n  angmsdag: \"\\u29AE\",\n  angmsdah: \"\\u29AF\",\n  angrt: \"\\u221F\",\n  angrtvb: \"\\u22BE\",\n  angrtvbd: \"\\u299D\",\n  angsph: \"\\u2222\",\n  angst: \"\\xC5\",\n  angzarr: \"\\u237C\",\n  aogon: \"\\u0105\",\n  Aogon: \"\\u0104\",\n  aopf: \"\\uD835\\uDD52\",\n  Aopf: \"\\uD835\\uDD38\",\n  ap: \"\\u2248\",\n  apacir: \"\\u2A6F\",\n  ape: \"\\u224A\",\n  apE: \"\\u2A70\",\n  apid: \"\\u224B\",\n  apos: \"'\",\n  ApplyFunction: \"\\u2061\",\n  approx: \"\\u2248\",\n  approxeq: \"\\u224A\",\n  aring: \"\\xE5\",\n  Aring: \"\\xC5\",\n  ascr: \"\\uD835\\uDCB6\",\n  Ascr: \"\\uD835\\uDC9C\",\n  Assign: \"\\u2254\",\n  ast: \"*\",\n  asymp: \"\\u2248\",\n  asympeq: \"\\u224D\",\n  atilde: \"\\xE3\",\n  Atilde: \"\\xC3\",\n  auml: \"\\xE4\",\n  Auml: \"\\xC4\",\n  awconint: \"\\u2233\",\n  awint: \"\\u2A11\",\n  backcong: \"\\u224C\",\n  backepsilon: \"\\u03F6\",\n  backprime: \"\\u2035\",\n  backsim: \"\\u223D\",\n  backsimeq: \"\\u22CD\",\n  Backslash: \"\\u2216\",\n  Barv: \"\\u2AE7\",\n  barvee: \"\\u22BD\",\n  barwed: \"\\u2305\",\n  Barwed: \"\\u2306\",\n  barwedge: \"\\u2305\",\n  bbrk: \"\\u23B5\",\n  bbrktbrk: \"\\u23B6\",\n  bcong: \"\\u224C\",\n  bcy: \"\\u0431\",\n  Bcy: \"\\u0411\",\n  bdquo: \"\\u201E\",\n  becaus: \"\\u2235\",\n  because: \"\\u2235\",\n  Because: \"\\u2235\",\n  bemptyv: \"\\u29B0\",\n  bepsi: \"\\u03F6\",\n  bernou: \"\\u212C\",\n  Bernoullis: \"\\u212C\",\n  beta: \"\\u03B2\",\n  Beta: \"\\u0392\",\n  beth: \"\\u2136\",\n  between: \"\\u226C\",\n  bfr: \"\\uD835\\uDD1F\",\n  Bfr: \"\\uD835\\uDD05\",\n  bigcap: \"\\u22C2\",\n  bigcirc: \"\\u25EF\",\n  bigcup: \"\\u22C3\",\n  bigodot: \"\\u2A00\",\n  bigoplus: \"\\u2A01\",\n  bigotimes: \"\\u2A02\",\n  bigsqcup: \"\\u2A06\",\n  bigstar: \"\\u2605\",\n  bigtriangledown: \"\\u25BD\",\n  bigtriangleup: \"\\u25B3\",\n  biguplus: \"\\u2A04\",\n  bigvee: \"\\u22C1\",\n  bigwedge: \"\\u22C0\",\n  bkarow: \"\\u290D\",\n  blacklozenge: \"\\u29EB\",\n  blacksquare: \"\\u25AA\",\n  blacktriangle: \"\\u25B4\",\n  blacktriangledown: \"\\u25BE\",\n  blacktriangleleft: \"\\u25C2\",\n  blacktriangleright: \"\\u25B8\",\n  blank: \"\\u2423\",\n  blk12: \"\\u2592\",\n  blk14: \"\\u2591\",\n  blk34: \"\\u2593\",\n  block: \"\\u2588\",\n  bne: \"=\\u20E5\",\n  bnequiv: \"\\u2261\\u20E5\",\n  bnot: \"\\u2310\",\n  bNot: \"\\u2AED\",\n  bopf: \"\\uD835\\uDD53\",\n  Bopf: \"\\uD835\\uDD39\",\n  bot: \"\\u22A5\",\n  bottom: \"\\u22A5\",\n  bowtie: \"\\u22C8\",\n  boxbox: \"\\u29C9\",\n  boxdl: \"\\u2510\",\n  boxdL: \"\\u2555\",\n  boxDl: \"\\u2556\",\n  boxDL: \"\\u2557\",\n  boxdr: \"\\u250C\",\n  boxdR: \"\\u2552\",\n  boxDr: \"\\u2553\",\n  boxDR: \"\\u2554\",\n  boxh: \"\\u2500\",\n  boxH: \"\\u2550\",\n  boxhd: \"\\u252C\",\n  boxhD: \"\\u2565\",\n  boxHd: \"\\u2564\",\n  boxHD: \"\\u2566\",\n  boxhu: \"\\u2534\",\n  boxhU: \"\\u2568\",\n  boxHu: \"\\u2567\",\n  boxHU: \"\\u2569\",\n  boxminus: \"\\u229F\",\n  boxplus: \"\\u229E\",\n  boxtimes: \"\\u22A0\",\n  boxul: \"\\u2518\",\n  boxuL: \"\\u255B\",\n  boxUl: \"\\u255C\",\n  boxUL: \"\\u255D\",\n  boxur: \"\\u2514\",\n  boxuR: \"\\u2558\",\n  boxUr: \"\\u2559\",\n  boxUR: \"\\u255A\",\n  boxv: \"\\u2502\",\n  boxV: \"\\u2551\",\n  boxvh: \"\\u253C\",\n  boxvH: \"\\u256A\",\n  boxVh: \"\\u256B\",\n  boxVH: \"\\u256C\",\n  boxvl: \"\\u2524\",\n  boxvL: \"\\u2561\",\n  boxVl: \"\\u2562\",\n  boxVL: \"\\u2563\",\n  boxvr: \"\\u251C\",\n  boxvR: \"\\u255E\",\n  boxVr: \"\\u255F\",\n  boxVR: \"\\u2560\",\n  bprime: \"\\u2035\",\n  breve: \"\\u02D8\",\n  Breve: \"\\u02D8\",\n  brvbar: \"\\xA6\",\n  bscr: \"\\uD835\\uDCB7\",\n  Bscr: \"\\u212C\",\n  bsemi: \"\\u204F\",\n  bsim: \"\\u223D\",\n  bsime: \"\\u22CD\",\n  bsol: \"\\\\\",\n  bsolb: \"\\u29C5\",\n  bsolhsub: \"\\u27C8\",\n  bull: \"\\u2022\",\n  bullet: \"\\u2022\",\n  bump: \"\\u224E\",\n  bumpe: \"\\u224F\",\n  bumpE: \"\\u2AAE\",\n  bumpeq: \"\\u224F\",\n  Bumpeq: \"\\u224E\",\n  cacute: \"\\u0107\",\n  Cacute: \"\\u0106\",\n  cap: \"\\u2229\",\n  Cap: \"\\u22D2\",\n  capand: \"\\u2A44\",\n  capbrcup: \"\\u2A49\",\n  capcap: \"\\u2A4B\",\n  capcup: \"\\u2A47\",\n  capdot: \"\\u2A40\",\n  CapitalDifferentialD: \"\\u2145\",\n  caps: \"\\u2229\\uFE00\",\n  caret: \"\\u2041\",\n  caron: \"\\u02C7\",\n  Cayleys: \"\\u212D\",\n  ccaps: \"\\u2A4D\",\n  ccaron: \"\\u010D\",\n  Ccaron: \"\\u010C\",\n  ccedil: \"\\xE7\",\n  Ccedil: \"\\xC7\",\n  ccirc: \"\\u0109\",\n  Ccirc: \"\\u0108\",\n  Cconint: \"\\u2230\",\n  ccups: \"\\u2A4C\",\n  ccupssm: \"\\u2A50\",\n  cdot: \"\\u010B\",\n  Cdot: \"\\u010A\",\n  cedil: \"\\xB8\",\n  Cedilla: \"\\xB8\",\n  cemptyv: \"\\u29B2\",\n  cent: \"\\xA2\",\n  centerdot: \"\\xB7\",\n  CenterDot: \"\\xB7\",\n  cfr: \"\\uD835\\uDD20\",\n  Cfr: \"\\u212D\",\n  chcy: \"\\u0447\",\n  CHcy: \"\\u0427\",\n  check: \"\\u2713\",\n  checkmark: \"\\u2713\",\n  chi: \"\\u03C7\",\n  Chi: \"\\u03A7\",\n  cir: \"\\u25CB\",\n  circ: \"\\u02C6\",\n  circeq: \"\\u2257\",\n  circlearrowleft: \"\\u21BA\",\n  circlearrowright: \"\\u21BB\",\n  circledast: \"\\u229B\",\n  circledcirc: \"\\u229A\",\n  circleddash: \"\\u229D\",\n  CircleDot: \"\\u2299\",\n  circledR: \"\\xAE\",\n  circledS: \"\\u24C8\",\n  CircleMinus: \"\\u2296\",\n  CirclePlus: \"\\u2295\",\n  CircleTimes: \"\\u2297\",\n  cire: \"\\u2257\",\n  cirE: \"\\u29C3\",\n  cirfnint: \"\\u2A10\",\n  cirmid: \"\\u2AEF\",\n  cirscir: \"\\u29C2\",\n  ClockwiseContourIntegral: \"\\u2232\",\n  CloseCurlyDoubleQuote: \"\\u201D\",\n  CloseCurlyQuote: \"\\u2019\",\n  clubs: \"\\u2663\",\n  clubsuit: \"\\u2663\",\n  colon: \":\",\n  Colon: \"\\u2237\",\n  colone: \"\\u2254\",\n  Colone: \"\\u2A74\",\n  coloneq: \"\\u2254\",\n  comma: \",\",\n  commat: \"@\",\n  comp: \"\\u2201\",\n  compfn: \"\\u2218\",\n  complement: \"\\u2201\",\n  complexes: \"\\u2102\",\n  cong: \"\\u2245\",\n  congdot: \"\\u2A6D\",\n  Congruent: \"\\u2261\",\n  conint: \"\\u222E\",\n  Conint: \"\\u222F\",\n  ContourIntegral: \"\\u222E\",\n  copf: \"\\uD835\\uDD54\",\n  Copf: \"\\u2102\",\n  coprod: \"\\u2210\",\n  Coproduct: \"\\u2210\",\n  copy: \"\\xA9\",\n  COPY: \"\\xA9\",\n  copysr: \"\\u2117\",\n  CounterClockwiseContourIntegral: \"\\u2233\",\n  crarr: \"\\u21B5\",\n  cross: \"\\u2717\",\n  Cross: \"\\u2A2F\",\n  cscr: \"\\uD835\\uDCB8\",\n  Cscr: \"\\uD835\\uDC9E\",\n  csub: \"\\u2ACF\",\n  csube: \"\\u2AD1\",\n  csup: \"\\u2AD0\",\n  csupe: \"\\u2AD2\",\n  ctdot: \"\\u22EF\",\n  cudarrl: \"\\u2938\",\n  cudarrr: \"\\u2935\",\n  cuepr: \"\\u22DE\",\n  cuesc: \"\\u22DF\",\n  cularr: \"\\u21B6\",\n  cularrp: \"\\u293D\",\n  cup: \"\\u222A\",\n  Cup: \"\\u22D3\",\n  cupbrcap: \"\\u2A48\",\n  cupcap: \"\\u2A46\",\n  CupCap: \"\\u224D\",\n  cupcup: \"\\u2A4A\",\n  cupdot: \"\\u228D\",\n  cupor: \"\\u2A45\",\n  cups: \"\\u222A\\uFE00\",\n  curarr: \"\\u21B7\",\n  curarrm: \"\\u293C\",\n  curlyeqprec: \"\\u22DE\",\n  curlyeqsucc: \"\\u22DF\",\n  curlyvee: \"\\u22CE\",\n  curlywedge: \"\\u22CF\",\n  curren: \"\\xA4\",\n  curvearrowleft: \"\\u21B6\",\n  curvearrowright: \"\\u21B7\",\n  cuvee: \"\\u22CE\",\n  cuwed: \"\\u22CF\",\n  cwconint: \"\\u2232\",\n  cwint: \"\\u2231\",\n  cylcty: \"\\u232D\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  daleth: \"\\u2138\",\n  darr: \"\\u2193\",\n  dArr: \"\\u21D3\",\n  Darr: \"\\u21A1\",\n  dash: \"\\u2010\",\n  dashv: \"\\u22A3\",\n  Dashv: \"\\u2AE4\",\n  dbkarow: \"\\u290F\",\n  dblac: \"\\u02DD\",\n  dcaron: \"\\u010F\",\n  Dcaron: \"\\u010E\",\n  dcy: \"\\u0434\",\n  Dcy: \"\\u0414\",\n  dd: \"\\u2146\",\n  DD: \"\\u2145\",\n  ddagger: \"\\u2021\",\n  ddarr: \"\\u21CA\",\n  DDotrahd: \"\\u2911\",\n  ddotseq: \"\\u2A77\",\n  deg: \"\\xB0\",\n  Del: \"\\u2207\",\n  delta: \"\\u03B4\",\n  Delta: \"\\u0394\",\n  demptyv: \"\\u29B1\",\n  dfisht: \"\\u297F\",\n  dfr: \"\\uD835\\uDD21\",\n  Dfr: \"\\uD835\\uDD07\",\n  dHar: \"\\u2965\",\n  dharl: \"\\u21C3\",\n  dharr: \"\\u21C2\",\n  DiacriticalAcute: \"\\xB4\",\n  DiacriticalDot: \"\\u02D9\",\n  DiacriticalDoubleAcute: \"\\u02DD\",\n  DiacriticalGrave: \"`\",\n  DiacriticalTilde: \"\\u02DC\",\n  diam: \"\\u22C4\",\n  diamond: \"\\u22C4\",\n  Diamond: \"\\u22C4\",\n  diamondsuit: \"\\u2666\",\n  diams: \"\\u2666\",\n  die: \"\\xA8\",\n  DifferentialD: \"\\u2146\",\n  digamma: \"\\u03DD\",\n  disin: \"\\u22F2\",\n  div: \"\\xF7\",\n  divide: \"\\xF7\",\n  divideontimes: \"\\u22C7\",\n  divonx: \"\\u22C7\",\n  djcy: \"\\u0452\",\n  DJcy: \"\\u0402\",\n  dlcorn: \"\\u231E\",\n  dlcrop: \"\\u230D\",\n  dollar: \"$\",\n  dopf: \"\\uD835\\uDD55\",\n  Dopf: \"\\uD835\\uDD3B\",\n  dot: \"\\u02D9\",\n  Dot: \"\\xA8\",\n  DotDot: \"\\u20DC\",\n  doteq: \"\\u2250\",\n  doteqdot: \"\\u2251\",\n  DotEqual: \"\\u2250\",\n  dotminus: \"\\u2238\",\n  dotplus: \"\\u2214\",\n  dotsquare: \"\\u22A1\",\n  doublebarwedge: \"\\u2306\",\n  DoubleContourIntegral: \"\\u222F\",\n  DoubleDot: \"\\xA8\",\n  DoubleDownArrow: \"\\u21D3\",\n  DoubleLeftArrow: \"\\u21D0\",\n  DoubleLeftRightArrow: \"\\u21D4\",\n  DoubleLeftTee: \"\\u2AE4\",\n  DoubleLongLeftArrow: \"\\u27F8\",\n  DoubleLongLeftRightArrow: \"\\u27FA\",\n  DoubleLongRightArrow: \"\\u27F9\",\n  DoubleRightArrow: \"\\u21D2\",\n  DoubleRightTee: \"\\u22A8\",\n  DoubleUpArrow: \"\\u21D1\",\n  DoubleUpDownArrow: \"\\u21D5\",\n  DoubleVerticalBar: \"\\u2225\",\n  downarrow: \"\\u2193\",\n  Downarrow: \"\\u21D3\",\n  DownArrow: \"\\u2193\",\n  DownArrowBar: \"\\u2913\",\n  DownArrowUpArrow: \"\\u21F5\",\n  DownBreve: \"\\u0311\",\n  downdownarrows: \"\\u21CA\",\n  downharpoonleft: \"\\u21C3\",\n  downharpoonright: \"\\u21C2\",\n  DownLeftRightVector: \"\\u2950\",\n  DownLeftTeeVector: \"\\u295E\",\n  DownLeftVector: \"\\u21BD\",\n  DownLeftVectorBar: \"\\u2956\",\n  DownRightTeeVector: \"\\u295F\",\n  DownRightVector: \"\\u21C1\",\n  DownRightVectorBar: \"\\u2957\",\n  DownTee: \"\\u22A4\",\n  DownTeeArrow: \"\\u21A7\",\n  drbkarow: \"\\u2910\",\n  drcorn: \"\\u231F\",\n  drcrop: \"\\u230C\",\n  dscr: \"\\uD835\\uDCB9\",\n  Dscr: \"\\uD835\\uDC9F\",\n  dscy: \"\\u0455\",\n  DScy: \"\\u0405\",\n  dsol: \"\\u29F6\",\n  dstrok: \"\\u0111\",\n  Dstrok: \"\\u0110\",\n  dtdot: \"\\u22F1\",\n  dtri: \"\\u25BF\",\n  dtrif: \"\\u25BE\",\n  duarr: \"\\u21F5\",\n  duhar: \"\\u296F\",\n  dwangle: \"\\u29A6\",\n  dzcy: \"\\u045F\",\n  DZcy: \"\\u040F\",\n  dzigrarr: \"\\u27FF\",\n  eacute: \"\\xE9\",\n  Eacute: \"\\xC9\",\n  easter: \"\\u2A6E\",\n  ecaron: \"\\u011B\",\n  Ecaron: \"\\u011A\",\n  ecir: \"\\u2256\",\n  ecirc: \"\\xEA\",\n  Ecirc: \"\\xCA\",\n  ecolon: \"\\u2255\",\n  ecy: \"\\u044D\",\n  Ecy: \"\\u042D\",\n  eDDot: \"\\u2A77\",\n  edot: \"\\u0117\",\n  eDot: \"\\u2251\",\n  Edot: \"\\u0116\",\n  ee: \"\\u2147\",\n  efDot: \"\\u2252\",\n  efr: \"\\uD835\\uDD22\",\n  Efr: \"\\uD835\\uDD08\",\n  eg: \"\\u2A9A\",\n  egrave: \"\\xE8\",\n  Egrave: \"\\xC8\",\n  egs: \"\\u2A96\",\n  egsdot: \"\\u2A98\",\n  el: \"\\u2A99\",\n  Element: \"\\u2208\",\n  elinters: \"\\u23E7\",\n  ell: \"\\u2113\",\n  els: \"\\u2A95\",\n  elsdot: \"\\u2A97\",\n  emacr: \"\\u0113\",\n  Emacr: \"\\u0112\",\n  empty: \"\\u2205\",\n  emptyset: \"\\u2205\",\n  EmptySmallSquare: \"\\u25FB\",\n  emptyv: \"\\u2205\",\n  EmptyVerySmallSquare: \"\\u25AB\",\n  emsp: \"\\u2003\",\n  emsp13: \"\\u2004\",\n  emsp14: \"\\u2005\",\n  eng: \"\\u014B\",\n  ENG: \"\\u014A\",\n  ensp: \"\\u2002\",\n  eogon: \"\\u0119\",\n  Eogon: \"\\u0118\",\n  eopf: \"\\uD835\\uDD56\",\n  Eopf: \"\\uD835\\uDD3C\",\n  epar: \"\\u22D5\",\n  eparsl: \"\\u29E3\",\n  eplus: \"\\u2A71\",\n  epsi: \"\\u03B5\",\n  epsilon: \"\\u03B5\",\n  Epsilon: \"\\u0395\",\n  epsiv: \"\\u03F5\",\n  eqcirc: \"\\u2256\",\n  eqcolon: \"\\u2255\",\n  eqsim: \"\\u2242\",\n  eqslantgtr: \"\\u2A96\",\n  eqslantless: \"\\u2A95\",\n  Equal: \"\\u2A75\",\n  equals: \"=\",\n  EqualTilde: \"\\u2242\",\n  equest: \"\\u225F\",\n  Equilibrium: \"\\u21CC\",\n  equiv: \"\\u2261\",\n  equivDD: \"\\u2A78\",\n  eqvparsl: \"\\u29E5\",\n  erarr: \"\\u2971\",\n  erDot: \"\\u2253\",\n  escr: \"\\u212F\",\n  Escr: \"\\u2130\",\n  esdot: \"\\u2250\",\n  esim: \"\\u2242\",\n  Esim: \"\\u2A73\",\n  eta: \"\\u03B7\",\n  Eta: \"\\u0397\",\n  eth: \"\\xF0\",\n  ETH: \"\\xD0\",\n  euml: \"\\xEB\",\n  Euml: \"\\xCB\",\n  euro: \"\\u20AC\",\n  excl: \"!\",\n  exist: \"\\u2203\",\n  Exists: \"\\u2203\",\n  expectation: \"\\u2130\",\n  exponentiale: \"\\u2147\",\n  ExponentialE: \"\\u2147\",\n  fallingdotseq: \"\\u2252\",\n  fcy: \"\\u0444\",\n  Fcy: \"\\u0424\",\n  female: \"\\u2640\",\n  ffilig: \"\\uFB03\",\n  fflig: \"\\uFB00\",\n  ffllig: \"\\uFB04\",\n  ffr: \"\\uD835\\uDD23\",\n  Ffr: \"\\uD835\\uDD09\",\n  filig: \"\\uFB01\",\n  FilledSmallSquare: \"\\u25FC\",\n  FilledVerySmallSquare: \"\\u25AA\",\n  fjlig: \"fj\",\n  flat: \"\\u266D\",\n  fllig: \"\\uFB02\",\n  fltns: \"\\u25B1\",\n  fnof: \"\\u0192\",\n  fopf: \"\\uD835\\uDD57\",\n  Fopf: \"\\uD835\\uDD3D\",\n  forall: \"\\u2200\",\n  ForAll: \"\\u2200\",\n  fork: \"\\u22D4\",\n  forkv: \"\\u2AD9\",\n  Fouriertrf: \"\\u2131\",\n  fpartint: \"\\u2A0D\",\n  frac12: \"\\xBD\",\n  frac13: \"\\u2153\",\n  frac14: \"\\xBC\",\n  frac15: \"\\u2155\",\n  frac16: \"\\u2159\",\n  frac18: \"\\u215B\",\n  frac23: \"\\u2154\",\n  frac25: \"\\u2156\",\n  frac34: \"\\xBE\",\n  frac35: \"\\u2157\",\n  frac38: \"\\u215C\",\n  frac45: \"\\u2158\",\n  frac56: \"\\u215A\",\n  frac58: \"\\u215D\",\n  frac78: \"\\u215E\",\n  frasl: \"\\u2044\",\n  frown: \"\\u2322\",\n  fscr: \"\\uD835\\uDCBB\",\n  Fscr: \"\\u2131\",\n  gacute: \"\\u01F5\",\n  gamma: \"\\u03B3\",\n  Gamma: \"\\u0393\",\n  gammad: \"\\u03DD\",\n  Gammad: \"\\u03DC\",\n  gap: \"\\u2A86\",\n  gbreve: \"\\u011F\",\n  Gbreve: \"\\u011E\",\n  Gcedil: \"\\u0122\",\n  gcirc: \"\\u011D\",\n  Gcirc: \"\\u011C\",\n  gcy: \"\\u0433\",\n  Gcy: \"\\u0413\",\n  gdot: \"\\u0121\",\n  Gdot: \"\\u0120\",\n  ge: \"\\u2265\",\n  gE: \"\\u2267\",\n  gel: \"\\u22DB\",\n  gEl: \"\\u2A8C\",\n  geq: \"\\u2265\",\n  geqq: \"\\u2267\",\n  geqslant: \"\\u2A7E\",\n  ges: \"\\u2A7E\",\n  gescc: \"\\u2AA9\",\n  gesdot: \"\\u2A80\",\n  gesdoto: \"\\u2A82\",\n  gesdotol: \"\\u2A84\",\n  gesl: \"\\u22DB\\uFE00\",\n  gesles: \"\\u2A94\",\n  gfr: \"\\uD835\\uDD24\",\n  Gfr: \"\\uD835\\uDD0A\",\n  gg: \"\\u226B\",\n  Gg: \"\\u22D9\",\n  ggg: \"\\u22D9\",\n  gimel: \"\\u2137\",\n  gjcy: \"\\u0453\",\n  GJcy: \"\\u0403\",\n  gl: \"\\u2277\",\n  gla: \"\\u2AA5\",\n  glE: \"\\u2A92\",\n  glj: \"\\u2AA4\",\n  gnap: \"\\u2A8A\",\n  gnapprox: \"\\u2A8A\",\n  gne: \"\\u2A88\",\n  gnE: \"\\u2269\",\n  gneq: \"\\u2A88\",\n  gneqq: \"\\u2269\",\n  gnsim: \"\\u22E7\",\n  gopf: \"\\uD835\\uDD58\",\n  Gopf: \"\\uD835\\uDD3E\",\n  grave: \"`\",\n  GreaterEqual: \"\\u2265\",\n  GreaterEqualLess: \"\\u22DB\",\n  GreaterFullEqual: \"\\u2267\",\n  GreaterGreater: \"\\u2AA2\",\n  GreaterLess: \"\\u2277\",\n  GreaterSlantEqual: \"\\u2A7E\",\n  GreaterTilde: \"\\u2273\",\n  gscr: \"\\u210A\",\n  Gscr: \"\\uD835\\uDCA2\",\n  gsim: \"\\u2273\",\n  gsime: \"\\u2A8E\",\n  gsiml: \"\\u2A90\",\n  gt: \">\",\n  Gt: \"\\u226B\",\n  GT: \">\",\n  gtcc: \"\\u2AA7\",\n  gtcir: \"\\u2A7A\",\n  gtdot: \"\\u22D7\",\n  gtlPar: \"\\u2995\",\n  gtquest: \"\\u2A7C\",\n  gtrapprox: \"\\u2A86\",\n  gtrarr: \"\\u2978\",\n  gtrdot: \"\\u22D7\",\n  gtreqless: \"\\u22DB\",\n  gtreqqless: \"\\u2A8C\",\n  gtrless: \"\\u2277\",\n  gtrsim: \"\\u2273\",\n  gvertneqq: \"\\u2269\\uFE00\",\n  gvnE: \"\\u2269\\uFE00\",\n  Hacek: \"\\u02C7\",\n  hairsp: \"\\u200A\",\n  half: \"\\xBD\",\n  hamilt: \"\\u210B\",\n  hardcy: \"\\u044A\",\n  HARDcy: \"\\u042A\",\n  harr: \"\\u2194\",\n  hArr: \"\\u21D4\",\n  harrcir: \"\\u2948\",\n  harrw: \"\\u21AD\",\n  Hat: \"^\",\n  hbar: \"\\u210F\",\n  hcirc: \"\\u0125\",\n  Hcirc: \"\\u0124\",\n  hearts: \"\\u2665\",\n  heartsuit: \"\\u2665\",\n  hellip: \"\\u2026\",\n  hercon: \"\\u22B9\",\n  hfr: \"\\uD835\\uDD25\",\n  Hfr: \"\\u210C\",\n  HilbertSpace: \"\\u210B\",\n  hksearow: \"\\u2925\",\n  hkswarow: \"\\u2926\",\n  hoarr: \"\\u21FF\",\n  homtht: \"\\u223B\",\n  hookleftarrow: \"\\u21A9\",\n  hookrightarrow: \"\\u21AA\",\n  hopf: \"\\uD835\\uDD59\",\n  Hopf: \"\\u210D\",\n  horbar: \"\\u2015\",\n  HorizontalLine: \"\\u2500\",\n  hscr: \"\\uD835\\uDCBD\",\n  Hscr: \"\\u210B\",\n  hslash: \"\\u210F\",\n  hstrok: \"\\u0127\",\n  Hstrok: \"\\u0126\",\n  HumpDownHump: \"\\u224E\",\n  HumpEqual: \"\\u224F\",\n  hybull: \"\\u2043\",\n  hyphen: \"\\u2010\",\n  iacute: \"\\xED\",\n  Iacute: \"\\xCD\",\n  ic: \"\\u2063\",\n  icirc: \"\\xEE\",\n  Icirc: \"\\xCE\",\n  icy: \"\\u0438\",\n  Icy: \"\\u0418\",\n  Idot: \"\\u0130\",\n  iecy: \"\\u0435\",\n  IEcy: \"\\u0415\",\n  iexcl: \"\\xA1\",\n  iff: \"\\u21D4\",\n  ifr: \"\\uD835\\uDD26\",\n  Ifr: \"\\u2111\",\n  igrave: \"\\xEC\",\n  Igrave: \"\\xCC\",\n  ii: \"\\u2148\",\n  iiiint: \"\\u2A0C\",\n  iiint: \"\\u222D\",\n  iinfin: \"\\u29DC\",\n  iiota: \"\\u2129\",\n  ijlig: \"\\u0133\",\n  IJlig: \"\\u0132\",\n  Im: \"\\u2111\",\n  imacr: \"\\u012B\",\n  Imacr: \"\\u012A\",\n  image: \"\\u2111\",\n  ImaginaryI: \"\\u2148\",\n  imagline: \"\\u2110\",\n  imagpart: \"\\u2111\",\n  imath: \"\\u0131\",\n  imof: \"\\u22B7\",\n  imped: \"\\u01B5\",\n  Implies: \"\\u21D2\",\n  in: \"\\u2208\",\n  incare: \"\\u2105\",\n  infin: \"\\u221E\",\n  infintie: \"\\u29DD\",\n  inodot: \"\\u0131\",\n  int: \"\\u222B\",\n  Int: \"\\u222C\",\n  intcal: \"\\u22BA\",\n  integers: \"\\u2124\",\n  Integral: \"\\u222B\",\n  intercal: \"\\u22BA\",\n  Intersection: \"\\u22C2\",\n  intlarhk: \"\\u2A17\",\n  intprod: \"\\u2A3C\",\n  InvisibleComma: \"\\u2063\",\n  InvisibleTimes: \"\\u2062\",\n  iocy: \"\\u0451\",\n  IOcy: \"\\u0401\",\n  iogon: \"\\u012F\",\n  Iogon: \"\\u012E\",\n  iopf: \"\\uD835\\uDD5A\",\n  Iopf: \"\\uD835\\uDD40\",\n  iota: \"\\u03B9\",\n  Iota: \"\\u0399\",\n  iprod: \"\\u2A3C\",\n  iquest: \"\\xBF\",\n  iscr: \"\\uD835\\uDCBE\",\n  Iscr: \"\\u2110\",\n  isin: \"\\u2208\",\n  isindot: \"\\u22F5\",\n  isinE: \"\\u22F9\",\n  isins: \"\\u22F4\",\n  isinsv: \"\\u22F3\",\n  isinv: \"\\u2208\",\n  it: \"\\u2062\",\n  itilde: \"\\u0129\",\n  Itilde: \"\\u0128\",\n  iukcy: \"\\u0456\",\n  Iukcy: \"\\u0406\",\n  iuml: \"\\xEF\",\n  Iuml: \"\\xCF\",\n  jcirc: \"\\u0135\",\n  Jcirc: \"\\u0134\",\n  jcy: \"\\u0439\",\n  Jcy: \"\\u0419\",\n  jfr: \"\\uD835\\uDD27\",\n  Jfr: \"\\uD835\\uDD0D\",\n  jmath: \"\\u0237\",\n  jopf: \"\\uD835\\uDD5B\",\n  Jopf: \"\\uD835\\uDD41\",\n  jscr: \"\\uD835\\uDCBF\",\n  Jscr: \"\\uD835\\uDCA5\",\n  jsercy: \"\\u0458\",\n  Jsercy: \"\\u0408\",\n  jukcy: \"\\u0454\",\n  Jukcy: \"\\u0404\",\n  kappa: \"\\u03BA\",\n  Kappa: \"\\u039A\",\n  kappav: \"\\u03F0\",\n  kcedil: \"\\u0137\",\n  Kcedil: \"\\u0136\",\n  kcy: \"\\u043A\",\n  Kcy: \"\\u041A\",\n  kfr: \"\\uD835\\uDD28\",\n  Kfr: \"\\uD835\\uDD0E\",\n  kgreen: \"\\u0138\",\n  khcy: \"\\u0445\",\n  KHcy: \"\\u0425\",\n  kjcy: \"\\u045C\",\n  KJcy: \"\\u040C\",\n  kopf: \"\\uD835\\uDD5C\",\n  Kopf: \"\\uD835\\uDD42\",\n  kscr: \"\\uD835\\uDCC0\",\n  Kscr: \"\\uD835\\uDCA6\",\n  lAarr: \"\\u21DA\",\n  lacute: \"\\u013A\",\n  Lacute: \"\\u0139\",\n  laemptyv: \"\\u29B4\",\n  lagran: \"\\u2112\",\n  lambda: \"\\u03BB\",\n  Lambda: \"\\u039B\",\n  lang: \"\\u27E8\",\n  Lang: \"\\u27EA\",\n  langd: \"\\u2991\",\n  langle: \"\\u27E8\",\n  lap: \"\\u2A85\",\n  Laplacetrf: \"\\u2112\",\n  laquo: \"\\xAB\",\n  larr: \"\\u2190\",\n  lArr: \"\\u21D0\",\n  Larr: \"\\u219E\",\n  larrb: \"\\u21E4\",\n  larrbfs: \"\\u291F\",\n  larrfs: \"\\u291D\",\n  larrhk: \"\\u21A9\",\n  larrlp: \"\\u21AB\",\n  larrpl: \"\\u2939\",\n  larrsim: \"\\u2973\",\n  larrtl: \"\\u21A2\",\n  lat: \"\\u2AAB\",\n  latail: \"\\u2919\",\n  lAtail: \"\\u291B\",\n  late: \"\\u2AAD\",\n  lates: \"\\u2AAD\\uFE00\",\n  lbarr: \"\\u290C\",\n  lBarr: \"\\u290E\",\n  lbbrk: \"\\u2772\",\n  lbrace: \"{\",\n  lbrack: \"[\",\n  lbrke: \"\\u298B\",\n  lbrksld: \"\\u298F\",\n  lbrkslu: \"\\u298D\",\n  lcaron: \"\\u013E\",\n  Lcaron: \"\\u013D\",\n  lcedil: \"\\u013C\",\n  Lcedil: \"\\u013B\",\n  lceil: \"\\u2308\",\n  lcub: \"{\",\n  lcy: \"\\u043B\",\n  Lcy: \"\\u041B\",\n  ldca: \"\\u2936\",\n  ldquo: \"\\u201C\",\n  ldquor: \"\\u201E\",\n  ldrdhar: \"\\u2967\",\n  ldrushar: \"\\u294B\",\n  ldsh: \"\\u21B2\",\n  le: \"\\u2264\",\n  lE: \"\\u2266\",\n  LeftAngleBracket: \"\\u27E8\",\n  leftarrow: \"\\u2190\",\n  Leftarrow: \"\\u21D0\",\n  LeftArrow: \"\\u2190\",\n  LeftArrowBar: \"\\u21E4\",\n  LeftArrowRightArrow: \"\\u21C6\",\n  leftarrowtail: \"\\u21A2\",\n  LeftCeiling: \"\\u2308\",\n  LeftDoubleBracket: \"\\u27E6\",\n  LeftDownTeeVector: \"\\u2961\",\n  LeftDownVector: \"\\u21C3\",\n  LeftDownVectorBar: \"\\u2959\",\n  LeftFloor: \"\\u230A\",\n  leftharpoondown: \"\\u21BD\",\n  leftharpoonup: \"\\u21BC\",\n  leftleftarrows: \"\\u21C7\",\n  leftrightarrow: \"\\u2194\",\n  Leftrightarrow: \"\\u21D4\",\n  LeftRightArrow: \"\\u2194\",\n  leftrightarrows: \"\\u21C6\",\n  leftrightharpoons: \"\\u21CB\",\n  leftrightsquigarrow: \"\\u21AD\",\n  LeftRightVector: \"\\u294E\",\n  LeftTee: \"\\u22A3\",\n  LeftTeeArrow: \"\\u21A4\",\n  LeftTeeVector: \"\\u295A\",\n  leftthreetimes: \"\\u22CB\",\n  LeftTriangle: \"\\u22B2\",\n  LeftTriangleBar: \"\\u29CF\",\n  LeftTriangleEqual: \"\\u22B4\",\n  LeftUpDownVector: \"\\u2951\",\n  LeftUpTeeVector: \"\\u2960\",\n  LeftUpVector: \"\\u21BF\",\n  LeftUpVectorBar: \"\\u2958\",\n  LeftVector: \"\\u21BC\",\n  LeftVectorBar: \"\\u2952\",\n  leg: \"\\u22DA\",\n  lEg: \"\\u2A8B\",\n  leq: \"\\u2264\",\n  leqq: \"\\u2266\",\n  leqslant: \"\\u2A7D\",\n  les: \"\\u2A7D\",\n  lescc: \"\\u2AA8\",\n  lesdot: \"\\u2A7F\",\n  lesdoto: \"\\u2A81\",\n  lesdotor: \"\\u2A83\",\n  lesg: \"\\u22DA\\uFE00\",\n  lesges: \"\\u2A93\",\n  lessapprox: \"\\u2A85\",\n  lessdot: \"\\u22D6\",\n  lesseqgtr: \"\\u22DA\",\n  lesseqqgtr: \"\\u2A8B\",\n  LessEqualGreater: \"\\u22DA\",\n  LessFullEqual: \"\\u2266\",\n  LessGreater: \"\\u2276\",\n  lessgtr: \"\\u2276\",\n  LessLess: \"\\u2AA1\",\n  lesssim: \"\\u2272\",\n  LessSlantEqual: \"\\u2A7D\",\n  LessTilde: \"\\u2272\",\n  lfisht: \"\\u297C\",\n  lfloor: \"\\u230A\",\n  lfr: \"\\uD835\\uDD29\",\n  Lfr: \"\\uD835\\uDD0F\",\n  lg: \"\\u2276\",\n  lgE: \"\\u2A91\",\n  lHar: \"\\u2962\",\n  lhard: \"\\u21BD\",\n  lharu: \"\\u21BC\",\n  lharul: \"\\u296A\",\n  lhblk: \"\\u2584\",\n  ljcy: \"\\u0459\",\n  LJcy: \"\\u0409\",\n  ll: \"\\u226A\",\n  Ll: \"\\u22D8\",\n  llarr: \"\\u21C7\",\n  llcorner: \"\\u231E\",\n  Lleftarrow: \"\\u21DA\",\n  llhard: \"\\u296B\",\n  lltri: \"\\u25FA\",\n  lmidot: \"\\u0140\",\n  Lmidot: \"\\u013F\",\n  lmoust: \"\\u23B0\",\n  lmoustache: \"\\u23B0\",\n  lnap: \"\\u2A89\",\n  lnapprox: \"\\u2A89\",\n  lne: \"\\u2A87\",\n  lnE: \"\\u2268\",\n  lneq: \"\\u2A87\",\n  lneqq: \"\\u2268\",\n  lnsim: \"\\u22E6\",\n  loang: \"\\u27EC\",\n  loarr: \"\\u21FD\",\n  lobrk: \"\\u27E6\",\n  longleftarrow: \"\\u27F5\",\n  Longleftarrow: \"\\u27F8\",\n  LongLeftArrow: \"\\u27F5\",\n  longleftrightarrow: \"\\u27F7\",\n  Longleftrightarrow: \"\\u27FA\",\n  LongLeftRightArrow: \"\\u27F7\",\n  longmapsto: \"\\u27FC\",\n  longrightarrow: \"\\u27F6\",\n  Longrightarrow: \"\\u27F9\",\n  LongRightArrow: \"\\u27F6\",\n  looparrowleft: \"\\u21AB\",\n  looparrowright: \"\\u21AC\",\n  lopar: \"\\u2985\",\n  lopf: \"\\uD835\\uDD5D\",\n  Lopf: \"\\uD835\\uDD43\",\n  loplus: \"\\u2A2D\",\n  lotimes: \"\\u2A34\",\n  lowast: \"\\u2217\",\n  lowbar: \"_\",\n  LowerLeftArrow: \"\\u2199\",\n  LowerRightArrow: \"\\u2198\",\n  loz: \"\\u25CA\",\n  lozenge: \"\\u25CA\",\n  lozf: \"\\u29EB\",\n  lpar: \"(\",\n  lparlt: \"\\u2993\",\n  lrarr: \"\\u21C6\",\n  lrcorner: \"\\u231F\",\n  lrhar: \"\\u21CB\",\n  lrhard: \"\\u296D\",\n  lrm: \"\\u200E\",\n  lrtri: \"\\u22BF\",\n  lsaquo: \"\\u2039\",\n  lscr: \"\\uD835\\uDCC1\",\n  Lscr: \"\\u2112\",\n  lsh: \"\\u21B0\",\n  Lsh: \"\\u21B0\",\n  lsim: \"\\u2272\",\n  lsime: \"\\u2A8D\",\n  lsimg: \"\\u2A8F\",\n  lsqb: \"[\",\n  lsquo: \"\\u2018\",\n  lsquor: \"\\u201A\",\n  lstrok: \"\\u0142\",\n  Lstrok: \"\\u0141\",\n  lt: \"<\",\n  Lt: \"\\u226A\",\n  LT: \"<\",\n  ltcc: \"\\u2AA6\",\n  ltcir: \"\\u2A79\",\n  ltdot: \"\\u22D6\",\n  lthree: \"\\u22CB\",\n  ltimes: \"\\u22C9\",\n  ltlarr: \"\\u2976\",\n  ltquest: \"\\u2A7B\",\n  ltri: \"\\u25C3\",\n  ltrie: \"\\u22B4\",\n  ltrif: \"\\u25C2\",\n  ltrPar: \"\\u2996\",\n  lurdshar: \"\\u294A\",\n  luruhar: \"\\u2966\",\n  lvertneqq: \"\\u2268\\uFE00\",\n  lvnE: \"\\u2268\\uFE00\",\n  macr: \"\\xAF\",\n  male: \"\\u2642\",\n  malt: \"\\u2720\",\n  maltese: \"\\u2720\",\n  map: \"\\u21A6\",\n  Map: \"\\u2905\",\n  mapsto: \"\\u21A6\",\n  mapstodown: \"\\u21A7\",\n  mapstoleft: \"\\u21A4\",\n  mapstoup: \"\\u21A5\",\n  marker: \"\\u25AE\",\n  mcomma: \"\\u2A29\",\n  mcy: \"\\u043C\",\n  Mcy: \"\\u041C\",\n  mdash: \"\\u2014\",\n  mDDot: \"\\u223A\",\n  measuredangle: \"\\u2221\",\n  MediumSpace: \"\\u205F\",\n  Mellintrf: \"\\u2133\",\n  mfr: \"\\uD835\\uDD2A\",\n  Mfr: \"\\uD835\\uDD10\",\n  mho: \"\\u2127\",\n  micro: \"\\xB5\",\n  mid: \"\\u2223\",\n  midast: \"*\",\n  midcir: \"\\u2AF0\",\n  middot: \"\\xB7\",\n  minus: \"\\u2212\",\n  minusb: \"\\u229F\",\n  minusd: \"\\u2238\",\n  minusdu: \"\\u2A2A\",\n  MinusPlus: \"\\u2213\",\n  mlcp: \"\\u2ADB\",\n  mldr: \"\\u2026\",\n  mnplus: \"\\u2213\",\n  models: \"\\u22A7\",\n  mopf: \"\\uD835\\uDD5E\",\n  Mopf: \"\\uD835\\uDD44\",\n  mp: \"\\u2213\",\n  mscr: \"\\uD835\\uDCC2\",\n  Mscr: \"\\u2133\",\n  mstpos: \"\\u223E\",\n  mu: \"\\u03BC\",\n  Mu: \"\\u039C\",\n  multimap: \"\\u22B8\",\n  mumap: \"\\u22B8\",\n  nabla: \"\\u2207\",\n  nacute: \"\\u0144\",\n  Nacute: \"\\u0143\",\n  nang: \"\\u2220\\u20D2\",\n  nap: \"\\u2249\",\n  napE: \"\\u2A70\\u0338\",\n  napid: \"\\u224B\\u0338\",\n  napos: \"\\u0149\",\n  napprox: \"\\u2249\",\n  natur: \"\\u266E\",\n  natural: \"\\u266E\",\n  naturals: \"\\u2115\",\n  nbsp: \"\\xA0\",\n  nbump: \"\\u224E\\u0338\",\n  nbumpe: \"\\u224F\\u0338\",\n  ncap: \"\\u2A43\",\n  ncaron: \"\\u0148\",\n  Ncaron: \"\\u0147\",\n  ncedil: \"\\u0146\",\n  Ncedil: \"\\u0145\",\n  ncong: \"\\u2247\",\n  ncongdot: \"\\u2A6D\\u0338\",\n  ncup: \"\\u2A42\",\n  ncy: \"\\u043D\",\n  Ncy: \"\\u041D\",\n  ndash: \"\\u2013\",\n  ne: \"\\u2260\",\n  nearhk: \"\\u2924\",\n  nearr: \"\\u2197\",\n  neArr: \"\\u21D7\",\n  nearrow: \"\\u2197\",\n  nedot: \"\\u2250\\u0338\",\n  NegativeMediumSpace: \"\\u200B\",\n  NegativeThickSpace: \"\\u200B\",\n  NegativeThinSpace: \"\\u200B\",\n  NegativeVeryThinSpace: \"\\u200B\",\n  nequiv: \"\\u2262\",\n  nesear: \"\\u2928\",\n  nesim: \"\\u2242\\u0338\",\n  NestedGreaterGreater: \"\\u226B\",\n  NestedLessLess: \"\\u226A\",\n  NewLine: \"\\n\",\n  nexist: \"\\u2204\",\n  nexists: \"\\u2204\",\n  nfr: \"\\uD835\\uDD2B\",\n  Nfr: \"\\uD835\\uDD11\",\n  nge: \"\\u2271\",\n  ngE: \"\\u2267\\u0338\",\n  ngeq: \"\\u2271\",\n  ngeqq: \"\\u2267\\u0338\",\n  ngeqslant: \"\\u2A7E\\u0338\",\n  nges: \"\\u2A7E\\u0338\",\n  nGg: \"\\u22D9\\u0338\",\n  ngsim: \"\\u2275\",\n  ngt: \"\\u226F\",\n  nGt: \"\\u226B\\u20D2\",\n  ngtr: \"\\u226F\",\n  nGtv: \"\\u226B\\u0338\",\n  nharr: \"\\u21AE\",\n  nhArr: \"\\u21CE\",\n  nhpar: \"\\u2AF2\",\n  ni: \"\\u220B\",\n  nis: \"\\u22FC\",\n  nisd: \"\\u22FA\",\n  niv: \"\\u220B\",\n  njcy: \"\\u045A\",\n  NJcy: \"\\u040A\",\n  nlarr: \"\\u219A\",\n  nlArr: \"\\u21CD\",\n  nldr: \"\\u2025\",\n  nle: \"\\u2270\",\n  nlE: \"\\u2266\\u0338\",\n  nleftarrow: \"\\u219A\",\n  nLeftarrow: \"\\u21CD\",\n  nleftrightarrow: \"\\u21AE\",\n  nLeftrightarrow: \"\\u21CE\",\n  nleq: \"\\u2270\",\n  nleqq: \"\\u2266\\u0338\",\n  nleqslant: \"\\u2A7D\\u0338\",\n  nles: \"\\u2A7D\\u0338\",\n  nless: \"\\u226E\",\n  nLl: \"\\u22D8\\u0338\",\n  nlsim: \"\\u2274\",\n  nlt: \"\\u226E\",\n  nLt: \"\\u226A\\u20D2\",\n  nltri: \"\\u22EA\",\n  nltrie: \"\\u22EC\",\n  nLtv: \"\\u226A\\u0338\",\n  nmid: \"\\u2224\",\n  NoBreak: \"\\u2060\",\n  NonBreakingSpace: \"\\xA0\",\n  nopf: \"\\uD835\\uDD5F\",\n  Nopf: \"\\u2115\",\n  not: \"\\xAC\",\n  Not: \"\\u2AEC\",\n  NotCongruent: \"\\u2262\",\n  NotCupCap: \"\\u226D\",\n  NotDoubleVerticalBar: \"\\u2226\",\n  NotElement: \"\\u2209\",\n  NotEqual: \"\\u2260\",\n  NotEqualTilde: \"\\u2242\\u0338\",\n  NotExists: \"\\u2204\",\n  NotGreater: \"\\u226F\",\n  NotGreaterEqual: \"\\u2271\",\n  NotGreaterFullEqual: \"\\u2267\\u0338\",\n  NotGreaterGreater: \"\\u226B\\u0338\",\n  NotGreaterLess: \"\\u2279\",\n  NotGreaterSlantEqual: \"\\u2A7E\\u0338\",\n  NotGreaterTilde: \"\\u2275\",\n  NotHumpDownHump: \"\\u224E\\u0338\",\n  NotHumpEqual: \"\\u224F\\u0338\",\n  notin: \"\\u2209\",\n  notindot: \"\\u22F5\\u0338\",\n  notinE: \"\\u22F9\\u0338\",\n  notinva: \"\\u2209\",\n  notinvb: \"\\u22F7\",\n  notinvc: \"\\u22F6\",\n  NotLeftTriangle: \"\\u22EA\",\n  NotLeftTriangleBar: \"\\u29CF\\u0338\",\n  NotLeftTriangleEqual: \"\\u22EC\",\n  NotLess: \"\\u226E\",\n  NotLessEqual: \"\\u2270\",\n  NotLessGreater: \"\\u2278\",\n  NotLessLess: \"\\u226A\\u0338\",\n  NotLessSlantEqual: \"\\u2A7D\\u0338\",\n  NotLessTilde: \"\\u2274\",\n  NotNestedGreaterGreater: \"\\u2AA2\\u0338\",\n  NotNestedLessLess: \"\\u2AA1\\u0338\",\n  notni: \"\\u220C\",\n  notniva: \"\\u220C\",\n  notnivb: \"\\u22FE\",\n  notnivc: \"\\u22FD\",\n  NotPrecedes: \"\\u2280\",\n  NotPrecedesEqual: \"\\u2AAF\\u0338\",\n  NotPrecedesSlantEqual: \"\\u22E0\",\n  NotReverseElement: \"\\u220C\",\n  NotRightTriangle: \"\\u22EB\",\n  NotRightTriangleBar: \"\\u29D0\\u0338\",\n  NotRightTriangleEqual: \"\\u22ED\",\n  NotSquareSubset: \"\\u228F\\u0338\",\n  NotSquareSubsetEqual: \"\\u22E2\",\n  NotSquareSuperset: \"\\u2290\\u0338\",\n  NotSquareSupersetEqual: \"\\u22E3\",\n  NotSubset: \"\\u2282\\u20D2\",\n  NotSubsetEqual: \"\\u2288\",\n  NotSucceeds: \"\\u2281\",\n  NotSucceedsEqual: \"\\u2AB0\\u0338\",\n  NotSucceedsSlantEqual: \"\\u22E1\",\n  NotSucceedsTilde: \"\\u227F\\u0338\",\n  NotSuperset: \"\\u2283\\u20D2\",\n  NotSupersetEqual: \"\\u2289\",\n  NotTilde: \"\\u2241\",\n  NotTildeEqual: \"\\u2244\",\n  NotTildeFullEqual: \"\\u2247\",\n  NotTildeTilde: \"\\u2249\",\n  NotVerticalBar: \"\\u2224\",\n  npar: \"\\u2226\",\n  nparallel: \"\\u2226\",\n  nparsl: \"\\u2AFD\\u20E5\",\n  npart: \"\\u2202\\u0338\",\n  npolint: \"\\u2A14\",\n  npr: \"\\u2280\",\n  nprcue: \"\\u22E0\",\n  npre: \"\\u2AAF\\u0338\",\n  nprec: \"\\u2280\",\n  npreceq: \"\\u2AAF\\u0338\",\n  nrarr: \"\\u219B\",\n  nrArr: \"\\u21CF\",\n  nrarrc: \"\\u2933\\u0338\",\n  nrarrw: \"\\u219D\\u0338\",\n  nrightarrow: \"\\u219B\",\n  nRightarrow: \"\\u21CF\",\n  nrtri: \"\\u22EB\",\n  nrtrie: \"\\u22ED\",\n  nsc: \"\\u2281\",\n  nsccue: \"\\u22E1\",\n  nsce: \"\\u2AB0\\u0338\",\n  nscr: \"\\uD835\\uDCC3\",\n  Nscr: \"\\uD835\\uDCA9\",\n  nshortmid: \"\\u2224\",\n  nshortparallel: \"\\u2226\",\n  nsim: \"\\u2241\",\n  nsime: \"\\u2244\",\n  nsimeq: \"\\u2244\",\n  nsmid: \"\\u2224\",\n  nspar: \"\\u2226\",\n  nsqsube: \"\\u22E2\",\n  nsqsupe: \"\\u22E3\",\n  nsub: \"\\u2284\",\n  nsube: \"\\u2288\",\n  nsubE: \"\\u2AC5\\u0338\",\n  nsubset: \"\\u2282\\u20D2\",\n  nsubseteq: \"\\u2288\",\n  nsubseteqq: \"\\u2AC5\\u0338\",\n  nsucc: \"\\u2281\",\n  nsucceq: \"\\u2AB0\\u0338\",\n  nsup: \"\\u2285\",\n  nsupe: \"\\u2289\",\n  nsupE: \"\\u2AC6\\u0338\",\n  nsupset: \"\\u2283\\u20D2\",\n  nsupseteq: \"\\u2289\",\n  nsupseteqq: \"\\u2AC6\\u0338\",\n  ntgl: \"\\u2279\",\n  ntilde: \"\\xF1\",\n  Ntilde: \"\\xD1\",\n  ntlg: \"\\u2278\",\n  ntriangleleft: \"\\u22EA\",\n  ntrianglelefteq: \"\\u22EC\",\n  ntriangleright: \"\\u22EB\",\n  ntrianglerighteq: \"\\u22ED\",\n  nu: \"\\u03BD\",\n  Nu: \"\\u039D\",\n  num: \"#\",\n  numero: \"\\u2116\",\n  numsp: \"\\u2007\",\n  nvap: \"\\u224D\\u20D2\",\n  nvdash: \"\\u22AC\",\n  nvDash: \"\\u22AD\",\n  nVdash: \"\\u22AE\",\n  nVDash: \"\\u22AF\",\n  nvge: \"\\u2265\\u20D2\",\n  nvgt: \">\\u20D2\",\n  nvHarr: \"\\u2904\",\n  nvinfin: \"\\u29DE\",\n  nvlArr: \"\\u2902\",\n  nvle: \"\\u2264\\u20D2\",\n  nvlt: \"<\\u20D2\",\n  nvltrie: \"\\u22B4\\u20D2\",\n  nvrArr: \"\\u2903\",\n  nvrtrie: \"\\u22B5\\u20D2\",\n  nvsim: \"\\u223C\\u20D2\",\n  nwarhk: \"\\u2923\",\n  nwarr: \"\\u2196\",\n  nwArr: \"\\u21D6\",\n  nwarrow: \"\\u2196\",\n  nwnear: \"\\u2927\",\n  oacute: \"\\xF3\",\n  Oacute: \"\\xD3\",\n  oast: \"\\u229B\",\n  ocir: \"\\u229A\",\n  ocirc: \"\\xF4\",\n  Ocirc: \"\\xD4\",\n  ocy: \"\\u043E\",\n  Ocy: \"\\u041E\",\n  odash: \"\\u229D\",\n  odblac: \"\\u0151\",\n  Odblac: \"\\u0150\",\n  odiv: \"\\u2A38\",\n  odot: \"\\u2299\",\n  odsold: \"\\u29BC\",\n  oelig: \"\\u0153\",\n  OElig: \"\\u0152\",\n  ofcir: \"\\u29BF\",\n  ofr: \"\\uD835\\uDD2C\",\n  Ofr: \"\\uD835\\uDD12\",\n  ogon: \"\\u02DB\",\n  ograve: \"\\xF2\",\n  Ograve: \"\\xD2\",\n  ogt: \"\\u29C1\",\n  ohbar: \"\\u29B5\",\n  ohm: \"\\u03A9\",\n  oint: \"\\u222E\",\n  olarr: \"\\u21BA\",\n  olcir: \"\\u29BE\",\n  olcross: \"\\u29BB\",\n  oline: \"\\u203E\",\n  olt: \"\\u29C0\",\n  omacr: \"\\u014D\",\n  Omacr: \"\\u014C\",\n  omega: \"\\u03C9\",\n  Omega: \"\\u03A9\",\n  omicron: \"\\u03BF\",\n  Omicron: \"\\u039F\",\n  omid: \"\\u29B6\",\n  ominus: \"\\u2296\",\n  oopf: \"\\uD835\\uDD60\",\n  Oopf: \"\\uD835\\uDD46\",\n  opar: \"\\u29B7\",\n  OpenCurlyDoubleQuote: \"\\u201C\",\n  OpenCurlyQuote: \"\\u2018\",\n  operp: \"\\u29B9\",\n  oplus: \"\\u2295\",\n  or: \"\\u2228\",\n  Or: \"\\u2A54\",\n  orarr: \"\\u21BB\",\n  ord: \"\\u2A5D\",\n  order: \"\\u2134\",\n  orderof: \"\\u2134\",\n  ordf: \"\\xAA\",\n  ordm: \"\\xBA\",\n  origof: \"\\u22B6\",\n  oror: \"\\u2A56\",\n  orslope: \"\\u2A57\",\n  orv: \"\\u2A5B\",\n  oS: \"\\u24C8\",\n  oscr: \"\\u2134\",\n  Oscr: \"\\uD835\\uDCAA\",\n  oslash: \"\\xF8\",\n  Oslash: \"\\xD8\",\n  osol: \"\\u2298\",\n  otilde: \"\\xF5\",\n  Otilde: \"\\xD5\",\n  otimes: \"\\u2297\",\n  Otimes: \"\\u2A37\",\n  otimesas: \"\\u2A36\",\n  ouml: \"\\xF6\",\n  Ouml: \"\\xD6\",\n  ovbar: \"\\u233D\",\n  OverBar: \"\\u203E\",\n  OverBrace: \"\\u23DE\",\n  OverBracket: \"\\u23B4\",\n  OverParenthesis: \"\\u23DC\",\n  par: \"\\u2225\",\n  para: \"\\xB6\",\n  parallel: \"\\u2225\",\n  parsim: \"\\u2AF3\",\n  parsl: \"\\u2AFD\",\n  part: \"\\u2202\",\n  PartialD: \"\\u2202\",\n  pcy: \"\\u043F\",\n  Pcy: \"\\u041F\",\n  percnt: \"%\",\n  period: \".\",\n  permil: \"\\u2030\",\n  perp: \"\\u22A5\",\n  pertenk: \"\\u2031\",\n  pfr: \"\\uD835\\uDD2D\",\n  Pfr: \"\\uD835\\uDD13\",\n  phi: \"\\u03C6\",\n  Phi: \"\\u03A6\",\n  phiv: \"\\u03D5\",\n  phmmat: \"\\u2133\",\n  phone: \"\\u260E\",\n  pi: \"\\u03C0\",\n  Pi: \"\\u03A0\",\n  pitchfork: \"\\u22D4\",\n  piv: \"\\u03D6\",\n  planck: \"\\u210F\",\n  planckh: \"\\u210E\",\n  plankv: \"\\u210F\",\n  plus: \"+\",\n  plusacir: \"\\u2A23\",\n  plusb: \"\\u229E\",\n  pluscir: \"\\u2A22\",\n  plusdo: \"\\u2214\",\n  plusdu: \"\\u2A25\",\n  pluse: \"\\u2A72\",\n  PlusMinus: \"\\xB1\",\n  plusmn: \"\\xB1\",\n  plussim: \"\\u2A26\",\n  plustwo: \"\\u2A27\",\n  pm: \"\\xB1\",\n  Poincareplane: \"\\u210C\",\n  pointint: \"\\u2A15\",\n  popf: \"\\uD835\\uDD61\",\n  Popf: \"\\u2119\",\n  pound: \"\\xA3\",\n  pr: \"\\u227A\",\n  Pr: \"\\u2ABB\",\n  prap: \"\\u2AB7\",\n  prcue: \"\\u227C\",\n  pre: \"\\u2AAF\",\n  prE: \"\\u2AB3\",\n  prec: \"\\u227A\",\n  precapprox: \"\\u2AB7\",\n  preccurlyeq: \"\\u227C\",\n  Precedes: \"\\u227A\",\n  PrecedesEqual: \"\\u2AAF\",\n  PrecedesSlantEqual: \"\\u227C\",\n  PrecedesTilde: \"\\u227E\",\n  preceq: \"\\u2AAF\",\n  precnapprox: \"\\u2AB9\",\n  precneqq: \"\\u2AB5\",\n  precnsim: \"\\u22E8\",\n  precsim: \"\\u227E\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  primes: \"\\u2119\",\n  prnap: \"\\u2AB9\",\n  prnE: \"\\u2AB5\",\n  prnsim: \"\\u22E8\",\n  prod: \"\\u220F\",\n  Product: \"\\u220F\",\n  profalar: \"\\u232E\",\n  profline: \"\\u2312\",\n  profsurf: \"\\u2313\",\n  prop: \"\\u221D\",\n  Proportion: \"\\u2237\",\n  Proportional: \"\\u221D\",\n  propto: \"\\u221D\",\n  prsim: \"\\u227E\",\n  prurel: \"\\u22B0\",\n  pscr: \"\\uD835\\uDCC5\",\n  Pscr: \"\\uD835\\uDCAB\",\n  psi: \"\\u03C8\",\n  Psi: \"\\u03A8\",\n  puncsp: \"\\u2008\",\n  qfr: \"\\uD835\\uDD2E\",\n  Qfr: \"\\uD835\\uDD14\",\n  qint: \"\\u2A0C\",\n  qopf: \"\\uD835\\uDD62\",\n  Qopf: \"\\u211A\",\n  qprime: \"\\u2057\",\n  qscr: \"\\uD835\\uDCC6\",\n  Qscr: \"\\uD835\\uDCAC\",\n  quaternions: \"\\u210D\",\n  quatint: \"\\u2A16\",\n  quest: \"?\",\n  questeq: \"\\u225F\",\n  quot: '\"',\n  QUOT: '\"',\n  rAarr: \"\\u21DB\",\n  race: \"\\u223D\\u0331\",\n  racute: \"\\u0155\",\n  Racute: \"\\u0154\",\n  radic: \"\\u221A\",\n  raemptyv: \"\\u29B3\",\n  rang: \"\\u27E9\",\n  Rang: \"\\u27EB\",\n  rangd: \"\\u2992\",\n  range: \"\\u29A5\",\n  rangle: \"\\u27E9\",\n  raquo: \"\\xBB\",\n  rarr: \"\\u2192\",\n  rArr: \"\\u21D2\",\n  Rarr: \"\\u21A0\",\n  rarrap: \"\\u2975\",\n  rarrb: \"\\u21E5\",\n  rarrbfs: \"\\u2920\",\n  rarrc: \"\\u2933\",\n  rarrfs: \"\\u291E\",\n  rarrhk: \"\\u21AA\",\n  rarrlp: \"\\u21AC\",\n  rarrpl: \"\\u2945\",\n  rarrsim: \"\\u2974\",\n  rarrtl: \"\\u21A3\",\n  Rarrtl: \"\\u2916\",\n  rarrw: \"\\u219D\",\n  ratail: \"\\u291A\",\n  rAtail: \"\\u291C\",\n  ratio: \"\\u2236\",\n  rationals: \"\\u211A\",\n  rbarr: \"\\u290D\",\n  rBarr: \"\\u290F\",\n  RBarr: \"\\u2910\",\n  rbbrk: \"\\u2773\",\n  rbrace: \"}\",\n  rbrack: \"]\",\n  rbrke: \"\\u298C\",\n  rbrksld: \"\\u298E\",\n  rbrkslu: \"\\u2990\",\n  rcaron: \"\\u0159\",\n  Rcaron: \"\\u0158\",\n  rcedil: \"\\u0157\",\n  Rcedil: \"\\u0156\",\n  rceil: \"\\u2309\",\n  rcub: \"}\",\n  rcy: \"\\u0440\",\n  Rcy: \"\\u0420\",\n  rdca: \"\\u2937\",\n  rdldhar: \"\\u2969\",\n  rdquo: \"\\u201D\",\n  rdquor: \"\\u201D\",\n  rdsh: \"\\u21B3\",\n  Re: \"\\u211C\",\n  real: \"\\u211C\",\n  realine: \"\\u211B\",\n  realpart: \"\\u211C\",\n  reals: \"\\u211D\",\n  rect: \"\\u25AD\",\n  reg: \"\\xAE\",\n  REG: \"\\xAE\",\n  ReverseElement: \"\\u220B\",\n  ReverseEquilibrium: \"\\u21CB\",\n  ReverseUpEquilibrium: \"\\u296F\",\n  rfisht: \"\\u297D\",\n  rfloor: \"\\u230B\",\n  rfr: \"\\uD835\\uDD2F\",\n  Rfr: \"\\u211C\",\n  rHar: \"\\u2964\",\n  rhard: \"\\u21C1\",\n  rharu: \"\\u21C0\",\n  rharul: \"\\u296C\",\n  rho: \"\\u03C1\",\n  Rho: \"\\u03A1\",\n  rhov: \"\\u03F1\",\n  RightAngleBracket: \"\\u27E9\",\n  rightarrow: \"\\u2192\",\n  Rightarrow: \"\\u21D2\",\n  RightArrow: \"\\u2192\",\n  RightArrowBar: \"\\u21E5\",\n  RightArrowLeftArrow: \"\\u21C4\",\n  rightarrowtail: \"\\u21A3\",\n  RightCeiling: \"\\u2309\",\n  RightDoubleBracket: \"\\u27E7\",\n  RightDownTeeVector: \"\\u295D\",\n  RightDownVector: \"\\u21C2\",\n  RightDownVectorBar: \"\\u2955\",\n  RightFloor: \"\\u230B\",\n  rightharpoondown: \"\\u21C1\",\n  rightharpoonup: \"\\u21C0\",\n  rightleftarrows: \"\\u21C4\",\n  rightleftharpoons: \"\\u21CC\",\n  rightrightarrows: \"\\u21C9\",\n  rightsquigarrow: \"\\u219D\",\n  RightTee: \"\\u22A2\",\n  RightTeeArrow: \"\\u21A6\",\n  RightTeeVector: \"\\u295B\",\n  rightthreetimes: \"\\u22CC\",\n  RightTriangle: \"\\u22B3\",\n  RightTriangleBar: \"\\u29D0\",\n  RightTriangleEqual: \"\\u22B5\",\n  RightUpDownVector: \"\\u294F\",\n  RightUpTeeVector: \"\\u295C\",\n  RightUpVector: \"\\u21BE\",\n  RightUpVectorBar: \"\\u2954\",\n  RightVector: \"\\u21C0\",\n  RightVectorBar: \"\\u2953\",\n  ring: \"\\u02DA\",\n  risingdotseq: \"\\u2253\",\n  rlarr: \"\\u21C4\",\n  rlhar: \"\\u21CC\",\n  rlm: \"\\u200F\",\n  rmoust: \"\\u23B1\",\n  rmoustache: \"\\u23B1\",\n  rnmid: \"\\u2AEE\",\n  roang: \"\\u27ED\",\n  roarr: \"\\u21FE\",\n  robrk: \"\\u27E7\",\n  ropar: \"\\u2986\",\n  ropf: \"\\uD835\\uDD63\",\n  Ropf: \"\\u211D\",\n  roplus: \"\\u2A2E\",\n  rotimes: \"\\u2A35\",\n  RoundImplies: \"\\u2970\",\n  rpar: \")\",\n  rpargt: \"\\u2994\",\n  rppolint: \"\\u2A12\",\n  rrarr: \"\\u21C9\",\n  Rrightarrow: \"\\u21DB\",\n  rsaquo: \"\\u203A\",\n  rscr: \"\\uD835\\uDCC7\",\n  Rscr: \"\\u211B\",\n  rsh: \"\\u21B1\",\n  Rsh: \"\\u21B1\",\n  rsqb: \"]\",\n  rsquo: \"\\u2019\",\n  rsquor: \"\\u2019\",\n  rthree: \"\\u22CC\",\n  rtimes: \"\\u22CA\",\n  rtri: \"\\u25B9\",\n  rtrie: \"\\u22B5\",\n  rtrif: \"\\u25B8\",\n  rtriltri: \"\\u29CE\",\n  RuleDelayed: \"\\u29F4\",\n  ruluhar: \"\\u2968\",\n  rx: \"\\u211E\",\n  sacute: \"\\u015B\",\n  Sacute: \"\\u015A\",\n  sbquo: \"\\u201A\",\n  sc: \"\\u227B\",\n  Sc: \"\\u2ABC\",\n  scap: \"\\u2AB8\",\n  scaron: \"\\u0161\",\n  Scaron: \"\\u0160\",\n  sccue: \"\\u227D\",\n  sce: \"\\u2AB0\",\n  scE: \"\\u2AB4\",\n  scedil: \"\\u015F\",\n  Scedil: \"\\u015E\",\n  scirc: \"\\u015D\",\n  Scirc: \"\\u015C\",\n  scnap: \"\\u2ABA\",\n  scnE: \"\\u2AB6\",\n  scnsim: \"\\u22E9\",\n  scpolint: \"\\u2A13\",\n  scsim: \"\\u227F\",\n  scy: \"\\u0441\",\n  Scy: \"\\u0421\",\n  sdot: \"\\u22C5\",\n  sdotb: \"\\u22A1\",\n  sdote: \"\\u2A66\",\n  searhk: \"\\u2925\",\n  searr: \"\\u2198\",\n  seArr: \"\\u21D8\",\n  searrow: \"\\u2198\",\n  sect: \"\\xA7\",\n  semi: \";\",\n  seswar: \"\\u2929\",\n  setminus: \"\\u2216\",\n  setmn: \"\\u2216\",\n  sext: \"\\u2736\",\n  sfr: \"\\uD835\\uDD30\",\n  Sfr: \"\\uD835\\uDD16\",\n  sfrown: \"\\u2322\",\n  sharp: \"\\u266F\",\n  shchcy: \"\\u0449\",\n  SHCHcy: \"\\u0429\",\n  shcy: \"\\u0448\",\n  SHcy: \"\\u0428\",\n  ShortDownArrow: \"\\u2193\",\n  ShortLeftArrow: \"\\u2190\",\n  shortmid: \"\\u2223\",\n  shortparallel: \"\\u2225\",\n  ShortRightArrow: \"\\u2192\",\n  ShortUpArrow: \"\\u2191\",\n  shy: \"\\xAD\",\n  sigma: \"\\u03C3\",\n  Sigma: \"\\u03A3\",\n  sigmaf: \"\\u03C2\",\n  sigmav: \"\\u03C2\",\n  sim: \"\\u223C\",\n  simdot: \"\\u2A6A\",\n  sime: \"\\u2243\",\n  simeq: \"\\u2243\",\n  simg: \"\\u2A9E\",\n  simgE: \"\\u2AA0\",\n  siml: \"\\u2A9D\",\n  simlE: \"\\u2A9F\",\n  simne: \"\\u2246\",\n  simplus: \"\\u2A24\",\n  simrarr: \"\\u2972\",\n  slarr: \"\\u2190\",\n  SmallCircle: \"\\u2218\",\n  smallsetminus: \"\\u2216\",\n  smashp: \"\\u2A33\",\n  smeparsl: \"\\u29E4\",\n  smid: \"\\u2223\",\n  smile: \"\\u2323\",\n  smt: \"\\u2AAA\",\n  smte: \"\\u2AAC\",\n  smtes: \"\\u2AAC\\uFE00\",\n  softcy: \"\\u044C\",\n  SOFTcy: \"\\u042C\",\n  sol: \"/\",\n  solb: \"\\u29C4\",\n  solbar: \"\\u233F\",\n  sopf: \"\\uD835\\uDD64\",\n  Sopf: \"\\uD835\\uDD4A\",\n  spades: \"\\u2660\",\n  spadesuit: \"\\u2660\",\n  spar: \"\\u2225\",\n  sqcap: \"\\u2293\",\n  sqcaps: \"\\u2293\\uFE00\",\n  sqcup: \"\\u2294\",\n  sqcups: \"\\u2294\\uFE00\",\n  Sqrt: \"\\u221A\",\n  sqsub: \"\\u228F\",\n  sqsube: \"\\u2291\",\n  sqsubset: \"\\u228F\",\n  sqsubseteq: \"\\u2291\",\n  sqsup: \"\\u2290\",\n  sqsupe: \"\\u2292\",\n  sqsupset: \"\\u2290\",\n  sqsupseteq: \"\\u2292\",\n  squ: \"\\u25A1\",\n  square: \"\\u25A1\",\n  Square: \"\\u25A1\",\n  SquareIntersection: \"\\u2293\",\n  SquareSubset: \"\\u228F\",\n  SquareSubsetEqual: \"\\u2291\",\n  SquareSuperset: \"\\u2290\",\n  SquareSupersetEqual: \"\\u2292\",\n  SquareUnion: \"\\u2294\",\n  squarf: \"\\u25AA\",\n  squf: \"\\u25AA\",\n  srarr: \"\\u2192\",\n  sscr: \"\\uD835\\uDCC8\",\n  Sscr: \"\\uD835\\uDCAE\",\n  ssetmn: \"\\u2216\",\n  ssmile: \"\\u2323\",\n  sstarf: \"\\u22C6\",\n  star: \"\\u2606\",\n  Star: \"\\u22C6\",\n  starf: \"\\u2605\",\n  straightepsilon: \"\\u03F5\",\n  straightphi: \"\\u03D5\",\n  strns: \"\\xAF\",\n  sub: \"\\u2282\",\n  Sub: \"\\u22D0\",\n  subdot: \"\\u2ABD\",\n  sube: \"\\u2286\",\n  subE: \"\\u2AC5\",\n  subedot: \"\\u2AC3\",\n  submult: \"\\u2AC1\",\n  subne: \"\\u228A\",\n  subnE: \"\\u2ACB\",\n  subplus: \"\\u2ABF\",\n  subrarr: \"\\u2979\",\n  subset: \"\\u2282\",\n  Subset: \"\\u22D0\",\n  subseteq: \"\\u2286\",\n  subseteqq: \"\\u2AC5\",\n  SubsetEqual: \"\\u2286\",\n  subsetneq: \"\\u228A\",\n  subsetneqq: \"\\u2ACB\",\n  subsim: \"\\u2AC7\",\n  subsub: \"\\u2AD5\",\n  subsup: \"\\u2AD3\",\n  succ: \"\\u227B\",\n  succapprox: \"\\u2AB8\",\n  succcurlyeq: \"\\u227D\",\n  Succeeds: \"\\u227B\",\n  SucceedsEqual: \"\\u2AB0\",\n  SucceedsSlantEqual: \"\\u227D\",\n  SucceedsTilde: \"\\u227F\",\n  succeq: \"\\u2AB0\",\n  succnapprox: \"\\u2ABA\",\n  succneqq: \"\\u2AB6\",\n  succnsim: \"\\u22E9\",\n  succsim: \"\\u227F\",\n  SuchThat: \"\\u220B\",\n  sum: \"\\u2211\",\n  Sum: \"\\u2211\",\n  sung: \"\\u266A\",\n  sup: \"\\u2283\",\n  Sup: \"\\u22D1\",\n  sup1: \"\\xB9\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  supdot: \"\\u2ABE\",\n  supdsub: \"\\u2AD8\",\n  supe: \"\\u2287\",\n  supE: \"\\u2AC6\",\n  supedot: \"\\u2AC4\",\n  Superset: \"\\u2283\",\n  SupersetEqual: \"\\u2287\",\n  suphsol: \"\\u27C9\",\n  suphsub: \"\\u2AD7\",\n  suplarr: \"\\u297B\",\n  supmult: \"\\u2AC2\",\n  supne: \"\\u228B\",\n  supnE: \"\\u2ACC\",\n  supplus: \"\\u2AC0\",\n  supset: \"\\u2283\",\n  Supset: \"\\u22D1\",\n  supseteq: \"\\u2287\",\n  supseteqq: \"\\u2AC6\",\n  supsetneq: \"\\u228B\",\n  supsetneqq: \"\\u2ACC\",\n  supsim: \"\\u2AC8\",\n  supsub: \"\\u2AD4\",\n  supsup: \"\\u2AD6\",\n  swarhk: \"\\u2926\",\n  swarr: \"\\u2199\",\n  swArr: \"\\u21D9\",\n  swarrow: \"\\u2199\",\n  swnwar: \"\\u292A\",\n  szlig: \"\\xDF\",\n  Tab: \"\\t\",\n  target: \"\\u2316\",\n  tau: \"\\u03C4\",\n  Tau: \"\\u03A4\",\n  tbrk: \"\\u23B4\",\n  tcaron: \"\\u0165\",\n  Tcaron: \"\\u0164\",\n  tcedil: \"\\u0163\",\n  Tcedil: \"\\u0162\",\n  tcy: \"\\u0442\",\n  Tcy: \"\\u0422\",\n  tdot: \"\\u20DB\",\n  telrec: \"\\u2315\",\n  tfr: \"\\uD835\\uDD31\",\n  Tfr: \"\\uD835\\uDD17\",\n  there4: \"\\u2234\",\n  therefore: \"\\u2234\",\n  Therefore: \"\\u2234\",\n  theta: \"\\u03B8\",\n  Theta: \"\\u0398\",\n  thetasym: \"\\u03D1\",\n  thetav: \"\\u03D1\",\n  thickapprox: \"\\u2248\",\n  thicksim: \"\\u223C\",\n  ThickSpace: \"\\u205F\\u200A\",\n  thinsp: \"\\u2009\",\n  ThinSpace: \"\\u2009\",\n  thkap: \"\\u2248\",\n  thksim: \"\\u223C\",\n  thorn: \"\\xFE\",\n  THORN: \"\\xDE\",\n  tilde: \"\\u02DC\",\n  Tilde: \"\\u223C\",\n  TildeEqual: \"\\u2243\",\n  TildeFullEqual: \"\\u2245\",\n  TildeTilde: \"\\u2248\",\n  times: \"\\xD7\",\n  timesb: \"\\u22A0\",\n  timesbar: \"\\u2A31\",\n  timesd: \"\\u2A30\",\n  tint: \"\\u222D\",\n  toea: \"\\u2928\",\n  top: \"\\u22A4\",\n  topbot: \"\\u2336\",\n  topcir: \"\\u2AF1\",\n  topf: \"\\uD835\\uDD65\",\n  Topf: \"\\uD835\\uDD4B\",\n  topfork: \"\\u2ADA\",\n  tosa: \"\\u2929\",\n  tprime: \"\\u2034\",\n  trade: \"\\u2122\",\n  TRADE: \"\\u2122\",\n  triangle: \"\\u25B5\",\n  triangledown: \"\\u25BF\",\n  triangleleft: \"\\u25C3\",\n  trianglelefteq: \"\\u22B4\",\n  triangleq: \"\\u225C\",\n  triangleright: \"\\u25B9\",\n  trianglerighteq: \"\\u22B5\",\n  tridot: \"\\u25EC\",\n  trie: \"\\u225C\",\n  triminus: \"\\u2A3A\",\n  TripleDot: \"\\u20DB\",\n  triplus: \"\\u2A39\",\n  trisb: \"\\u29CD\",\n  tritime: \"\\u2A3B\",\n  trpezium: \"\\u23E2\",\n  tscr: \"\\uD835\\uDCC9\",\n  Tscr: \"\\uD835\\uDCAF\",\n  tscy: \"\\u0446\",\n  TScy: \"\\u0426\",\n  tshcy: \"\\u045B\",\n  TSHcy: \"\\u040B\",\n  tstrok: \"\\u0167\",\n  Tstrok: \"\\u0166\",\n  twixt: \"\\u226C\",\n  twoheadleftarrow: \"\\u219E\",\n  twoheadrightarrow: \"\\u21A0\",\n  uacute: \"\\xFA\",\n  Uacute: \"\\xDA\",\n  uarr: \"\\u2191\",\n  uArr: \"\\u21D1\",\n  Uarr: \"\\u219F\",\n  Uarrocir: \"\\u2949\",\n  ubrcy: \"\\u045E\",\n  Ubrcy: \"\\u040E\",\n  ubreve: \"\\u016D\",\n  Ubreve: \"\\u016C\",\n  ucirc: \"\\xFB\",\n  Ucirc: \"\\xDB\",\n  ucy: \"\\u0443\",\n  Ucy: \"\\u0423\",\n  udarr: \"\\u21C5\",\n  udblac: \"\\u0171\",\n  Udblac: \"\\u0170\",\n  udhar: \"\\u296E\",\n  ufisht: \"\\u297E\",\n  ufr: \"\\uD835\\uDD32\",\n  Ufr: \"\\uD835\\uDD18\",\n  ugrave: \"\\xF9\",\n  Ugrave: \"\\xD9\",\n  uHar: \"\\u2963\",\n  uharl: \"\\u21BF\",\n  uharr: \"\\u21BE\",\n  uhblk: \"\\u2580\",\n  ulcorn: \"\\u231C\",\n  ulcorner: \"\\u231C\",\n  ulcrop: \"\\u230F\",\n  ultri: \"\\u25F8\",\n  umacr: \"\\u016B\",\n  Umacr: \"\\u016A\",\n  uml: \"\\xA8\",\n  UnderBar: \"_\",\n  UnderBrace: \"\\u23DF\",\n  UnderBracket: \"\\u23B5\",\n  UnderParenthesis: \"\\u23DD\",\n  Union: \"\\u22C3\",\n  UnionPlus: \"\\u228E\",\n  uogon: \"\\u0173\",\n  Uogon: \"\\u0172\",\n  uopf: \"\\uD835\\uDD66\",\n  Uopf: \"\\uD835\\uDD4C\",\n  uparrow: \"\\u2191\",\n  Uparrow: \"\\u21D1\",\n  UpArrow: \"\\u2191\",\n  UpArrowBar: \"\\u2912\",\n  UpArrowDownArrow: \"\\u21C5\",\n  updownarrow: \"\\u2195\",\n  Updownarrow: \"\\u21D5\",\n  UpDownArrow: \"\\u2195\",\n  UpEquilibrium: \"\\u296E\",\n  upharpoonleft: \"\\u21BF\",\n  upharpoonright: \"\\u21BE\",\n  uplus: \"\\u228E\",\n  UpperLeftArrow: \"\\u2196\",\n  UpperRightArrow: \"\\u2197\",\n  upsi: \"\\u03C5\",\n  Upsi: \"\\u03D2\",\n  upsih: \"\\u03D2\",\n  upsilon: \"\\u03C5\",\n  Upsilon: \"\\u03A5\",\n  UpTee: \"\\u22A5\",\n  UpTeeArrow: \"\\u21A5\",\n  upuparrows: \"\\u21C8\",\n  urcorn: \"\\u231D\",\n  urcorner: \"\\u231D\",\n  urcrop: \"\\u230E\",\n  uring: \"\\u016F\",\n  Uring: \"\\u016E\",\n  urtri: \"\\u25F9\",\n  uscr: \"\\uD835\\uDCCA\",\n  Uscr: \"\\uD835\\uDCB0\",\n  utdot: \"\\u22F0\",\n  utilde: \"\\u0169\",\n  Utilde: \"\\u0168\",\n  utri: \"\\u25B5\",\n  utrif: \"\\u25B4\",\n  uuarr: \"\\u21C8\",\n  uuml: \"\\xFC\",\n  Uuml: \"\\xDC\",\n  uwangle: \"\\u29A7\",\n  vangrt: \"\\u299C\",\n  varepsilon: \"\\u03F5\",\n  varkappa: \"\\u03F0\",\n  varnothing: \"\\u2205\",\n  varphi: \"\\u03D5\",\n  varpi: \"\\u03D6\",\n  varpropto: \"\\u221D\",\n  varr: \"\\u2195\",\n  vArr: \"\\u21D5\",\n  varrho: \"\\u03F1\",\n  varsigma: \"\\u03C2\",\n  varsubsetneq: \"\\u228A\\uFE00\",\n  varsubsetneqq: \"\\u2ACB\\uFE00\",\n  varsupsetneq: \"\\u228B\\uFE00\",\n  varsupsetneqq: \"\\u2ACC\\uFE00\",\n  vartheta: \"\\u03D1\",\n  vartriangleleft: \"\\u22B2\",\n  vartriangleright: \"\\u22B3\",\n  vBar: \"\\u2AE8\",\n  Vbar: \"\\u2AEB\",\n  vBarv: \"\\u2AE9\",\n  vcy: \"\\u0432\",\n  Vcy: \"\\u0412\",\n  vdash: \"\\u22A2\",\n  vDash: \"\\u22A8\",\n  Vdash: \"\\u22A9\",\n  VDash: \"\\u22AB\",\n  Vdashl: \"\\u2AE6\",\n  vee: \"\\u2228\",\n  Vee: \"\\u22C1\",\n  veebar: \"\\u22BB\",\n  veeeq: \"\\u225A\",\n  vellip: \"\\u22EE\",\n  verbar: \"|\",\n  Verbar: \"\\u2016\",\n  vert: \"|\",\n  Vert: \"\\u2016\",\n  VerticalBar: \"\\u2223\",\n  VerticalLine: \"|\",\n  VerticalSeparator: \"\\u2758\",\n  VerticalTilde: \"\\u2240\",\n  VeryThinSpace: \"\\u200A\",\n  vfr: \"\\uD835\\uDD33\",\n  Vfr: \"\\uD835\\uDD19\",\n  vltri: \"\\u22B2\",\n  vnsub: \"\\u2282\\u20D2\",\n  vnsup: \"\\u2283\\u20D2\",\n  vopf: \"\\uD835\\uDD67\",\n  Vopf: \"\\uD835\\uDD4D\",\n  vprop: \"\\u221D\",\n  vrtri: \"\\u22B3\",\n  vscr: \"\\uD835\\uDCCB\",\n  Vscr: \"\\uD835\\uDCB1\",\n  vsubne: \"\\u228A\\uFE00\",\n  vsubnE: \"\\u2ACB\\uFE00\",\n  vsupne: \"\\u228B\\uFE00\",\n  vsupnE: \"\\u2ACC\\uFE00\",\n  Vvdash: \"\\u22AA\",\n  vzigzag: \"\\u299A\",\n  wcirc: \"\\u0175\",\n  Wcirc: \"\\u0174\",\n  wedbar: \"\\u2A5F\",\n  wedge: \"\\u2227\",\n  Wedge: \"\\u22C0\",\n  wedgeq: \"\\u2259\",\n  weierp: \"\\u2118\",\n  wfr: \"\\uD835\\uDD34\",\n  Wfr: \"\\uD835\\uDD1A\",\n  wopf: \"\\uD835\\uDD68\",\n  Wopf: \"\\uD835\\uDD4E\",\n  wp: \"\\u2118\",\n  wr: \"\\u2240\",\n  wreath: \"\\u2240\",\n  wscr: \"\\uD835\\uDCCC\",\n  Wscr: \"\\uD835\\uDCB2\",\n  xcap: \"\\u22C2\",\n  xcirc: \"\\u25EF\",\n  xcup: \"\\u22C3\",\n  xdtri: \"\\u25BD\",\n  xfr: \"\\uD835\\uDD35\",\n  Xfr: \"\\uD835\\uDD1B\",\n  xharr: \"\\u27F7\",\n  xhArr: \"\\u27FA\",\n  xi: \"\\u03BE\",\n  Xi: \"\\u039E\",\n  xlarr: \"\\u27F5\",\n  xlArr: \"\\u27F8\",\n  xmap: \"\\u27FC\",\n  xnis: \"\\u22FB\",\n  xodot: \"\\u2A00\",\n  xopf: \"\\uD835\\uDD69\",\n  Xopf: \"\\uD835\\uDD4F\",\n  xoplus: \"\\u2A01\",\n  xotime: \"\\u2A02\",\n  xrarr: \"\\u27F6\",\n  xrArr: \"\\u27F9\",\n  xscr: \"\\uD835\\uDCCD\",\n  Xscr: \"\\uD835\\uDCB3\",\n  xsqcup: \"\\u2A06\",\n  xuplus: \"\\u2A04\",\n  xutri: \"\\u25B3\",\n  xvee: \"\\u22C1\",\n  xwedge: \"\\u22C0\",\n  yacute: \"\\xFD\",\n  Yacute: \"\\xDD\",\n  yacy: \"\\u044F\",\n  YAcy: \"\\u042F\",\n  ycirc: \"\\u0177\",\n  Ycirc: \"\\u0176\",\n  ycy: \"\\u044B\",\n  Ycy: \"\\u042B\",\n  yen: \"\\xA5\",\n  yfr: \"\\uD835\\uDD36\",\n  Yfr: \"\\uD835\\uDD1C\",\n  yicy: \"\\u0457\",\n  YIcy: \"\\u0407\",\n  yopf: \"\\uD835\\uDD6A\",\n  Yopf: \"\\uD835\\uDD50\",\n  yscr: \"\\uD835\\uDCCE\",\n  Yscr: \"\\uD835\\uDCB4\",\n  yucy: \"\\u044E\",\n  YUcy: \"\\u042E\",\n  yuml: \"\\xFF\",\n  Yuml: \"\\u0178\",\n  zacute: \"\\u017A\",\n  Zacute: \"\\u0179\",\n  zcaron: \"\\u017E\",\n  Zcaron: \"\\u017D\",\n  zcy: \"\\u0437\",\n  Zcy: \"\\u0417\",\n  zdot: \"\\u017C\",\n  Zdot: \"\\u017B\",\n  zeetrf: \"\\u2128\",\n  ZeroWidthSpace: \"\\u200B\",\n  zeta: \"\\u03B6\",\n  Zeta: \"\\u0396\",\n  zfr: \"\\uD835\\uDD37\",\n  Zfr: \"\\u2128\",\n  zhcy: \"\\u0436\",\n  ZHcy: \"\\u0416\",\n  zigrarr: \"\\u21DD\",\n  zopf: \"\\uD835\\uDD6B\",\n  Zopf: \"\\u2124\",\n  zscr: \"\\uD835\\uDCCF\",\n  Zscr: \"\\uD835\\uDCB5\",\n  zwj: \"\\u200D\",\n  zwnj: \"\\u200C\",\n}\nvar decodeMapLegacy = {\n  aacute: \"\\xE1\",\n  Aacute: \"\\xC1\",\n  acirc: \"\\xE2\",\n  Acirc: \"\\xC2\",\n  acute: \"\\xB4\",\n  aelig: \"\\xE6\",\n  AElig: \"\\xC6\",\n  agrave: \"\\xE0\",\n  Agrave: \"\\xC0\",\n  amp: \"&\",\n  AMP: \"&\",\n  aring: \"\\xE5\",\n  Aring: \"\\xC5\",\n  atilde: \"\\xE3\",\n  Atilde: \"\\xC3\",\n  auml: \"\\xE4\",\n  Auml: \"\\xC4\",\n  brvbar: \"\\xA6\",\n  ccedil: \"\\xE7\",\n  Ccedil: \"\\xC7\",\n  cedil: \"\\xB8\",\n  cent: \"\\xA2\",\n  copy: \"\\xA9\",\n  COPY: \"\\xA9\",\n  curren: \"\\xA4\",\n  deg: \"\\xB0\",\n  divide: \"\\xF7\",\n  eacute: \"\\xE9\",\n  Eacute: \"\\xC9\",\n  ecirc: \"\\xEA\",\n  Ecirc: \"\\xCA\",\n  egrave: \"\\xE8\",\n  Egrave: \"\\xC8\",\n  eth: \"\\xF0\",\n  ETH: \"\\xD0\",\n  euml: \"\\xEB\",\n  Euml: \"\\xCB\",\n  frac12: \"\\xBD\",\n  frac14: \"\\xBC\",\n  frac34: \"\\xBE\",\n  gt: \">\",\n  GT: \">\",\n  iacute: \"\\xED\",\n  Iacute: \"\\xCD\",\n  icirc: \"\\xEE\",\n  Icirc: \"\\xCE\",\n  iexcl: \"\\xA1\",\n  igrave: \"\\xEC\",\n  Igrave: \"\\xCC\",\n  iquest: \"\\xBF\",\n  iuml: \"\\xEF\",\n  Iuml: \"\\xCF\",\n  laquo: \"\\xAB\",\n  lt: \"<\",\n  LT: \"<\",\n  macr: \"\\xAF\",\n  micro: \"\\xB5\",\n  middot: \"\\xB7\",\n  nbsp: \"\\xA0\",\n  not: \"\\xAC\",\n  ntilde: \"\\xF1\",\n  Ntilde: \"\\xD1\",\n  oacute: \"\\xF3\",\n  Oacute: \"\\xD3\",\n  ocirc: \"\\xF4\",\n  Ocirc: \"\\xD4\",\n  ograve: \"\\xF2\",\n  Ograve: \"\\xD2\",\n  ordf: \"\\xAA\",\n  ordm: \"\\xBA\",\n  oslash: \"\\xF8\",\n  Oslash: \"\\xD8\",\n  otilde: \"\\xF5\",\n  Otilde: \"\\xD5\",\n  ouml: \"\\xF6\",\n  Ouml: \"\\xD6\",\n  para: \"\\xB6\",\n  plusmn: \"\\xB1\",\n  pound: \"\\xA3\",\n  quot: '\"',\n  QUOT: '\"',\n  raquo: \"\\xBB\",\n  reg: \"\\xAE\",\n  REG: \"\\xAE\",\n  sect: \"\\xA7\",\n  shy: \"\\xAD\",\n  sup1: \"\\xB9\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  szlig: \"\\xDF\",\n  thorn: \"\\xFE\",\n  THORN: \"\\xDE\",\n  times: \"\\xD7\",\n  uacute: \"\\xFA\",\n  Uacute: \"\\xDA\",\n  ucirc: \"\\xFB\",\n  Ucirc: \"\\xDB\",\n  ugrave: \"\\xF9\",\n  Ugrave: \"\\xD9\",\n  uml: \"\\xA8\",\n  uuml: \"\\xFC\",\n  Uuml: \"\\xDC\",\n  yacute: \"\\xFD\",\n  Yacute: \"\\xDD\",\n  yen: \"\\xA5\",\n  yuml: \"\\xFF\",\n}\nvar decodeMapNumeric = {\n  \"0\": \"\\uFFFD\",\n  \"128\": \"\\u20AC\",\n  \"130\": \"\\u201A\",\n  \"131\": \"\\u0192\",\n  \"132\": \"\\u201E\",\n  \"133\": \"\\u2026\",\n  \"134\": \"\\u2020\",\n  \"135\": \"\\u2021\",\n  \"136\": \"\\u02C6\",\n  \"137\": \"\\u2030\",\n  \"138\": \"\\u0160\",\n  \"139\": \"\\u2039\",\n  \"140\": \"\\u0152\",\n  \"142\": \"\\u017D\",\n  \"145\": \"\\u2018\",\n  \"146\": \"\\u2019\",\n  \"147\": \"\\u201C\",\n  \"148\": \"\\u201D\",\n  \"149\": \"\\u2022\",\n  \"150\": \"\\u2013\",\n  \"151\": \"\\u2014\",\n  \"152\": \"\\u02DC\",\n  \"153\": \"\\u2122\",\n  \"154\": \"\\u0161\",\n  \"155\": \"\\u203A\",\n  \"156\": \"\\u0153\",\n  \"158\": \"\\u017E\",\n  \"159\": \"\\u0178\",\n}\nvar invalidReferenceCodePoints = [\n  1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n  25, 26, 27, 28, 29, 30, 31, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136,\n  137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,\n  152, 153, 154, 155, 156, 157, 158, 159, 64976, 64977, 64978, 64979, 64980,\n  64981, 64982, 64983, 64984, 64985, 64986, 64987, 64988, 64989, 64990, 64991,\n  64992, 64993, 64994, 64995, 64996, 64997, 64998, 64999, 65000, 65001, 65002,\n  65003, 65004, 65005, 65006, 65007, 65534, 65535, 131070, 131071, 196606,\n  196607, 262142, 262143, 327678, 327679, 393214, 393215, 458750, 458751,\n  524286, 524287, 589822, 589823, 655358, 655359, 720894, 720895, 786430,\n  786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574, 1048575,\n  1114110, 1114111,\n]\n\n/*--------------------------------------------------------------------------*/\n\nvar stringFromCharCode = String.fromCharCode\n\nvar object = {}\nvar hasOwnProperty = object.hasOwnProperty\nvar has = function (object, propertyName) {\n  return hasOwnProperty.call(object, propertyName)\n}\n\nvar contains = function (array, value) {\n  var index = -1\n  var length = array.length\n  while (++index < length) {\n    if (array[index] == value) {\n      return true\n    }\n  }\n  return false\n}\n\nvar merge = function (options, defaults) {\n  if (!options) {\n    return defaults\n  }\n  var result = {}\n  var key\n  for (key in defaults) {\n    // A `hasOwnProperty` check is not needed here, since only recognized\n    // option names are used anyway. Any others are ignored.\n    result[key] = has(options, key) ? options[key] : defaults[key]\n  }\n  return result\n}\n\n// Modified version of `ucs2encode`; see https://mths.be/punycode.\nvar codePointToSymbol = function (codePoint, strict) {\n  var output = \"\"\n  if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n    // See issue #4:\n    // “Otherwise, if the number is in the range 0xD800 to 0xDFFF or is\n    // greater than 0x10FFFF, then this is a parse error. Return a U+FFFD\n    // REPLACEMENT CHARACTER.”\n    if (strict) {\n      parseError(\"character reference outside the permissible Unicode range\")\n    }\n    return \"\\uFFFD\"\n  }\n  if (has(decodeMapNumeric, codePoint)) {\n    if (strict) {\n      parseError(\"disallowed character reference\")\n    }\n    return decodeMapNumeric[codePoint]\n  }\n  if (strict && contains(invalidReferenceCodePoints, codePoint)) {\n    parseError(\"disallowed character reference\")\n  }\n  if (codePoint > 0xffff) {\n    codePoint -= 0x10000\n    output += stringFromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800)\n    codePoint = 0xdc00 | (codePoint & 0x3ff)\n  }\n  output += stringFromCharCode(codePoint)\n  return output\n}\n\nvar hexEscape = function (codePoint) {\n  return \"&#x\" + codePoint.toString(16).toUpperCase() + \";\"\n}\n\nvar decEscape = function (codePoint) {\n  return \"&#\" + codePoint + \";\"\n}\n\nvar parseError = function (message) {\n  throw Error(\"Parse error: \" + message)\n}\n\n/*--------------------------------------------------------------------------*/\n\nvar encode = function (string, options) {\n  options = merge(options, encode.options)\n  var strict = options.strict\n  if (strict && regexInvalidRawCodePoint.test(string)) {\n    parseError(\"forbidden code point\")\n  }\n  var encodeEverything = options.encodeEverything\n  var useNamedReferences = options.useNamedReferences\n  var allowUnsafeSymbols = options.allowUnsafeSymbols\n  var escapeCodePoint = options.decimal ? decEscape : hexEscape\n\n  var escapeBmpSymbol = function (symbol) {\n    return escapeCodePoint(symbol.charCodeAt(0))\n  }\n\n  if (encodeEverything) {\n    // Encode ASCII symbols.\n    string = string.replace(regexAsciiWhitelist, function (symbol) {\n      // Use named references if requested & possible.\n      if (useNamedReferences && has(encodeMap, symbol)) {\n        return \"&\" + encodeMap[symbol] + \";\"\n      }\n      return escapeBmpSymbol(symbol)\n    })\n    // Shorten a few escapes that represent two symbols, of which at least one\n    // is within the ASCII range.\n    if (useNamedReferences) {\n      string = string\n        .replace(/&gt;\\u20D2/g, \"&nvgt;\")\n        .replace(/&lt;\\u20D2/g, \"&nvlt;\")\n        .replace(/&#x66;&#x6A;/g, \"&fjlig;\")\n    }\n    // Encode non-ASCII symbols.\n    if (useNamedReferences) {\n      // Encode non-ASCII symbols that can be replaced with a named reference.\n      string = string.replace(regexEncodeNonAscii, function (string) {\n        // Note: there is no need to check `has(encodeMap, string)` here.\n        return \"&\" + encodeMap[string] + \";\"\n      })\n    }\n    // Note: any remaining non-ASCII symbols are handled outside of the `if`.\n  } else if (useNamedReferences) {\n    // Apply named character references.\n    // Encode `<>\"'&` using named character references.\n    if (!allowUnsafeSymbols) {\n      string = string.replace(regexEscape, function (string) {\n        return \"&\" + encodeMap[string] + \";\" // no need to check `has()` here\n      })\n    }\n    // Shorten escapes that represent two symbols, of which at least one is\n    // `<>\"'&`.\n    string = string\n      .replace(/&gt;\\u20D2/g, \"&nvgt;\")\n      .replace(/&lt;\\u20D2/g, \"&nvlt;\")\n    // Encode non-ASCII symbols that can be replaced with a named reference.\n    string = string.replace(regexEncodeNonAscii, function (string) {\n      // Note: there is no need to check `has(encodeMap, string)` here.\n      return \"&\" + encodeMap[string] + \";\"\n    })\n  } else if (!allowUnsafeSymbols) {\n    // Encode `<>\"'&` using hexadecimal escapes, now that they’re not handled\n    // using named character references.\n    string = string.replace(regexEscape, escapeBmpSymbol)\n  }\n  return (\n    string\n      // Encode astral symbols.\n      .replace(regexAstralSymbols, function ($0) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        var high = $0.charCodeAt(0)\n        var low = $0.charCodeAt(1)\n        var codePoint = (high - 0xd800) * 0x400 + low - 0xdc00 + 0x10000\n        return escapeCodePoint(codePoint)\n      })\n      // Encode any remaining BMP symbols that are not printable ASCII symbols\n      // using a hexadecimal escape.\n      .replace(regexBmpWhitelist, escapeBmpSymbol)\n  )\n}\n// Expose default options (so they can be overridden globally).\nencode.options = {\n  allowUnsafeSymbols: false,\n  encodeEverything: false,\n  strict: false,\n  useNamedReferences: false,\n  decimal: false,\n}\n\nexport var decode = function (html: string, options?: any) {\n  options = merge(options, decode.options)\n  var strict = options.strict\n  if (strict && regexInvalidEntity.test(html)) {\n    parseError(\"malformed character reference\")\n  }\n  return html.replace(\n    regexDecode,\n    function ($0, $1, $2, $3, $4, $5, $6, $7, $8) {\n      var codePoint\n      var semicolon\n      var decDigits\n      var hexDigits\n      var reference\n      var next\n\n      if ($1) {\n        reference = $1\n        // Note: there is no need to check `has(decodeMap, reference)`.\n        return decodeMap[reference]\n      }\n\n      if ($2) {\n        // Decode named character references without trailing `;`, e.g. `&amp`.\n        // This is only a parse error if it gets converted to `&`, or if it is\n        // followed by `=` in an attribute context.\n        reference = $2\n        next = $3\n        if (next && options.isAttributeValue) {\n          if (strict && next == \"=\") {\n            parseError(\"`&` did not start a character reference\")\n          }\n          return $0\n        } else {\n          if (strict) {\n            parseError(\n              \"named character reference was not terminated by a semicolon\"\n            )\n          }\n          // Note: there is no need to check `has(decodeMapLegacy, reference)`.\n          return decodeMapLegacy[reference] + (next || \"\")\n        }\n      }\n\n      if ($4) {\n        // Decode decimal escapes, e.g. `&#119558;`.\n        decDigits = $4\n        semicolon = $5\n        if (strict && !semicolon) {\n          parseError(\"character reference was not terminated by a semicolon\")\n        }\n        codePoint = parseInt(decDigits, 10)\n        return codePointToSymbol(codePoint, strict)\n      }\n\n      if ($6) {\n        // Decode hexadecimal escapes, e.g. `&#x1D306;`.\n        hexDigits = $6\n        semicolon = $7\n        if (strict && !semicolon) {\n          parseError(\"character reference was not terminated by a semicolon\")\n        }\n        codePoint = parseInt(hexDigits, 16)\n        return codePointToSymbol(codePoint, strict)\n      }\n\n      // If we’re still here, `if ($7)` is implied; it’s an ambiguous\n      // ampersand for sure. https://mths.be/notes/ambiguous-ampersands\n      if (strict) {\n        parseError(\n          \"named character reference was not terminated by a semicolon\"\n        )\n      }\n      return $0\n    }\n  )\n}\n// Expose default options (so they can be overridden globally).\ndecode.options = {\n  isAttributeValue: false,\n  strict: false,\n}\n\nexport var escape = function (string) {\n  return string.replace(regexEscape, function ($0) {\n    // Note: there is no need to check `has(escapeMap, $0)` here.\n    return escapeMap[$0]\n  })\n}\n","import { decode } from \"./encoding-he\"\n\nexport const escapeHTML = (text: string) =>\n  text\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/'/g, \"&apos;\")\n    .replace(/\"/g, \"&quot;\")\n\n// encode(text, {\n//   useNamedReferences: true,\n// })\n\nexport const unescapeHTML = (html: string) => decode(html)\n","// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { VDocument, VDocumentFragment } from \"./vdom\"\n\n/*\n * Abstraction for h/jsx like DOM descriptions.\n * It is used in DOM, VDOM\n *\n */\n\ninterface Context {\n  h?: any\n  document: VDocument | VDocumentFragment\n}\n\nfunction _h(\n  context: Context,\n  tag: string | ((a0: any) => string),\n  attrs: object,\n  children: any[]\n): string {\n  if (typeof tag === \"function\") {\n    return tag.call(null, {\n      props: { ...attrs, children },\n      attrs,\n      children,\n      h: context.h,\n      context,\n    })\n  } else {\n    let el\n    if (tag) {\n      if (tag.toLowerCase() === \"fragment\") {\n        el = context.document.createDocumentFragment()\n      } else {\n        el = context.document.createElement(tag)\n      }\n    } else {\n      el = context.document.createElement(\"div\")\n    }\n    if (attrs) {\n      for (let [key, value] of Object.entries(attrs)) {\n        key = key.toString()\n        const compareKey = key.toLowerCase()\n        if (compareKey === \"classname\") {\n          el.className = value\n        } else if (compareKey === \"on\") {\n          Object.entries(value).forEach(([name, value]) => {\n            el.setAttribute(\"on\" + name, value)\n          })\n          // else if (key.indexOf('on') === 0) {\n          //   if (el.addEventListener) {\n          //     el.addEventListener(key.substring(2), value)\n          //     continue\n          //   }\n        } else if (value !== false && value != null) {\n          if (value === true) {\n            el.setAttribute(key, key)\n          } else {\n            el.setAttribute(key, value.toString())\n          }\n        }\n      }\n    }\n    if (children) {\n      for (const childOuter of children) {\n        let cc = Array.isArray(childOuter) ? [...childOuter] : [childOuter]\n        for (let child of cc) {\n          if (child) {\n            if (child !== false && child != null) {\n              if (typeof child !== \"object\") {\n                el.appendChild(\n                  context.document.createTextNode(child.toString())\n                )\n              } else {\n                el.appendChild(child)\n              }\n            }\n          }\n        }\n      }\n    }\n    return el\n  }\n}\n\nexport function hArgumentParser(tag: any, attrs: any, ...children: any[]) {\n  if (typeof tag === \"object\") {\n    tag = \"fragment\"\n    children = tag.children\n    attrs = tag.attrs\n  }\n  if (Array.isArray(attrs)) {\n    children = [attrs]\n    attrs = {}\n  } else if (attrs) {\n    if (attrs.attrs) {\n      attrs = { ...attrs.attrs, ...attrs }\n      delete attrs.attrs\n    }\n  } else {\n    attrs = {}\n  }\n  return {\n    tag,\n    attrs,\n    children:\n      typeof children[0] === \"string\" ? children : children.flat(Infinity),\n  }\n}\n\nexport function hFactory(context: Context) {\n  // let context = { document }\n  context.h = function h(itag: any, iattrs: any, ...ichildren: any[]) {\n    let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n    return _h(context, tag, attrs, children)\n  }\n  return context.h\n}\n","// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\n// Special cases:\n// 1. <noop> is an element that is not printed out, can be used to create a list of elements\n// 2. Attribute name '__' gets transformed to ':' for namespace emulation\n// 3. Emulate CDATA by <cdata> element\n\nimport { hArgumentParser } from \"./h\"\nimport { escapeHTML } from \"./encoding\"\n\nexport const SELF_CLOSING_TAGS = [\n  \"area\",\n  \"base\",\n  \"br\",\n  \"col\",\n  \"embed\",\n  \"hr\",\n  \"img\",\n  \"input\",\n  \"keygen\",\n  \"link\",\n  \"meta\",\n  \"param\",\n  \"source\",\n  \"track\",\n  \"wbr\",\n  \"command\",\n]\n\nexport const CDATA = (s: string) => \"<![CDATA[\" + s + \"]]>\"\nexport const HTML = (s: string) => s\n\n// export function prependXMLIdentifier(s) {\n//   return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + s\n// }\n\n// https://reactjs.org/docs/jsx-in-depth.html\nexport function markup(\n  xmlMode: boolean,\n  tag: string,\n  attrs: any = {},\n  children?: any[] | string\n) {\n  const hasChildren = !(\n    (typeof children === \"string\" && children === \"\") ||\n    (Array.isArray(children) &&\n      (children.length === 0 ||\n        (children.length === 1 && children[0] === \"\"))) ||\n    children == null\n  )\n\n  let parts: string[] = []\n  tag = tag.replace(/__/g, \":\")\n\n  // React fragment <>...</> and ours: <noop>...</noop>\n  if (tag !== \"noop\" && tag !== \"\") {\n    if (tag !== \"cdata\") {\n      parts.push(`<${tag}`)\n    } else {\n      parts.push(\"<![CDATA[\")\n    }\n\n    // Add attributes\n    for (let name in attrs) {\n      if (name && attrs.hasOwnProperty(name)) {\n        let v = attrs[name]\n        if (name === \"html\") {\n          continue\n        }\n        if (name.toLowerCase() === \"classname\") {\n          name = \"class\"\n        }\n        name = name.replace(/__/g, \":\")\n        if (v === true) {\n          // s.push( ` ${name}=\"${name}\"`)\n          parts.push(` ${name}`)\n        } else if (name === \"style\" && typeof v === \"object\") {\n          parts.push(\n            ` ${name}=\"${Object.keys(v)\n              .filter((k) => v[k] != null)\n              .map((k) => {\n                let vv = v[k]\n                vv = typeof vv === \"number\" ? vv + \"px\" : vv\n                return `${k\n                  .replace(/([a-z])([A-Z])/g, \"$1-$2\")\n                  .toLowerCase()}:${vv}`\n              })\n              .join(\";\")}\"`\n          )\n        } else if (v !== false && v != null) {\n          parts.push(` ${name}=\"${escapeHTML(v.toString())}\"`)\n        }\n      }\n    }\n\n    if (tag !== \"cdata\") {\n      if (xmlMode && !hasChildren) {\n        parts.push(\" />\")\n        return parts.join(\"\")\n      } else {\n        parts.push(\">\")\n      }\n    }\n\n    if (!xmlMode && SELF_CLOSING_TAGS.includes(tag)) {\n      return parts.join(\"\")\n    }\n  }\n\n  // Append children\n  if (hasChildren) {\n    if (typeof children === \"string\") {\n      parts.push(children)\n    } else if (children && children.length > 0) {\n      for (let child of children) {\n        if (child != null && child !== false) {\n          if (!Array.isArray(child)) {\n            child = [child]\n          }\n          for (let c of child) {\n            // todo: this fails if textContent starts with `<` and ends with `>`\n            if (\n              (c.startsWith(\"<\") && c.endsWith(\">\")) ||\n              tag === \"script\" ||\n              tag === \"style\"\n            ) {\n              parts.push(c)\n            } else {\n              parts.push(escapeHTML(c.toString()))\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (attrs.html) {\n    parts.push(attrs.html)\n  }\n\n  if (tag !== \"noop\" && tag !== \"\") {\n    if (tag !== \"cdata\") {\n      parts.push(`</${tag}>`)\n    } else {\n      parts.push(\"]]>\")\n    }\n  }\n  return parts.join(\"\")\n}\n\nexport function html(itag: string, iattrs?: object, ...ichildren: any[]) {\n  let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(false, tag, attrs, children)\n}\n\nexport const htmlVDOM = markup.bind(null, false)\n\nhtml.firstLine = \"<!DOCTYPE html>\"\nhtml.html = true\n\nexport let h = html\n","// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport { parse } from \"css-what\"\nimport { VElement } from \"./vdom\"\n\n// Alternative could be https://github.com/leaverou/parsel\n\nlet cache = {}\n\nexport function parseSelector(selector: string) {\n  let ast = cache[selector]\n  if (ast == null) {\n    ast = parse(selector)\n    cache[selector] = ast\n  }\n  return ast\n}\n\n// Just a very small subset for now: https://github.com/fb55/css-what#api\n\nexport function matchSelector(\n  selector: string,\n  element: VElement,\n  { debug = false } = {}\n) {\n  for (let rules of parseSelector(selector)) {\n    if (debug) {\n      console.log(\"Selector:\", selector)\n      console.log(\"Rules:\", rules)\n      console.log(\"Element:\", element)\n    }\n\n    const handleRules = (element: VElement, rules: any[]) => {\n      let success: boolean = false\n      for (let part of rules) {\n        const { type, name, action, value, ignoreCase = true, data } = part\n        if (type === \"attribute\") {\n          if (action === \"equals\") {\n            success = element.getAttribute(name) === value\n            if (debug) console.log(\"Attribute equals\", success)\n          } else if (action === \"start\") {\n            success = !!element.getAttribute(name)?.startsWith(value)\n            if (debug) console.log(\"Attribute start\", success)\n          } else if (action === \"end\") {\n            success = !!element.getAttribute(name)?.endsWith(value)\n            if (debug) console.log(\"Attribute start\", success)\n          } else if (action === \"element\") {\n            if (name === \"class\") {\n              success = element.classList.contains(value)\n              if (debug) console.log(\"Attribute class\", success)\n            } else {\n              success = !!element.getAttribute(name)?.includes(value)\n              if (debug) console.log(\"Attribute element\", success)\n            }\n          } else if (action === \"exists\") {\n            success = element.hasAttribute(name)\n            if (debug) console.log(\"Attribute exists\", success)\n          } else {\n            console.warn(\"Unknown CSS selector action\", action)\n          }\n        } else if (type === \"tag\") {\n          success = element.tagName === name.toUpperCase()\n          if (debug) console.log(\"Is tag\", success)\n        } else if (type === \"universal\") {\n          success = true\n          if (debug) console.log(\"Is universal\", success)\n        } else if (type === \"pseudo\") {\n          if (name === \"not\") {\n            let ok = true\n            data.forEach((rules) => {\n              if (!handleRules(element, rules)) {\n                ok = false\n              }\n            })\n            success = !ok\n          }\n          if (debug) console.log(\"Is :not\", success)\n          // } else if (type === 'descendant') {\n          //   element = element.\n        } else {\n          console.warn(\"Unknown CSS selector type\", type, selector, rules)\n        }\n        // console.log(success, selector, part, element)\n        if (!success) break\n      }\n      return success\n    }\n\n    if (handleRules(element, rules)) {\n      return true\n    }\n  }\n  return false\n}\n","// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { escapeHTML } from \"./encoding\"\nimport { hFactory } from \"./h\"\nimport { html, htmlVDOM } from \"./html\"\nimport { matchSelector } from \"./vcss\"\n\n// For node debugging\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\")\n\nlet B = { fontWeight: \"bold\" }\nlet I = { fontStyle: \"italic\" }\nlet M = { backgroundColor: \"rgb(255, 250, 165)\" }\nlet U = { textDecorations: \"underline\" }\nlet S = { textDecorations: \"line-through\" }\n// let C = {}\n\nlet DEFAULTS = {\n  b: B,\n  strong: B,\n  em: I,\n  i: I,\n  mark: M,\n  u: U,\n  a: U,\n  s: S,\n  del: S,\n  ins: M,\n  strike: S,\n  // 'code': C,\n  // 'tt': C\n}\n\nlet toCamelCase = (s: string) =>\n  s.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase())\n\nexport class VNode {\n  static ELEMENT_NODE = 1\n  static TEXT_NODE = 3\n  static CDATA_SECTION_NODE = 4\n  static PROCESSING_INSTRUCTION_NODE = 7\n  static COMMENT_NODE = 8\n  static DOCUMENT_NODE = 9\n  static DOCUMENT_TYPE_NODE = 10\n  static DOCUMENT_FRAGMENT_NODE = 11\n\n  _parentNode: any\n  _childNodes: any[]\n\n  get nodeType(): number {\n    console.error(\"Subclasses should define nodeType!\")\n    return 0\n  }\n\n  get nodeName() {\n    console.error(\"Subclasses should define nodeName!\")\n    return \"\"\n  }\n\n  get nodeValue(): string | null {\n    return null\n  }\n\n  constructor() {\n    this._parentNode = null\n    this._childNodes = []\n  }\n\n  cloneNode(deep = false) {\n    // @ts-ignore\n    let node = new this.constructor()\n    if (deep) {\n      node._childNodes = this._childNodes.map((c) => c.cloneNode(true))\n      node._fixChildNodesParent()\n    }\n    return node\n  }\n\n  _fixChildNodesParent() {\n    this._childNodes.forEach((node) => (node._parentNode = this))\n  }\n\n  insertBefore(newNode: VNode, node?: VNode) {\n    if (newNode !== node) {\n      let index = node ? this._childNodes.indexOf(node) : 0\n      if (index < 0) index = 0\n      this._childNodes.splice(index, 0, newNode)\n      this._fixChildNodesParent()\n    }\n  }\n\n  appendChild(node: VNode | VNode[] | string | string[] | null | undefined) {\n    if (node == null) return\n    if (node === this) {\n      console.warn(\"Cannot appendChild to self\")\n      return\n    }\n    // log('appendChild', node, this)\n\n    if (node instanceof VDocument) {\n      console.warn(\"No defined how to append a document to a node!\", node)\n    }\n\n    if (node instanceof VDocumentFragment) {\n      for (let c of [...node._childNodes]) {\n        // Don't iterate over the original! Do [...el]\n        this.appendChild(c)\n      }\n    } else if (Array.isArray(node)) {\n      for (let c of [...node]) {\n        // Don't iterate over the original! Do [...el]\n        this.appendChild(c)\n      }\n    } else if (node instanceof VNode) {\n      node.remove()\n      this._childNodes.push(node)\n    } else {\n      // Fallback for unknown data\n      try {\n        const text =\n          typeof node === \"string\" ? node : JSON.stringify(node, null, 2)\n        this._childNodes.push(new VTextNode(text))\n      } catch (err) {\n        console.error(\n          `The data ${node} to be added to ${this.render()} is problematic: ${err}`\n        )\n      }\n    }\n    this._fixChildNodesParent()\n  }\n\n  append = this.appendChild\n\n  removeChild(node: { _parentNode: null }) {\n    let i = this._childNodes.indexOf(node)\n    if (i >= 0) {\n      node._parentNode = null\n      this._childNodes.splice(i, 1)\n      this._fixChildNodesParent()\n    }\n  }\n\n  remove() {\n    this?.parentNode?.removeChild(this)\n    return this\n  }\n\n  replaceChildren(...nodes: any[]) {\n    this._childNodes = nodes.map((n) =>\n      typeof n === \"string\" ? new VTextNode(n) : n.remove()\n    )\n    this._fixChildNodesParent()\n  }\n\n  replaceWith(...nodes: any[]) {\n    let p = this._parentNode\n    if (p) {\n      let index = this._indexInParent()\n      if (index >= 0) {\n        nodes = nodes.map((n) =>\n          typeof n === \"string\" ? new VTextNode(n) : n.remove()\n        )\n        p._childNodes.splice(index, 1, ...nodes)\n        this._parentNode = null\n        p._fixChildNodesParent()\n      }\n    }\n  }\n\n  _indexInParent() {\n    if (this._parentNode) {\n      return this._parentNode.childNodes.indexOf(this)\n    }\n    return -1\n  }\n\n  get parentNode() {\n    return this._parentNode\n  }\n\n  get childNodes() {\n    return this._childNodes || []\n  }\n\n  get children() {\n    return this._childNodes || []\n  }\n\n  get firstChild() {\n    return this._childNodes[0]\n  }\n\n  get lastChild() {\n    return this._childNodes[this._childNodes.length - 1]\n  }\n\n  get nextSibling() {\n    let i = this._indexInParent()\n    if (i != null) {\n      return this.parentNode.childNodes[i + 1] || null\n    }\n    return null\n  }\n\n  get previousSibling() {\n    let i = this._indexInParent()\n    if (i > 0) {\n      return this.parentNode.childNodes[i - 1] || null\n    }\n    return null\n  }\n\n  flatten(): VElement[] {\n    let elements: VElement[] = []\n    if (this instanceof VElement) {\n      elements.push(this)\n    }\n    for (let child of this._childNodes) {\n      elements.push(...child.flatten())\n    }\n    return elements\n  }\n\n  flattenNodes(): VNode[] {\n    let nodes: VNode[] = []\n    nodes.push(this)\n    for (let child of this._childNodes) {\n      nodes.push(...child.flattenNodes())\n    }\n    return nodes\n  }\n\n  render() {\n    return \"\"\n  }\n\n  get textContent(): string | null {\n    return this._childNodes.map((c) => c.textContent).join(\"\")\n  }\n\n  set textContent(text) {\n    this._childNodes = []\n    if (text) {\n      this.appendChild(new VTextNode(text.toString()))\n    }\n  }\n\n  contains(otherNode: this) {\n    if (otherNode === this) return true\n    // if (this._childNodes.includes(otherNode)) return true\n    return this._childNodes.some((n) => n.contains(otherNode))\n  }\n\n  get ownerDocument() {\n    if (\n      this.nodeType === VNode.DOCUMENT_NODE ||\n      this.nodeType === VNode.DOCUMENT_FRAGMENT_NODE\n    ) {\n      return this\n    }\n    return this?._parentNode?.ownerDocument\n  }\n\n  toString(): string {\n    return `${this.nodeName}`\n    // return `${this.nodeName}: ${JSON.stringify(this.nodeValue)}`\n  }\n\n  [inspect]() {\n    return `${this.constructor.name} \"${this.render()}\"`\n  }\n}\n\nexport class VTextNode extends VNode {\n  _text: string\n\n  get nodeType(): number {\n    return VNode.TEXT_NODE\n  }\n\n  get nodeName() {\n    return \"#text\"\n  }\n\n  get nodeValue(): string | null {\n    return this._text || \"\"\n  }\n\n  get textContent(): string | null {\n    return this.nodeValue\n  }\n\n  constructor(text = \"\") {\n    super()\n    this._text = text\n  }\n\n  render() {\n    const parentTagName = this.parentNode?.tagName\n    if (parentTagName === \"SCRIPT\" || parentTagName === \"STYLE\") {\n      return this._text\n    }\n    return escapeHTML(this._text)\n  }\n\n  cloneNode(deep = false) {\n    let node = super.cloneNode(deep)\n    node._text = this._text\n    return node\n  }\n}\n\nexport class VNodeQuery extends VNode {\n  getElementById(name: string) {\n    return this.flatten().find((e) => e._attributes[\"id\"] === name)\n  }\n\n  getElementsByClassName(name: any) {\n    return this.flatten().filter((e) => e.classList.contains(name))\n  }\n\n  matches(selector: string) {\n    return matchSelector(selector, this as any)\n  }\n\n  querySelectorAll(selector: any) {\n    return this.flatten().filter((e) => e.matches(selector))\n  }\n\n  querySelector(selector: string) {\n    return this.flatten().find((e) => e.matches(selector))\n  }\n\n  //\n\n  parent(selector: string) {\n    if (this.matches(selector)) {\n      return this\n    }\n    if (this.parentNode == null) {\n      return null\n    }\n    return this.parentNode?.parent(selector)\n  }\n\n  handle(selector: any, handler: (arg0: VElement, arg1: number) => void) {\n    let i = 0\n    for (let el of this.querySelectorAll(selector)) {\n      handler(el, i++)\n    }\n  }\n}\n\nexport class VElement extends VNodeQuery {\n  _originalTagName: string\n  _nodeName: any\n  _attributes: Record<string, string>\n  _styles: any\n\n  get nodeType() {\n    return VNode.ELEMENT_NODE\n  }\n\n  get nodeName() {\n    return this._nodeName\n  }\n\n  constructor(name = \"div\", attrs = {}) {\n    super()\n    this._originalTagName = name\n    this._nodeName = (name || \"\").toUpperCase()\n    this._attributes = attrs || {}\n    this._styles = null\n  }\n\n  cloneNode(deep = false) {\n    let node = super.cloneNode(deep)\n    node._originalTagName = this._originalTagName\n    node._nodeName = this._nodeName\n    node._attributes = Object.assign({}, this._attributes)\n    return node\n  }\n\n  get attributes() {\n    return this._attributes\n  }\n\n  _findAttributeName(name: string) {\n    const search = name.toLowerCase()\n    return (\n      Object.keys(this._attributes).find(\n        (name) => search === name.toLowerCase()\n      ) || null\n    )\n  }\n\n  setAttribute(name: string, value: string) {\n    this.removeAttribute(name)\n    this._attributes[name] = value\n    this._styles = null\n  }\n\n  getAttribute(name: string): string | null {\n    const originalName = this._findAttributeName(name)\n    return originalName ? this._attributes[originalName] : null\n  }\n\n  removeAttribute(name: string | number) {\n    const originalName = this._findAttributeName(String(name))\n    if (originalName) {\n      delete this._attributes[name]\n    }\n  }\n\n  hasAttribute(name: any) {\n    const originalName = this._findAttributeName(name)\n    return originalName ? this._attributes[originalName] != null : false\n  }\n\n  get style() {\n    if (this._styles == null) {\n      let styles = Object.assign({}, DEFAULTS[this.tagName.toLowerCase()] || {})\n      let styleString = this.getAttribute(\"style\")\n      if (styleString) {\n        let m: string[] | null\n        let re = /\\s*([\\w-]+)\\s*:\\s*([^;]+)/g\n        while ((m = re.exec(styleString))) {\n          let name = m[1]\n          let value = m[2].trim()\n          styles[name] = value\n          styles[toCamelCase(name)] = value\n        }\n      }\n      this._styles = styles\n    }\n    return this._styles\n  }\n\n  get tagName() {\n    return this._nodeName\n  }\n\n  get id(): string | null {\n    return this._attributes.id || null\n  }\n\n  set id(value: string | null) {\n    if (value == null) delete this._attributes.id\n    else this._attributes.id = value\n  }\n\n  get src(): string | null {\n    return this._attributes.src\n  }\n\n  set src(value: string | null) {\n    if (value == null) delete this._attributes.src\n    else this._attributes.src = value\n  }\n\n  //\n\n  getElementsByTagName(name: string) {\n    name = name.toUpperCase()\n    let elements = this.flatten()\n    if (name !== \"*\") {\n      return elements.filter((e) => e.tagName === name)\n    }\n    return elements\n  }\n\n  // html\n\n  setInnerHTML(html: string) {\n    throw \"setInnerHTML is not implemented; see vdomparser for an example\"\n  }\n\n  get innerHTML() {\n    return this._childNodes.map((c) => c.render(html)).join(\"\")\n  }\n\n  set innerHTML(html) {\n    this.setInnerHTML(html)\n  }\n\n  get outerHTML() {\n    return this.render(htmlVDOM)\n  }\n\n  // class\n\n  get className(): string {\n    return this._attributes[\"class\"] || \"\"\n  }\n\n  set className(name: string | string[]) {\n    if (Array.isArray(name)) {\n      name = name.filter((n) => !!n).join(\" \")\n    } else if (typeof name === \"object\") {\n      name = Object.entries(name)\n        .filter(([k, v]) => !!v)\n        .map(([k, v]) => k)\n        .join(\" \")\n    }\n    this._attributes[\"class\"] = name\n  }\n\n  get classList() {\n    let self = this\n    let classNames = (this.className || \"\").trim().split(/\\s+/g) || []\n    // log('classList', classNames)\n    return {\n      contains(s: any) {\n        return classNames.includes(s)\n      },\n      add(s: any) {\n        if (!classNames.includes(s)) {\n          classNames.push(s)\n          self.className = classNames\n        }\n      },\n      remove(s: any) {\n        let index = classNames.indexOf(s)\n        if (index >= 0) {\n          classNames.splice(index, 1)\n          self.className = classNames\n        }\n      },\n    }\n  }\n\n  //\n\n  render(h = htmlVDOM) {\n    return h(\n      this._originalTagName || this.tagName,\n      this.attributes,\n      this._childNodes.map((c) => c.render(h)).join(\"\") // children:string is not escaped again\n    )\n  }\n}\n\nexport class VDocType extends VNode {\n  //todo\n\n  name: any\n  publicId: any\n  systemId: any\n\n  get nodeName(): string {\n    return super.nodeName\n  }\n\n  get nodeValue(): string | null {\n    return super.nodeValue\n  }\n\n  get nodeType(): number {\n    return VDocType.DOCUMENT_TYPE_NODE\n  }\n\n  render() {\n    return `<!DOCTYPE html>` // hack!\n  }\n}\n\nexport class VDocumentFragment extends VNodeQuery {\n  docType: VDocType\n\n  get nodeType() {\n    return VNode.DOCUMENT_FRAGMENT_NODE\n  }\n\n  get nodeName() {\n    return \"#document-fragment\"\n  }\n\n  render(h = htmlVDOM) {\n    return this._childNodes.map((c) => c.render(h) || []).join(\"\")\n  }\n\n  get innerHTML() {\n    // for debug\n    return this._childNodes.map((c) => c.render(html)).join(\"\")\n  }\n\n  createElement(name: string, attrs = {}) {\n    return new VElement(name, attrs)\n  }\n\n  createDocumentFragment() {\n    return new VDocumentFragment()\n  }\n\n  createTextNode(text?: string) {\n    return new VTextNode(text)\n  }\n}\n\nexport class VDocument extends VDocumentFragment {\n  get nodeType() {\n    return VNode.DOCUMENT_NODE\n  }\n\n  get nodeName() {\n    return \"#document\"\n  }\n\n  get documentElement() {\n    return this.firstChild\n  }\n\n  render(h = htmlVDOM) {\n    let content = super.render(h)\n    if (this.docType) {\n      content = this.docType.render() + content\n    }\n    return content\n  }\n}\n\nexport class VHTMLDocument extends VDocument {\n  constructor(empty: boolean = false) {\n    super()\n    this.docType = new VDocType()\n    if (!empty) {\n      let html = new VElement(\"html\")\n      let body = new VElement(\"body\")\n      let head = new VElement(\"head\")\n      let title = new VElement(\"title\")\n      html.appendChild(head)\n      head.appendChild(title)\n      html.appendChild(body)\n      this.appendChild(html)\n    }\n  }\n\n  get body(): VElement {\n    let body = this.querySelector(\"body\")\n    if (!body) {\n      let html = this.querySelector(\"html\")\n      if (!html) {\n        html = new VElement(\"html\")\n        this.appendChild(html)\n      }\n      body = new VElement(\"body\")\n      html.appendChild(html)\n    }\n    return body\n  }\n\n  get title(): string {\n    return this.querySelector(\"title\")?.textContent || \"\"\n  }\n\n  set title(title: string) {\n    const titleElement = this.querySelector(\"title\")\n    if (titleElement) titleElement.textContent = title\n  }\n\n  get head(): VElement {\n    let head = this.querySelector(\"head\")\n    if (!head) {\n      let html = this.querySelector(\"html\")\n      if (!html) {\n        html = new VElement(\"html\")\n        this.appendChild(html)\n      }\n      head = new VElement(\"head\")\n      html.insertBefore(html)\n    }\n    return head\n  }\n}\n\nexport function createDocument(): VDocument {\n  return new VDocument()\n}\n\nexport function createHTMLDocument(): VHTMLDocument {\n  return new VHTMLDocument()\n}\n\nexport let document = createDocument()\nexport let h = hFactory({ document })\n","// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport { VDocumentFragment, VNodeQuery } from \"./vdom\"\n\nexport function removeBodyContainer(body: VNodeQuery): VNodeQuery {\n  let ehead = body.querySelector(\"head\")\n  let ebody = body.querySelector(\"body\")\n  if (ebody || ehead) {\n    let body = new VDocumentFragment()\n    ehead && body.appendChild(ehead.childNodes)\n    ebody && body.appendChild(ebody.children)\n    return body\n  }\n  return body\n}\n","// Taken from https://github.com/creeperyang/html-parser-lite\n// and slightly modified. Original also under MIT license. Thanks.\n\n// attribute, like href=\"javascript:void(0)\"\n// 1. start with name (not empty and not =)\n// 2. and then \\s*=\\s*\n// 3. and value can be \"value\" | 'value' | value\n// 4. 2 and 3 are optional\nconst attrRe = /([^=\\s]+)(\\s*=\\s*((\"([^\"]*)\")|('([^']*)')|[^>\\s]+))?/gm\nconst endTagRe = /^<\\/([^>\\s]+)[^>]*>/m\n// start tag, like <a href=\"link\"> <img/>\n// 1. must start with <tagName\n// 2. optional attrbutes\n// 3. /> or >\nconst startTagRe =\n  /^<([^>\\s\\/]+)((\\s+[^=>\\s]+(\\s*=\\s*((\"[^\"]*\")|('[^']*')|[^>\\s]+))?)*)\\s*\\/?\\s*>/m\nconst selfCloseTagRe = /\\s*\\/\\s*>\\s*$/m\n\n/**\n * This is a simple html parser. Will read and parse html string.\n *\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\nexport class HtmlParser {\n  scanner: any\n  options: any\n  attrRe = attrRe\n  endTagRe = endTagRe\n  startTagRe = startTagRe\n  defaults = { ignoreWhitespaceText: false }\n\n  constructor(options) {\n    options = options || {}\n    if (options.scanner) {\n      this.scanner = options.scanner\n      options.scanner = null\n    }\n    this.options = Object.assign({}, this.defaults, options)\n  }\n\n  parse(html: string) {\n    let treatAsChars = false\n    let index, match, characters\n    while (html.length) {\n      // comment\n      if (html.substring(0, 4) === \"<!--\") {\n        index = html.indexOf(\"-->\")\n        if (index !== -1) {\n          this.scanner.comment(html.substring(4, index))\n          html = html.substring(index + 3)\n          treatAsChars = false\n        } else {\n          treatAsChars = true\n        }\n      }\n      // end tag\n      else if (html.substring(0, 2) === \"</\") {\n        match = this.endTagRe.exec(html)\n        if (match) {\n          // @ts-ignore\n          html = RegExp.rightContext\n          treatAsChars = false\n          this.parseEndTag(RegExp.lastMatch, match[1])\n        } else {\n          treatAsChars = true\n        }\n      }\n      // start tag\n      else if (html.charAt(0) === \"<\") {\n        match = this.startTagRe.exec(html)\n        if (match) {\n          // @ts-ignore\n          html = RegExp.rightContext\n          treatAsChars = false\n          this.parseStartTag(RegExp.lastMatch, match[1], match)\n        } else {\n          treatAsChars = true\n        }\n      }\n\n      if (treatAsChars) {\n        index = html.indexOf(\"<\")\n\n        if (index === 0) {\n          // First char is a < so find the next one\n          index = html.substring(1).indexOf(\"<\")\n        }\n\n        if (index === -1) {\n          characters = html\n          html = \"\"\n        } else {\n          characters = html.substring(0, index)\n          html = html.substring(index)\n        }\n\n        if (!this.options.ignoreWhitespaceText || !/^\\s*$/.test(characters)) {\n          this.scanner.characters(characters)\n        }\n      }\n\n      treatAsChars = true\n      match = null\n    }\n  }\n\n  parseStartTag(input, tagName, match) {\n    const isSelfColse = selfCloseTagRe.test(input)\n    let attrInput = match[2]\n    if (isSelfColse) {\n      attrInput = attrInput.replace(/\\s*\\/\\s*$/, \"\")\n    }\n    const attrs = this.parseAttributes(tagName, attrInput)\n    this.scanner.startElement(tagName, attrs, isSelfColse, match[0])\n  }\n\n  parseEndTag(input, tagName: string) {\n    this.scanner.endElement(tagName)\n  }\n\n  parseAttributes(tagName, input) {\n    const attrs = {}\n    input.replace(\n      this.attrRe,\n      (attr, name, c2, value, c4, valueInQuote, c6, valueInSingleQuote) => {\n        attrs[name] = valueInSingleQuote ?? valueInQuote ?? value ?? true\n      }\n    )\n    return attrs\n  }\n}\n","// Copyright (c) 2020 Dirk Holtwick. All rights reserved. https://holtwick.de/copyright\n\nimport { unescapeHTML } from \"./encoding\"\nimport { SELF_CLOSING_TAGS } from \"./html\"\nimport { HtmlParser } from \"./htmlparser\"\nimport {\n  document,\n  VDocType,\n  VDocumentFragment,\n  VElement,\n  VHTMLDocument,\n  VNode,\n  VTextNode,\n} from \"./vdom\"\n\n// Makes sure we operate on VNodes\nexport function vdom(obj: VNode | Buffer | string | null = null): VNode {\n  if (obj instanceof VNode) {\n    return obj\n  }\n  if (obj instanceof Buffer) {\n    obj = obj.toString(\"utf-8\")\n  }\n  if (typeof obj === \"string\") {\n    return parseHTML(obj)\n  }\n  // console.warn('Cannot convert to VDOM:', obj)\n  return new VDocumentFragment()\n}\n\nexport function parseHTML(html: string): VDocumentFragment | VHTMLDocument {\n  if (typeof html !== \"string\") {\n    console.error(\"parseHTML requires string, found\", html)\n    throw new Error(\"parseHTML requires string\")\n  }\n\n  let frag =\n    html.indexOf(\"<!\") === 0 ? new VHTMLDocument(true) : new VDocumentFragment() // !hack\n\n  let stack: VNode[] = [frag]\n\n  let parser = new HtmlParser({\n    // the for methods must be implemented yourself\n    scanner: {\n      startElement(\n        tagName: string,\n        attrs: Record<string, string>,\n        isSelfClosing: boolean\n      ) {\n        const lowerTagName = tagName.toLowerCase()\n\n        if (lowerTagName === \"!doctype\") {\n          frag.docType = new VDocType()\n          return\n        }\n\n        for (let name in attrs) {\n          if (attrs.hasOwnProperty(name)) {\n            let value = attrs[name]\n            // console.log(name, value)\n            if (typeof value === \"string\") {\n              attrs[name] = unescapeHTML(value)\n            }\n          }\n        }\n        let parentNode = stack[stack.length - 1]\n        if (parentNode) {\n          const element = document.createElement(tagName, attrs)\n          parentNode.appendChild(element)\n          if (\n            !(\n              SELF_CLOSING_TAGS.includes(tagName.toLowerCase()) || isSelfClosing\n            )\n          ) {\n            stack.push(element)\n          }\n        }\n      },\n      endElement(tagName: string) {\n        stack.pop()\n      },\n      characters(text: string) {\n        text = unescapeHTML(text)\n        let parentNode = stack[stack.length - 1]\n        if (parentNode?.lastChild?.nodeType === VNode.TEXT_NODE) {\n          parentNode.lastChild._text += text\n        } else {\n          if (parentNode) {\n            parentNode.appendChild(new VTextNode(text))\n            // } else {\n            //   console.trace(parentNode, stack)\n          }\n        }\n      },\n      comment(text: string) {},\n    },\n  })\n  parser.parse(html)\n  // console.log(\"frag\", frag)\n  return frag\n}\n\n// export function parseHTML2(html) {\n//   let frag = new VDocumentFragment()\n//\n//   let stack = [frag]\n//   let currentElement = frag\n//\n//   let parser = new Parser({\n//     onopentag: (name, attrs) => {\n//       let element = document.createElement(name, attrs)\n//       stack.push(element)\n//       currentElement.appendChild(element)\n//       currentElement = element\n//     },\n//     ontext: function (text) {\n//       if (currentElement?.lastChild?.nodeType === VNode.TEXT_NODE) {\n//         currentElement.lastChild._text += text\n//       } else {\n//         currentElement.appendChild(new VTextNode(text))\n//       }\n//     },\n//     onclosetag: function (name) {\n//       let element = stack.pop()\n//       currentElement = stack[stack.length - 1]\n//       // if (element.nodeName !== currentElement.nodeName) {\n//       //   console.log('error', element, currentElement)\n//       // }\n//     },\n//   }, { decodeEntities: true })\n//   parser.write(html)\n//   parser.end()\n//\n//   // console.log('frag', frag.innerHTML)\n//\n//   return frag\n// }\n\nVElement.prototype.setInnerHTML = function (html) {\n  let frag = parseHTML(html)\n  this._childNodes = frag._childNodes\n  this._fixChildNodesParent()\n}\n","// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport { VDocument, VNode, VTextNode } from \"./vdom\"\n\nconst SELECTOR_BLOCK_ELEMENTS =\n  \"meta,link,script,p,h1,h2,h3,h4,h5,h6,blockquote,div,ul,ol,li,article,section,footer,head,body,title,nav,section,article,hr,form\"\nconst TAGS_KEEP_CONTENT = [\"PRE\", \"CODE\", \"SCRIPT\", \"STYLE\", \"TT\"]\n\nfunction level(element: VNode): string {\n  let indent = \"\"\n  while (element.parentNode) {\n    indent += \"  \"\n    element = element.parentNode\n  }\n  return indent.substr(2)\n}\n\nexport function tidyDOM(document: VDocument) {\n  document.handle(SELECTOR_BLOCK_ELEMENTS, (e) => {\n    // Ignore if inside PRE etc.\n    let ee = e\n    while (ee) {\n      if (TAGS_KEEP_CONTENT.includes(ee.tagName)) return\n      ee = ee.parentNode\n    }\n\n    let prev = e.previousSibling\n    if (\n      !prev ||\n      prev.nodeType !== VNode.TEXT_NODE ||\n      !prev.nodeValue?.endsWith(\"\\n\")\n    ) {\n      e.parentNode?.insertBefore(new VTextNode(\"\\n\"), e)\n    }\n    e.parentNode?.insertBefore(new VTextNode(level(e)), e)\n\n    let next = e.nextSibling\n    if (\n      !next ||\n      next.nodeType !== VNode.TEXT_NODE ||\n      !next.nodeValue?.startsWith(\"\\n\")\n    ) {\n      if (next) {\n        e.parentNode?.insertBefore(new VTextNode(\"\\n\"), next)\n      } else {\n        e.parentNode?.appendChild(new VTextNode(\"\\n\"))\n      }\n    }\n\n    if (e.childNodes.length) {\n      let first = e.firstChild\n      if (first.nodeType === VNode.TEXT_NODE) {\n        e.insertBefore(new VTextNode(\"\\n\" + level(e) + \"  \"))\n      }\n      e.appendChild(new VTextNode(\"\\n\" + level(e)))\n    }\n  })\n}\n","// (C)opyright 2021-07-20 Dirk Holtwick, holtwick.it. All rights reserved.\n\nimport { hArgumentParser } from \"./h\"\nimport { markup } from \"./html\"\n\nexport function xml(itag: string, iattrs?: object, ...ichildren: any[]) {\n  let { tag, attrs, children } = hArgumentParser(itag, iattrs, ichildren)\n  return markup(true, tag, attrs, children)\n}\n\n// export const xmlVDOM = markup.bind(null, true)\n\nxml.firstLine = '<?xml version=\"1.0\" encoding=\"utf-8\"?>'\nxml.xml = true\n\nexport let h = xml\n"],"mappings":"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V,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChgBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChgBAAgB;AAAA,EAChgBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChgBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,gBAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,GAAG;AAAA,EACH,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,aAAgB;AAAA,EAChB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU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","names":[]}