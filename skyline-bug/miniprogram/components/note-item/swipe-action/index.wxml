<wxs module="swipeAction" src="./swipe-action.wxs"></wxs>

<view
  wx:if="{{disabled}}"
  class="swipe-action class"
  hover-class="{{ hover ? 'swipe-action-hover-class' : '' }}"
  hover-start-time="0"
  hover-stay-time="0"
>
  <slot />
</view>

<!--
  swipe-action
    内部变量数据都存在 swipe-action 的实例 instance 内

    style
      外部样式，wxs 里设置的样式会自动和外部样式合并

    change:xxx
      用于监听属性变化，变化时触发事件

    mut-bind:touchstart
      1. mut 用来阻止触发 page 的 touchstart 事件
      2. 如果关闭状态 touchstart 内部主动去触发 page 的 touchstart 事件，来实现关闭其它打开的 swipe-action

    catch:touchmove
      用于横向滑动时，阻止事件冒泡，防止页面竖向滚动

    capture-bind:xxx
      监听触摸，防止上面 catch:touchmove 阻止本事件，因此使用了 capture-bind

  slot

    capture-bind:touchstart
      1. wxs 事件无法使用三目运算符
      2. 打开时（isOpen: true）触发 swipeAction.touchstart，以便可以触摸滑动关闭

    capture-catch:tap
      打开时（isOpen: true）阻止内部的点击事件

  slot 子节点
    阻止 swiper
      打开时（isOpen: true）利用 css 子代选择器、后代选择器（a > b、a b）设置了 pointer-events: none; 阻止触摸事件
 -->
<view
  wx:else
  class="swipe-action class {{touching ? '' : 'transition'}} {{isOpen ? 'slot-touchmove-disabled' : ''}}"
  hover-class="{{ hover ? 'swipe-action-hover-class' : '' }}"
  hover-start-time="0"
  hover-stay-time="0"
  style="{{style}}"
  isOpen="{{isOpen}}"
  change:isOpen="{{swipeAction.onIsOpenChange}}"
  rightWidth="{{rightWidth}}"
  change:rightWidth="{{swipeAction.onRightWidthChange}}"
  mut-bind:touchstart="{{swipeAction.touchstart}}"
  catch:touchmove="{{stopTouchmove ? 'noop': ''}}"
  capture-bind:touchmove="{{swipeAction.touchmove}}"
  capture-bind:touchend="{{swipeAction.touchend}}"
  capture-bind:touchcancel="{{swipeAction.touchend}}"
>
  <slot
    capture-bind:touchstart="{{swipeAction.slotTouchstart}}"
    capture-catch:tap="{{isOpen ? 'close' : ''}}"
  />
  <view class="swipe-action-right" style="width:{{rightWidth}}px;">
    <slot name="right" />
  </view>
</view>
